
(; D : Set_2 = Set_1 ;)
def D : pts.El pts.var (pts.u pts.var) := pts.u pts.var.

(; c : D = Set_0 -> Set_0 ;)
def c : pts.El pts.var D := pts.Prod pts.var pts.var (pts.u pts.var) (x => pts.u pts.var).

(; eq : (A : Set_3) -> A -> A -> Set_3 ;)
eq : pts.El pts.var (pts.Prod pts.var pts.var (pts.u pts.var) (A => pts.Prod pts.var pts.var A (a => pts.Prod pts.var pts.var A (b => pts.u pts.var)))).

(; F : D -> D = fun z : D => eq Set_2 c z ;)
def F : pts.El pts.var (pts.Prod pts.var pts.var D (y => pts.u pts.var)) := z => eq (pts.u pts.var) c z.

(; problem : Set_1 = F c ;)
def problem : pts.El pts.var (pts.u pts.var) := F c.
