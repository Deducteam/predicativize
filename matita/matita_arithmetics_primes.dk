divides :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) -> pts.U pts.var.

quotient :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El
        pts.var
        (matita_basics_logic.eq matita_arithmetics_nat.nat m (matita_arithmetics_nat.times n q))) ->
  pts.El pts.var (divides n m).

def match_divides :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  return_sort:pts.Lvl ->
  return_type:(z:(pts.El pts.var (divides _n _m)) -> pts.U return_sort) ->
  case_quotient:(q:(pts.El pts.var matita_arithmetics_nat.nat) ->
                 __:(pts.El
                       pts.var
                       (matita_basics_logic.eq matita_arithmetics_nat.nat _m (matita_arithmetics_nat.times _n q))) ->
                 pts.El return_sort (return_type (quotient _n _m q __))) ->
  z:(pts.El pts.var (divides _n _m)) -> pts.El return_sort (return_type z).

[__, q, case_quotient, return_type, return_sort, _m, _n]
  match_divides _n _m return_sort return_type case_quotient (quotient _n _m q __)
  -->
  case_quotient q __.

def filter_divides :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  return_sort:pts.Lvl ->
  return_type:(z:(pts.El pts.var (divides _n _m)) -> pts.U return_sort) ->
  return:(z:(pts.El pts.var (divides _n _m)) -> pts.El return_sort (return_type z)) ->
  z:(pts.El pts.var (divides _n _m)) -> pts.El return_sort (return_type z).

[__, q, return, return_type, return_sort, m, n]
  filter_divides n m return_sort return_type return (quotient n m q __)
  -->
  return (quotient n m q __).

def divides_ind :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Q_:(_x_1192:(pts.El pts.var (divides _n _m)) -> pts.U pts.var) ->
  _H_quotient:(q:(pts.El pts.var matita_arithmetics_nat.nat) ->
               x_1193:(pts.El
                         pts.var
                         (matita_basics_logic.eq matita_arithmetics_nat.nat _m (matita_arithmetics_nat.times _n q))) ->
               pts.El pts.var (Q_ (quotient _n _m q x_1193))) ->
  x_1192:(pts.El pts.var (divides _n _m)) -> pts.El pts.var (Q_ x_1192).

def divides_ind_body :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Q_:(_x_1192:(pts.El pts.var (divides _n _m)) -> pts.U pts.var) ->
  _H_quotient:(q:(pts.El pts.var matita_arithmetics_nat.nat) ->
               x_1193:(pts.El
                         pts.var
                         (matita_basics_logic.eq matita_arithmetics_nat.nat _m (matita_arithmetics_nat.times _n q))) ->
               pts.El pts.var (Q_ (quotient _n _m q x_1193))) ->
  x_1192:(pts.El pts.var (divides _n _m)) -> pts.El pts.var (Q_ x_1192).

[x_1192, _H_quotient, Q_, _m, _n]
  divides_ind _n _m Q_ _H_quotient x_1192
  -->
  filter_divides
    _n
    _m
    pts.var
    (x_1192:(pts.El pts.var (divides _n _m)) => Q_ x_1192)
    (divides_ind_body _n _m Q_ _H_quotient)
    x_1192.

[x_1192, _H_quotient, Q_, _m, _n]
  divides_ind_body _n _m Q_ _H_quotient x_1192
  -->
  match_divides
    _n
    _m
    pts.var
    Q_
    (q:(pts.El pts.var matita_arithmetics_nat.nat) =>
     x_1193:(pts.El
               pts.var
               (matita_basics_logic.eq
                  matita_arithmetics_nat.nat
                  _m
                  (matita_arithmetics_nat.times _n q))) =>
     _H_quotient q x_1193)
    x_1192.

def divides_inv_ind :
  x1:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x2:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Hterm:(pts.El pts.var (divides x1 x2)) ->
  P:(_z2006:(pts.El pts.var (divides x1 x2)) -> pts.U pts.var) ->
  _H1:(q:(pts.El pts.var matita_arithmetics_nat.nat) ->
       x_1193:(pts.El
                 pts.var
                 (matita_basics_logic.eq matita_arithmetics_nat.nat x2 (matita_arithmetics_nat.times x1 q))) ->
       _z2007:(pts.El pts.var (matita_basics_logic.eq (divides x1 x2) Hterm (quotient x1 x2 q x_1193))) ->
       pts.El pts.var (P (quotient x1 x2 q x_1193))) ->
  pts.El pts.var (P Hterm)
  :=
  x1:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x2:(pts.El pts.var matita_arithmetics_nat.nat) =>
  Hterm:(pts.El pts.var (divides x1 x2)) =>
  P:(_z2006:(pts.El pts.var (divides x1 x2)) -> pts.U pts.var) =>
  H1:(q:(pts.El pts.var matita_arithmetics_nat.nat) ->
      x_1193:(pts.El
                pts.var
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   x2
                   (matita_arithmetics_nat.times x1 q))) ->
      _z2007:(pts.El pts.var (matita_basics_logic.eq (divides x1 x2) Hterm (quotient x1 x2 q x_1193))) ->
      pts.El pts.var (P (quotient x1 x2 q x_1193))) =>
  divides_ind
    x1
    x2
    (_x_1192:(pts.El pts.var (divides x1 x2)) =>
     pts.Prod
       pts.var
       pts.var
       (matita_basics_logic.eq (divides x1 x2) Hterm _x_1192)
       (_z2007:(pts.El pts.var (matita_basics_logic.eq (divides x1 x2) Hterm _x_1192)) => P _x_1192))
    H1
    Hterm
    (matita_basics_logic.refl (divides x1 x2) Hterm).

def reflexive_divides :
  pts.El pts.var (matita_basics_relations.reflexive matita_arithmetics_nat.nat divides)
  :=
  x:(pts.El pts.var matita_arithmetics_nat.nat) =>
  quotient
    x
    x
    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
    (matita_basics_logic.rewrite_r
       matita_arithmetics_nat.nat
       (matita_arithmetics_nat.times x (matita_arithmetics_nat.S matita_arithmetics_nat.O))
       (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
        matita_basics_logic.eq
          matita_arithmetics_nat.nat
          __
          (matita_arithmetics_nat.times x (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
       (matita_basics_logic.refl
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.times x (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
       x
       (matita_arithmetics_nat.times_n_1 x)).

def divides_to_div_mod_spec :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) ->
  __1:(pts.El pts.var (divides n m)) ->
  pts.El
    pts.var
    (matita_arithmetics_div_and_mod.div_mod_spec
       m
       n
       (matita_arithmetics_div_and_mod.div m n)
       matita_arithmetics_nat.O)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) =>
  _clearme:(pts.El pts.var (divides n m)) =>
  match_divides
    n
    m
    pts.var
    (__:(pts.El pts.var (divides n m)) =>
     matita_arithmetics_div_and_mod.div_mod_spec
       m
       n
       (matita_arithmetics_div_and_mod.div m n)
       matita_arithmetics_nat.O)
    (q:(pts.El pts.var matita_arithmetics_nat.nat) =>
     eqm:(pts.El
            pts.var
            (matita_basics_logic.eq
               matita_arithmetics_nat.nat
               m
               (matita_arithmetics_nat.times n q))) =>
     matita_arithmetics_div_and_mod.div_mod_spec_intro
       m
       n
       (matita_arithmetics_div_and_mod.div m n)
       matita_arithmetics_nat.O
       posn
       (matita_basics_logic.eq_ind_r
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.times n q)
          (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
           __:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    matita_arithmetics_nat.nat
                    x
                    (matita_arithmetics_nat.times n q))) =>
           matita_basics_logic.eq
             matita_arithmetics_nat.nat
             x
             (matita_arithmetics_nat.plus
                (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div x n) n)
                matita_arithmetics_nat.O))
          (matita_basics_logic.eq_ind_r
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.times q n)
             (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
              __:(pts.El
                    pts.var
                    (matita_basics_logic.eq
                       matita_arithmetics_nat.nat
                       x
                       (matita_arithmetics_nat.times q n))) =>
              matita_basics_logic.eq
                matita_arithmetics_nat.nat
                x
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div x n) n)
                   matita_arithmetics_nat.O))
             (matita_basics_logic.eq_ind_r
                matita_arithmetics_nat.nat
                q
                (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 __:(pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat x q)) =>
                 matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.times q n)
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times x n)
                      matita_arithmetics_nat.O))
                (matita_basics_logic.rewrite_r
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.times n q)
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      __
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.times q n)
                         matita_arithmetics_nat.O))
                   (matita_basics_logic.rewrite_l
                      matita_arithmetics_nat.nat
                      m
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         __
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.times q n)
                            matita_arithmetics_nat.O))
                      (matita_basics_logic.rewrite_r
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.times n q)
                         (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            m
                            (matita_arithmetics_nat.plus __ matita_arithmetics_nat.O))
                         (matita_basics_logic.rewrite_l
                            matita_arithmetics_nat.nat
                            m
                            (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                             matita_basics_logic.eq
                               matita_arithmetics_nat.nat
                               m
                               (matita_arithmetics_nat.plus __ matita_arithmetics_nat.O))
                            (matita_basics_logic.rewrite_l
                               matita_arithmetics_nat.nat
                               m
                               (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                matita_basics_logic.eq matita_arithmetics_nat.nat m __)
                               (matita_basics_logic.refl matita_arithmetics_nat.nat m)
                               (matita_arithmetics_nat.plus m matita_arithmetics_nat.O)
                               (matita_arithmetics_nat.plus_n_O m))
                            (matita_arithmetics_nat.times n q)
                            eqm)
                         (matita_arithmetics_nat.times q n)
                         (matita_arithmetics_nat.commutative_times q n))
                      (matita_arithmetics_nat.times n q)
                      eqm)
                   (matita_arithmetics_nat.times q n)
                   (matita_arithmetics_nat.commutative_times q n))
                (matita_arithmetics_div_and_mod.div (matita_arithmetics_nat.times q n) n)
                (matita_arithmetics_div_and_mod.div_times q n posn))
             (matita_arithmetics_nat.times n q)
             (matita_arithmetics_nat.commutative_times n q))
          m
          eqm))
    _clearme.

def div_mod_spec_to_divides :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_div_and_mod.div_mod_spec m n q matita_arithmetics_nat.O)) ->
  pts.El pts.var (divides n m)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  q:(pts.El pts.var matita_arithmetics_nat.nat) =>
  _clearme:(pts.El
              pts.var
              (matita_arithmetics_div_and_mod.div_mod_spec m n q matita_arithmetics_nat.O)) =>
  matita_arithmetics_div_and_mod.match_div_mod_spec
    m
    n
    q
    matita_arithmetics_nat.O
    pts.var
    (__:(pts.El
           pts.var
           (matita_arithmetics_div_and_mod.div_mod_spec m n q matita_arithmetics_nat.O)) =>
     divides n m)
    (posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) =>
     eqm:(pts.El
            pts.var
            (matita_basics_logic.eq
               matita_arithmetics_nat.nat
               m
               (matita_arithmetics_nat.plus
                  (matita_arithmetics_nat.times q n)
                  matita_arithmetics_nat.O))) =>
     quotient
       n
       m
       q
       (matita_basics_logic.rewrite_r
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.times n q)
          (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
           matita_basics_logic.eq matita_arithmetics_nat.nat __ (matita_arithmetics_nat.times n q))
          (matita_basics_logic.refl matita_arithmetics_nat.nat (matita_arithmetics_nat.times n q))
          m
          (matita_basics_logic.rewrite_r
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.plus
                matita_arithmetics_nat.O
                (matita_arithmetics_nat.times n q))
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq matita_arithmetics_nat.nat m __)
             (matita_basics_logic.rewrite_l
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.times n q)
                   matita_arithmetics_nat.O)
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq matita_arithmetics_nat.nat m __)
                (matita_basics_logic.rewrite_l
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.times q n)
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      m
                      (matita_arithmetics_nat.plus __ matita_arithmetics_nat.O))
                   eqm
                   (matita_arithmetics_nat.times n q)
                   (matita_arithmetics_nat.commutative_times q n))
                (matita_arithmetics_nat.plus
                   matita_arithmetics_nat.O
                   (matita_arithmetics_nat.times n q))
                (matita_arithmetics_nat.commutative_plus
                   (matita_arithmetics_nat.times n q)
                   matita_arithmetics_nat.O))
             (matita_arithmetics_nat.times n q)
             (matita_arithmetics_nat.plus_O_n (matita_arithmetics_nat.times n q)))))
    _clearme.

def divides_to_mod_O :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) ->
  __1:(pts.El pts.var (divides n m)) ->
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (matita_arithmetics_div_and_mod.mod m n)
       matita_arithmetics_nat.O)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) =>
  divnm:(pts.El pts.var (divides n m)) =>
  matita_arithmetics_div_and_mod.div_mod_spec_to_eq2
    m
    n
    (matita_arithmetics_div_and_mod.div m n)
    (matita_arithmetics_div_and_mod.mod m n)
    (matita_arithmetics_div_and_mod.div m n)
    matita_arithmetics_nat.O
    (matita_arithmetics_div_and_mod.div_mod_spec_div_mod m n posn)
    (divides_to_div_mod_spec n m posn divnm).

def mod_O_to_divides :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) ->
  __1:(pts.El
         pts.var
         (matita_basics_logic.eq
            matita_arithmetics_nat.nat
            (matita_arithmetics_div_and_mod.mod m n)
            matita_arithmetics_nat.O)) ->
  pts.El pts.var (divides n m)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  auto:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) =>
  auto':(pts.El
           pts.var
           (matita_basics_logic.eq
              matita_arithmetics_nat.nat
              (matita_arithmetics_div_and_mod.mod m n)
              matita_arithmetics_nat.O)) =>
  quotient
    n
    m
    (matita_arithmetics_div_and_mod.div m n)
    (matita_basics_logic.rewrite_l
       matita_arithmetics_nat.nat
       (matita_arithmetics_nat.times n (matita_arithmetics_div_and_mod.div m n))
       (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
        matita_basics_logic.eq
          matita_arithmetics_nat.nat
          __
          (matita_arithmetics_nat.times n (matita_arithmetics_div_and_mod.div m n)))
       (matita_basics_logic.refl
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.times n (matita_arithmetics_div_and_mod.div m n)))
       m
       (matita_basics_logic.rewrite_r
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.minus m matita_arithmetics_nat.O)
          (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
           matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.times n (matita_arithmetics_div_and_mod.div m n))
             __)
          (matita_basics_logic.rewrite_l
             matita_arithmetics_nat.nat
             (matita_arithmetics_div_and_mod.mod m n)
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.times n (matita_arithmetics_div_and_mod.div m n))
                (matita_arithmetics_nat.minus m __))
             (matita_basics_logic.rewrite_l
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div m n) n)
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   __
                   (matita_arithmetics_nat.minus m (matita_arithmetics_div_and_mod.mod m n)))
                (matita_arithmetics_div_and_mod.eq_times_div_minus_mod m n)
                (matita_arithmetics_nat.times n (matita_arithmetics_div_and_mod.div m n))
                (matita_arithmetics_nat.commutative_times
                   (matita_arithmetics_div_and_mod.div m n)
                   n))
             matita_arithmetics_nat.O
             auto')
          m
          (matita_arithmetics_nat.minus_n_O m))).

def divides_n_O :
  n:(pts.El pts.var matita_arithmetics_nat.nat) -> pts.El pts.var (divides n matita_arithmetics_nat.O)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  quotient
    n
    matita_arithmetics_nat.O
    matita_arithmetics_nat.O
    (matita_basics_logic.rewrite_r
       matita_arithmetics_nat.nat
       (matita_arithmetics_nat.times n matita_arithmetics_nat.O)
       (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
        matita_basics_logic.eq
          matita_arithmetics_nat.nat
          __
          (matita_arithmetics_nat.times n matita_arithmetics_nat.O))
       (matita_basics_logic.refl
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.times n matita_arithmetics_nat.O))
       matita_arithmetics_nat.O
       (matita_arithmetics_nat.times_n_O n)).

def divides_n_n :
  n:(pts.El pts.var matita_arithmetics_nat.nat) -> pts.El pts.var (divides n n)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) => reflexive_divides n.

def divides_SO_n :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  pts.El pts.var (divides (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  quotient
    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
    n
    n
    (matita_basics_logic.rewrite_r
       matita_arithmetics_nat.nat
       (matita_arithmetics_nat.times n (matita_arithmetics_nat.S matita_arithmetics_nat.O))
       (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
        matita_basics_logic.eq matita_arithmetics_nat.nat n __)
       (matita_basics_logic.rewrite_l
          matita_arithmetics_nat.nat
          n
          (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
           matita_basics_logic.eq matita_arithmetics_nat.nat n __)
          (matita_basics_logic.refl matita_arithmetics_nat.nat n)
          (matita_arithmetics_nat.times n (matita_arithmetics_nat.S matita_arithmetics_nat.O))
          (matita_arithmetics_nat.times_n_1 n))
       (matita_arithmetics_nat.times (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)
       (matita_arithmetics_nat.commutative_times
          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
          n)).

def divides_plus :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  p:(pts.El pts.var matita_arithmetics_nat.nat) ->
  q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (divides n p)) ->
  __1:(pts.El pts.var (divides n q)) -> pts.El pts.var (divides n (matita_arithmetics_nat.plus p q))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  p:(pts.El pts.var matita_arithmetics_nat.nat) =>
  q:(pts.El pts.var matita_arithmetics_nat.nat) =>
  _clearme:(pts.El pts.var (divides n p)) =>
  match_divides
    n
    p
    pts.var
    (__:(pts.El pts.var (divides n p)) =>
     pts.Prod
       pts.var
       pts.var
       (divides n q)
       (__1:(pts.El pts.var (divides n q)) => divides n (matita_arithmetics_nat.plus p q)))
    (d1:(pts.El pts.var matita_arithmetics_nat.nat) =>
     H:(pts.El
          pts.var
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             p
             (matita_arithmetics_nat.times n d1))) =>
     _clearme0:(pts.El pts.var (divides n q)) =>
     match_divides
       n
       q
       pts.var
       (__:(pts.El pts.var (divides n q)) => divides n (matita_arithmetics_nat.plus p q))
       (d2:(pts.El pts.var matita_arithmetics_nat.nat) =>
        H1:(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 q
                 (matita_arithmetics_nat.times n d2))) =>
        quotient
          n
          (matita_arithmetics_nat.plus p q)
          (matita_arithmetics_nat.plus d1 d2)
          (matita_basics_logic.eq_ind_r
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.times n d1)
             (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
              __:(pts.El
                    pts.var
                    (matita_basics_logic.eq
                       matita_arithmetics_nat.nat
                       x
                       (matita_arithmetics_nat.times n d1))) =>
              matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.plus x q)
                (matita_arithmetics_nat.times n (matita_arithmetics_nat.plus d1 d2)))
             (matita_basics_logic.eq_ind_r
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.times n d2)
                (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 __:(pts.El
                       pts.var
                       (matita_basics_logic.eq
                          matita_arithmetics_nat.nat
                          x
                          (matita_arithmetics_nat.times n d2))) =>
                 matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.plus (matita_arithmetics_nat.times n d1) x)
                   (matita_arithmetics_nat.times n (matita_arithmetics_nat.plus d1 d2)))
                (matita_basics_logic.rewrite_l
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.times n (matita_arithmetics_nat.plus d1 d2))
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      __
                      (matita_arithmetics_nat.times n (matita_arithmetics_nat.plus d1 d2)))
                   (matita_basics_logic.refl
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.times n (matita_arithmetics_nat.plus d1 d2)))
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times n d1)
                      (matita_arithmetics_nat.times n d2))
                   (matita_arithmetics_nat.distributive_times_plus n d1 d2))
                q
                H1)
             p
             H))
       _clearme0)
    _clearme.

def divides_minus :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  p:(pts.El pts.var matita_arithmetics_nat.nat) ->
  q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (divides n p)) ->
  __1:(pts.El pts.var (divides n q)) -> pts.El pts.var (divides n (matita_arithmetics_nat.minus p q))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  p:(pts.El pts.var matita_arithmetics_nat.nat) =>
  q:(pts.El pts.var matita_arithmetics_nat.nat) =>
  _clearme:(pts.El pts.var (divides n p)) =>
  match_divides
    n
    p
    pts.var
    (__:(pts.El pts.var (divides n p)) =>
     pts.Prod
       pts.var
       pts.var
       (divides n q)
       (__1:(pts.El pts.var (divides n q)) => divides n (matita_arithmetics_nat.minus p q)))
    (d1:(pts.El pts.var matita_arithmetics_nat.nat) =>
     H:(pts.El
          pts.var
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             p
             (matita_arithmetics_nat.times n d1))) =>
     _clearme0:(pts.El pts.var (divides n q)) =>
     match_divides
       n
       q
       pts.var
       (__:(pts.El pts.var (divides n q)) => divides n (matita_arithmetics_nat.minus p q))
       (d2:(pts.El pts.var matita_arithmetics_nat.nat) =>
        H1:(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 q
                 (matita_arithmetics_nat.times n d2))) =>
        quotient
          n
          (matita_arithmetics_nat.minus p q)
          (matita_arithmetics_nat.minus d1 d2)
          (matita_basics_logic.eq_ind_r
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.times n d1)
             (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
              __:(pts.El
                    pts.var
                    (matita_basics_logic.eq
                       matita_arithmetics_nat.nat
                       x
                       (matita_arithmetics_nat.times n d1))) =>
              matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.minus x q)
                (matita_arithmetics_nat.times n (matita_arithmetics_nat.minus d1 d2)))
             (matita_basics_logic.eq_ind_r
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.times n d2)
                (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 __:(pts.El
                       pts.var
                       (matita_basics_logic.eq
                          matita_arithmetics_nat.nat
                          x
                          (matita_arithmetics_nat.times n d2))) =>
                 matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.minus (matita_arithmetics_nat.times n d1) x)
                   (matita_arithmetics_nat.times n (matita_arithmetics_nat.minus d1 d2)))
                (matita_basics_logic.rewrite_l
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.times n (matita_arithmetics_nat.minus d1 d2))
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      __
                      (matita_arithmetics_nat.times n (matita_arithmetics_nat.minus d1 d2)))
                   (matita_basics_logic.refl
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.times n (matita_arithmetics_nat.minus d1 d2)))
                   (matita_arithmetics_nat.minus
                      (matita_arithmetics_nat.times n d1)
                      (matita_arithmetics_nat.times n d2))
                   (matita_arithmetics_nat.distributive_times_minus n d1 d2))
                q
                H1)
             p
             H))
       _clearme0)
    _clearme.

def divides_times :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  p:(pts.El pts.var matita_arithmetics_nat.nat) ->
  q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (divides n p)) ->
  __1:(pts.El pts.var (divides m q)) ->
  pts.El pts.var (divides (matita_arithmetics_nat.times n m) (matita_arithmetics_nat.times p q))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  p:(pts.El pts.var matita_arithmetics_nat.nat) =>
  q:(pts.El pts.var matita_arithmetics_nat.nat) =>
  _clearme:(pts.El pts.var (divides n p)) =>
  match_divides
    n
    p
    pts.var
    (__:(pts.El pts.var (divides n p)) =>
     pts.Prod
       pts.var
       pts.var
       (divides m q)
       (__1:(pts.El pts.var (divides m q)) =>
        divides (matita_arithmetics_nat.times n m) (matita_arithmetics_nat.times p q)))
    (d1:(pts.El pts.var matita_arithmetics_nat.nat) =>
     H:(pts.El
          pts.var
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             p
             (matita_arithmetics_nat.times n d1))) =>
     _clearme0:(pts.El pts.var (divides m q)) =>
     match_divides
       m
       q
       pts.var
       (__:(pts.El pts.var (divides m q)) =>
        divides (matita_arithmetics_nat.times n m) (matita_arithmetics_nat.times p q))
       (d2:(pts.El pts.var matita_arithmetics_nat.nat) =>
        H1:(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 q
                 (matita_arithmetics_nat.times m d2))) =>
        quotient
          (matita_arithmetics_nat.times n m)
          (matita_arithmetics_nat.times p q)
          (matita_arithmetics_nat.times d1 d2)
          (matita_basics_logic.eq_ind_r
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.times n d1)
             (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
              __:(pts.El
                    pts.var
                    (matita_basics_logic.eq
                       matita_arithmetics_nat.nat
                       x
                       (matita_arithmetics_nat.times n d1))) =>
              matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.times x q)
                (matita_arithmetics_nat.times
                   (matita_arithmetics_nat.times n m)
                   (matita_arithmetics_nat.times d1 d2)))
             (matita_basics_logic.eq_ind_r
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.times n (matita_arithmetics_nat.times d1 q))
                (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 __:(pts.El
                       pts.var
                       (matita_basics_logic.eq
                          matita_arithmetics_nat.nat
                          x
                          (matita_arithmetics_nat.times
                             n
                             (matita_arithmetics_nat.times d1 q)))) =>
                 matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   x
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_nat.times n m)
                      (matita_arithmetics_nat.times d1 d2)))
                (matita_basics_logic.eq_ind_r
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.times
                      n
                      (matita_arithmetics_nat.times m (matita_arithmetics_nat.times d1 d2)))
                   (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    __:(pts.El
                          pts.var
                          (matita_basics_logic.eq
                             matita_arithmetics_nat.nat
                             x
                             (matita_arithmetics_nat.times
                                n
                                (matita_arithmetics_nat.times
                                   m
                                   (matita_arithmetics_nat.times d1 d2))))) =>
                    matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.times n (matita_arithmetics_nat.times d1 q))
                      x)
                   (matita_basics_logic.eq_f
                      matita_arithmetics_nat.nat
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.times n)
                      (matita_arithmetics_nat.times d1 q)
                      (matita_arithmetics_nat.times m (matita_arithmetics_nat.times d1 d2))
                      (matita_basics_logic.rewrite_l
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.times m (matita_arithmetics_nat.times d1 d2))
                         (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            __
                            (matita_arithmetics_nat.times
                               m
                               (matita_arithmetics_nat.times d1 d2)))
                         (matita_basics_logic.refl
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.times
                               m
                               (matita_arithmetics_nat.times d1 d2)))
                         (matita_arithmetics_nat.times d1 q)
                         (matita_basics_logic.rewrite_r
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.times m d2)
                            (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                             matita_basics_logic.eq
                               matita_arithmetics_nat.nat
                               (matita_arithmetics_nat.times
                                  m
                                  (matita_arithmetics_nat.times d1 d2))
                               (matita_arithmetics_nat.times d1 __))
                            (matita_arithmetics_nat.times_times m d1 d2)
                            q
                            H1)))
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_nat.times n m)
                      (matita_arithmetics_nat.times d1 d2))
                   (matita_arithmetics_nat.associative_times
                      n
                      m
                      (matita_arithmetics_nat.times d1 d2)))
                (matita_arithmetics_nat.times (matita_arithmetics_nat.times n d1) q)
                (matita_arithmetics_nat.associative_times n d1 q))
             p
             H))
       _clearme0)
    _clearme.

def transitive_divides :
  pts.El pts.var (matita_basics_relations.transitive matita_arithmetics_nat.nat divides)
  :=
  a:(pts.El pts.var matita_arithmetics_nat.nat) =>
  b:(pts.El pts.var matita_arithmetics_nat.nat) =>
  c:(pts.El pts.var matita_arithmetics_nat.nat) =>
  _clearme:(pts.El pts.var (divides a b)) =>
  match_divides
    a
    b
    pts.var
    (__:(pts.El pts.var (divides a b)) =>
     pts.Prod pts.var pts.var (divides b c) (__1:(pts.El pts.var (divides b c)) => divides a c))
    (d1:(pts.El pts.var matita_arithmetics_nat.nat) =>
     H:(pts.El
          pts.var
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             b
             (matita_arithmetics_nat.times a d1))) =>
     _clearme0:(pts.El pts.var (divides b c)) =>
     match_divides
       b
       c
       pts.var
       (__:(pts.El pts.var (divides b c)) => divides a c)
       (d2:(pts.El pts.var matita_arithmetics_nat.nat) =>
        H1:(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 c
                 (matita_arithmetics_nat.times b d2))) =>
        quotient
          a
          c
          (matita_arithmetics_nat.times d1 d2)
          (matita_basics_logic.eq_ind_r
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.times b d2)
             (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
              __:(pts.El
                    pts.var
                    (matita_basics_logic.eq
                       matita_arithmetics_nat.nat
                       x
                       (matita_arithmetics_nat.times b d2))) =>
              matita_basics_logic.eq
                matita_arithmetics_nat.nat
                x
                (matita_arithmetics_nat.times a (matita_arithmetics_nat.times d1 d2)))
             (matita_basics_logic.eq_ind_r
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.times a d1)
                (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 __:(pts.El
                       pts.var
                       (matita_basics_logic.eq
                          matita_arithmetics_nat.nat
                          x
                          (matita_arithmetics_nat.times a d1))) =>
                 matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.times x d2)
                   (matita_arithmetics_nat.times a (matita_arithmetics_nat.times d1 d2)))
                (matita_basics_logic.rewrite_r
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.times a (matita_arithmetics_nat.times d1 d2))
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      __
                      (matita_arithmetics_nat.times a (matita_arithmetics_nat.times d1 d2)))
                   (matita_basics_logic.refl
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.times a (matita_arithmetics_nat.times d1 d2)))
                   (matita_arithmetics_nat.times (matita_arithmetics_nat.times a d1) d2)
                   (matita_arithmetics_nat.associative_times a d1 d2))
                b
                H)
             c
             H1))
       _clearme0)
    _clearme.

def eq_mod_to_divides :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O q)) ->
  __1:(pts.El
         pts.var
         (matita_basics_logic.eq
            matita_arithmetics_nat.nat
            (matita_arithmetics_div_and_mod.mod n q)
            (matita_arithmetics_div_and_mod.mod m q))) ->
  pts.El pts.var (divides q (matita_arithmetics_nat.minus n m))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  q:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posq:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O q)) =>
  eqmod:(pts.El
           pts.var
           (matita_basics_logic.eq
              matita_arithmetics_nat.nat
              (matita_arithmetics_div_and_mod.mod n q)
              (matita_arithmetics_div_and_mod.mod m q))) =>
  matita_arithmetics_nat.leb_elim
    n
    m
    (__:(pts.El pts.var matita_basics_bool.bool) => divides q (matita_arithmetics_nat.minus n m))
    (nm:(pts.El pts.var (matita_arithmetics_nat.le n m)) =>
     matita_basics_logic.eq_coerc
       (divides q matita_arithmetics_nat.O)
       (divides q (matita_arithmetics_nat.minus n m))
       (divides_n_O q)
       (matita_basics_logic.rewrite_r
          matita_arithmetics_nat.nat
          matita_arithmetics_nat.O
          (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
           matita_basics_logic.eq
             (pts.u pts.var)
             (divides q matita_arithmetics_nat.O)
             (divides q __))
          (matita_basics_logic.refl (pts.u pts.var) (divides q matita_arithmetics_nat.O))
          (matita_arithmetics_nat.minus n m)
          (matita_basics_logic.sym_eq
             matita_arithmetics_nat.nat
             matita_arithmetics_nat.O
             (matita_arithmetics_nat.minus n m)
             (matita_basics_logic.eq_coerc
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.minus
                      matita_arithmetics_nat.O
                      (matita_arithmetics_nat.minus m n))
                   (matita_arithmetics_nat.minus
                      (matita_arithmetics_nat.plus matita_arithmetics_nat.O n)
                      m))
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   matita_arithmetics_nat.O
                   (matita_arithmetics_nat.minus n m))
                (matita_arithmetics_nat.minus_le_minus_minus_comm m n matita_arithmetics_nat.O nm)
                (matita_basics_logic.rewrite_l
                   matita_arithmetics_nat.nat
                   matita_arithmetics_nat.O
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      (pts.u pts.var)
                      (matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         __
                         (matita_arithmetics_nat.minus
                            (matita_arithmetics_nat.plus matita_arithmetics_nat.O n)
                            m))
                      (matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         matita_arithmetics_nat.O
                         (matita_arithmetics_nat.minus n m)))
                   (matita_basics_logic.rewrite_l
                      matita_arithmetics_nat.nat
                      n
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         (pts.u pts.var)
                         (matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.O
                            (matita_arithmetics_nat.minus __ m))
                         (matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.O
                            (matita_arithmetics_nat.minus n m)))
                      (matita_basics_logic.refl
                         (pts.u pts.var)
                         (matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.O
                            (matita_arithmetics_nat.minus n m)))
                      (matita_arithmetics_nat.plus matita_arithmetics_nat.O n)
                      (matita_arithmetics_nat.plus_O_n n))
                   (matita_arithmetics_nat.minus
                      matita_arithmetics_nat.O
                      (matita_arithmetics_nat.minus m n))
                   (matita_arithmetics_nat.minus_O_n (matita_arithmetics_nat.minus m n)))))))
    (nm:(pts.El pts.var (matita_basics_logic.Not (matita_arithmetics_nat.le n m))) =>
     quotient
       q
       (matita_arithmetics_nat.minus n m)
       (matita_arithmetics_nat.minus
          (matita_arithmetics_div_and_mod.div n q)
          (matita_arithmetics_div_and_mod.div m q))
       (matita_basics_logic.eq_ind_r
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.minus
             (matita_arithmetics_nat.times q (matita_arithmetics_div_and_mod.div n q))
             (matita_arithmetics_nat.times q (matita_arithmetics_div_and_mod.div m q)))
          (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
           __:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    matita_arithmetics_nat.nat
                    x
                    (matita_arithmetics_nat.minus
                       (matita_arithmetics_nat.times
                          q
                          (matita_arithmetics_div_and_mod.div n q))
                       (matita_arithmetics_nat.times
                          q
                          (matita_arithmetics_div_and_mod.div m q))))) =>
           matita_basics_logic.eq matita_arithmetics_nat.nat (matita_arithmetics_nat.minus n m) x)
          (matita_basics_logic.eq_ind_r
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n q) q)
             (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
              __:(pts.El
                    pts.var
                    (matita_basics_logic.eq
                       matita_arithmetics_nat.nat
                       x
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_div_and_mod.div n q)
                          q))) =>
              matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.minus n m)
                (matita_arithmetics_nat.minus
                   x
                   (matita_arithmetics_nat.times q (matita_arithmetics_div_and_mod.div m q))))
             (matita_basics_logic.eq_ind_r
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div m q) q)
                (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 __:(pts.El
                       pts.var
                       (matita_basics_logic.eq
                          matita_arithmetics_nat.nat
                          x
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_div_and_mod.div m q)
                             q))) =>
                 matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.minus n m)
                   (matita_arithmetics_nat.minus
                      (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n q) q)
                      x))
                (matita_basics_logic.eq_ind_r
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.minus n (matita_arithmetics_div_and_mod.mod n q))
                   (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    __:(pts.El
                          pts.var
                          (matita_basics_logic.eq
                             matita_arithmetics_nat.nat
                             x
                             (matita_arithmetics_nat.minus
                                n
                                (matita_arithmetics_div_and_mod.mod n q)))) =>
                    matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.minus n m)
                      (matita_arithmetics_nat.minus
                         x
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_div_and_mod.div m q)
                            q)))
                   (matita_basics_logic.eq_ind_r
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.minus
                         n
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_div_and_mod.mod n q)
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_div_and_mod.div m q)
                               q)))
                      (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       __:(pts.El
                             pts.var
                             (matita_basics_logic.eq
                                matita_arithmetics_nat.nat
                                x
                                (matita_arithmetics_nat.minus
                                   n
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_div_and_mod.mod n q)
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_div_and_mod.div m q)
                                         q))))) =>
                       matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.minus n m)
                         x)
                      (matita_basics_logic.eq_ind_r
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_div_and_mod.mod m q)
                         (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          __:(pts.El
                                pts.var
                                (matita_basics_logic.eq
                                   matita_arithmetics_nat.nat
                                   x
                                   (matita_arithmetics_div_and_mod.mod m q))) =>
                          matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.minus n m)
                            (matita_arithmetics_nat.minus
                               n
                               (matita_arithmetics_nat.plus
                                  x
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_div_and_mod.div m q)
                                     q))))
                         (matita_basics_logic.eq_ind_r
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_div_and_mod.div m q)
                                  q)
                               (matita_arithmetics_div_and_mod.mod m q))
                            (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
                             __:(pts.El
                                   pts.var
                                   (matita_basics_logic.eq
                                      matita_arithmetics_nat.nat
                                      x
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_div_and_mod.div m q)
                                            q)
                                         (matita_arithmetics_div_and_mod.mod m q)))) =>
                             matita_basics_logic.eq
                               matita_arithmetics_nat.nat
                               (matita_arithmetics_nat.minus n m)
                               (matita_arithmetics_nat.minus n x))
                            (matita_basics_logic.eq_ind
                               matita_arithmetics_nat.nat
                               m
                               (x_1:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                _x_2:(pts.El
                                        pts.var
                                        (matita_basics_logic.eq
                                           matita_arithmetics_nat.nat
                                           m
                                           x_1)) =>
                                matita_basics_logic.eq
                                  matita_arithmetics_nat.nat
                                  (matita_arithmetics_nat.minus n m)
                                  (matita_arithmetics_nat.minus n x_1))
                               (matita_basics_logic.refl
                                  matita_arithmetics_nat.nat
                                  (matita_arithmetics_nat.minus n m))
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_div_and_mod.div m q)
                                     q)
                                  (matita_arithmetics_div_and_mod.mod m q))
                               (matita_arithmetics_div_and_mod.div_mod m q))
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_div_and_mod.mod m q)
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_div_and_mod.div m q)
                                  q))
                            (matita_arithmetics_nat.commutative_plus
                               (matita_arithmetics_div_and_mod.mod m q)
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_div_and_mod.div m q)
                                  q)))
                         (matita_arithmetics_div_and_mod.mod n q)
                         eqmod)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.minus
                            n
                            (matita_arithmetics_div_and_mod.mod n q))
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_div_and_mod.div m q)
                            q))
                      (matita_arithmetics_nat.minus_plus
                         n
                         (matita_arithmetics_div_and_mod.mod n q)
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_div_and_mod.div m q)
                            q)))
                   (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n q) q)
                   (matita_basics_logic.rewrite_r
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.times q (matita_arithmetics_div_and_mod.div n q))
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         __
                         (matita_arithmetics_nat.minus
                            n
                            (matita_arithmetics_div_and_mod.mod n q)))
                      (matita_basics_logic.rewrite_l
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.times
                            q
                            (matita_arithmetics_div_and_mod.div n q))
                         (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.times
                               q
                               (matita_arithmetics_div_and_mod.div n q))
                            __)
                         (matita_basics_logic.refl
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.times
                               q
                               (matita_arithmetics_div_and_mod.div n q)))
                         (matita_arithmetics_nat.minus
                            n
                            (matita_arithmetics_div_and_mod.mod n q))
                         (matita_basics_logic.rewrite_l
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_div_and_mod.div n q)
                               q)
                            (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                             matita_basics_logic.eq
                               matita_arithmetics_nat.nat
                               __
                               (matita_arithmetics_nat.minus
                                  n
                                  (matita_arithmetics_div_and_mod.mod n q)))
                            (matita_arithmetics_div_and_mod.eq_times_div_minus_mod n q)
                            (matita_arithmetics_nat.times
                               q
                               (matita_arithmetics_div_and_mod.div n q))
                            (matita_arithmetics_nat.commutative_times
                               (matita_arithmetics_div_and_mod.div n q)
                               q)))
                      (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n q) q)
                      (matita_arithmetics_nat.commutative_times
                         (matita_arithmetics_div_and_mod.div n q)
                         q)))
                (matita_arithmetics_nat.times q (matita_arithmetics_div_and_mod.div m q))
                (matita_arithmetics_nat.commutative_times
                   q
                   (matita_arithmetics_div_and_mod.div m q)))
             (matita_arithmetics_nat.times q (matita_arithmetics_div_and_mod.div n q))
             (matita_arithmetics_nat.commutative_times q (matita_arithmetics_div_and_mod.div n q)))
          (matita_arithmetics_nat.times
             q
             (matita_arithmetics_nat.minus
                (matita_arithmetics_div_and_mod.div n q)
                (matita_arithmetics_div_and_mod.div m q)))
          (matita_arithmetics_nat.distributive_times_minus
             q
             (matita_arithmetics_div_and_mod.div n q)
             (matita_arithmetics_div_and_mod.div m q)))).

def let_clause_1531 :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  posm:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) ->
  _clearme:(pts.El pts.var (divides n m)) ->
  d:(pts.El pts.var matita_arithmetics_nat.nat) ->
  eqm:(pts.El
         pts.var
         (matita_basics_logic.eq
            matita_arithmetics_nat.nat
            m
            (matita_arithmetics_nat.times n matita_arithmetics_nat.O))) ->
  pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat m matita_arithmetics_nat.O)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posm:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) =>
  _clearme:(pts.El pts.var (divides n m)) =>
  d:(pts.El pts.var matita_arithmetics_nat.nat) =>
  eqm:(pts.El
         pts.var
         (matita_basics_logic.eq
            matita_arithmetics_nat.nat
            m
            (matita_arithmetics_nat.times n matita_arithmetics_nat.O))) =>
  matita_basics_logic.rewrite_r
    matita_arithmetics_nat.nat
    (matita_arithmetics_nat.times n matita_arithmetics_nat.O)
    (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
     matita_basics_logic.eq matita_arithmetics_nat.nat m __)
    eqm
    matita_arithmetics_nat.O
    (matita_arithmetics_nat.times_n_O n).

def let_clause_15311 :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  posm:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) ->
  _clearme:(pts.El pts.var (divides n m)) ->
  d:(pts.El pts.var matita_arithmetics_nat.nat) ->
  p:(pts.El pts.var matita_arithmetics_nat.nat) ->
  eqm:(pts.El
         pts.var
         (matita_basics_logic.eq
            matita_arithmetics_nat.nat
            m
            (matita_arithmetics_nat.times n (matita_arithmetics_nat.S p)))) ->
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       m
       (matita_arithmetics_nat.plus n (matita_arithmetics_nat.times n p)))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posm:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) =>
  _clearme:(pts.El pts.var (divides n m)) =>
  d:(pts.El pts.var matita_arithmetics_nat.nat) =>
  p:(pts.El pts.var matita_arithmetics_nat.nat) =>
  eqm:(pts.El
         pts.var
         (matita_basics_logic.eq
            matita_arithmetics_nat.nat
            m
            (matita_arithmetics_nat.times n (matita_arithmetics_nat.S p)))) =>
  matita_basics_logic.rewrite_r
    matita_arithmetics_nat.nat
    (matita_arithmetics_nat.times n (matita_arithmetics_nat.S p))
    (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
     matita_basics_logic.eq matita_arithmetics_nat.nat m __)
    eqm
    (matita_arithmetics_nat.plus n (matita_arithmetics_nat.times n p))
    (matita_arithmetics_nat.times_n_Sm n p).

def divides_to_le :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) ->
  __1:(pts.El pts.var (divides n m)) -> pts.El pts.var (matita_arithmetics_nat.le n m)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posm:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) =>
  _clearme:(pts.El pts.var (divides n m)) =>
  match_divides
    n
    m
    pts.var
    (__:(pts.El pts.var (divides n m)) => matita_arithmetics_nat.le n m)
    (d:(pts.El pts.var matita_arithmetics_nat.nat) =>
     matita_arithmetics_nat.match_nat
       pts.var
       (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
        pts.Prod
          pts.var
          pts.var
          (matita_basics_logic.eq matita_arithmetics_nat.nat m (matita_arithmetics_nat.times n __))
          (__1:(pts.El
                  pts.var
                  (matita_basics_logic.eq
                     matita_arithmetics_nat.nat
                     m
                     (matita_arithmetics_nat.times n __))) =>
           matita_arithmetics_nat.le n m))
       (eqm:(pts.El
               pts.var
               (matita_basics_logic.eq
                  matita_arithmetics_nat.nat
                  m
                  (matita_arithmetics_nat.times n matita_arithmetics_nat.O))) =>
        matita_basics_logic.False_ind
          (_x_66:(pts.El pts.var matita_basics_logic.False) => matita_arithmetics_nat.le n m)
          (matita_basics_logic.absurd
             (matita_arithmetics_nat.le (matita_arithmetics_nat.S m) matita_arithmetics_nat.O)
             (matita_basics_logic.eq_coerc
                (matita_arithmetics_nat.le (matita_arithmetics_nat.S matita_arithmetics_nat.O) m)
                (matita_arithmetics_nat.le (matita_arithmetics_nat.S m) matita_arithmetics_nat.O)
                posm
                (matita_basics_logic.rewrite_l
                   matita_arithmetics_nat.nat
                   m
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      (pts.u pts.var)
                      (matita_arithmetics_nat.le (matita_arithmetics_nat.S __) m)
                      (matita_arithmetics_nat.le
                         (matita_arithmetics_nat.S m)
                         matita_arithmetics_nat.O))
                   (matita_basics_logic.rewrite_l
                      matita_arithmetics_nat.nat
                      m
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         (pts.u pts.var)
                         (matita_arithmetics_nat.le (matita_arithmetics_nat.S m) m)
                         (matita_arithmetics_nat.le (matita_arithmetics_nat.S m) __))
                      (matita_basics_logic.refl
                         (pts.u pts.var)
                         (matita_arithmetics_nat.le (matita_arithmetics_nat.S m) m))
                      matita_arithmetics_nat.O
                      (let_clause_1531 n m posm _clearme d eqm))
                   matita_arithmetics_nat.O
                   (let_clause_1531 n m posm _clearme d eqm)))
             (matita_arithmetics_nat.not_le_Sn_O m)))
       (p:(pts.El pts.var matita_arithmetics_nat.nat) =>
        eqm:(pts.El
               pts.var
               (matita_basics_logic.eq
                  matita_arithmetics_nat.nat
                  m
                  (matita_arithmetics_nat.times n (matita_arithmetics_nat.S p)))) =>
        matita_basics_logic.eq_ind_r
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.times n (matita_arithmetics_nat.S p))
          (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
           __:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    matita_arithmetics_nat.nat
                    x
                    (matita_arithmetics_nat.times n (matita_arithmetics_nat.S p)))) =>
           matita_arithmetics_nat.le n x)
          (matita_basics_logic.eq_coerc
             (matita_arithmetics_nat.le
                n
                (matita_arithmetics_nat.plus n (matita_arithmetics_nat.times n p)))
             (matita_arithmetics_nat.le
                n
                (matita_arithmetics_nat.times n (matita_arithmetics_nat.S p)))
             (matita_arithmetics_nat.le_plus_n_r (matita_arithmetics_nat.times n p) n)
             (matita_basics_logic.rewrite_l
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.plus n (matita_arithmetics_nat.times n p))
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   (pts.u pts.var)
                   (matita_arithmetics_nat.le
                      n
                      (matita_arithmetics_nat.plus n (matita_arithmetics_nat.times n p)))
                   (matita_arithmetics_nat.le n __))
                (matita_basics_logic.rewrite_l
                   matita_arithmetics_nat.nat
                   m
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      (pts.u pts.var)
                      (matita_arithmetics_nat.le
                         n
                         (matita_arithmetics_nat.plus n (matita_arithmetics_nat.times n p)))
                      (matita_arithmetics_nat.le n __))
                   (matita_basics_logic.rewrite_l
                      matita_arithmetics_nat.nat
                      m
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         (pts.u pts.var)
                         (matita_arithmetics_nat.le n __)
                         (matita_arithmetics_nat.le n m))
                      (matita_basics_logic.refl (pts.u pts.var) (matita_arithmetics_nat.le n m))
                      (matita_arithmetics_nat.plus n (matita_arithmetics_nat.times n p))
                      (let_clause_15311 n m posm _clearme d p eqm))
                   (matita_arithmetics_nat.plus n (matita_arithmetics_nat.times n p))
                   (let_clause_15311 n m posm _clearme d p eqm))
                (matita_arithmetics_nat.times n (matita_arithmetics_nat.S p))
                (matita_arithmetics_nat.times_n_Sm n p)))
          m
          eqm)
       d)
    _clearme.

def antisymmetric_divides :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (divides n m)) ->
  __1:(pts.El pts.var (divides m n)) ->
  pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat n m)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  divnm:(pts.El pts.var (divides n m)) =>
  divmn:(pts.El pts.var (divides m n)) =>
  matita_basics_logic.match_Or
    (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)
    (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n)
    pts.var
    (__:(pts.El
           pts.var
           (matita_basics_logic.Or
              (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)
              (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n))) =>
     matita_basics_logic.eq matita_arithmetics_nat.nat n m)
    (Hn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) =>
     matita_basics_logic.match_Or
       (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)
       (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O m)
       pts.var
       (__:(pts.El
              pts.var
              (matita_basics_logic.Or
                 (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)
                 (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O m))) =>
        matita_basics_logic.eq matita_arithmetics_nat.nat n m)
       (Hm:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) =>
        matita_arithmetics_nat.le_to_le_to_eq
          n
          m
          (divides_to_le n m Hm divnm)
          (divides_to_le m n Hn divmn))
       (Hm:(pts.El
              pts.var
              (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O m)) =>
        matita_basics_logic.eq_ind
          matita_arithmetics_nat.nat
          matita_arithmetics_nat.O
          (x_1:(pts.El pts.var matita_arithmetics_nat.nat) =>
           _x_2:(pts.El
                   pts.var
                   (matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      matita_arithmetics_nat.O
                      x_1)) =>
           matita_basics_logic.eq matita_arithmetics_nat.nat n x_1)
          (match_divides
             m
             n
             pts.var
             (__:(pts.El pts.var (divides m n)) =>
              matita_basics_logic.eq matita_arithmetics_nat.nat n matita_arithmetics_nat.O)
             (q:(pts.El pts.var matita_arithmetics_nat.nat) =>
              auto:(pts.El
                      pts.var
                      (matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         n
                         (matita_arithmetics_nat.times m q))) =>
              matita_basics_logic.rewrite_r
                matita_arithmetics_nat.nat
                n
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq matita_arithmetics_nat.nat n __)
                (matita_basics_logic.refl matita_arithmetics_nat.nat n)
                matita_arithmetics_nat.O
                (matita_basics_logic.rewrite_r
                   matita_arithmetics_nat.nat
                   m
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      matita_arithmetics_nat.O
                      __)
                   Hm
                   n
                   (matita_basics_logic.rewrite_r
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.times m q)
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq matita_arithmetics_nat.nat n __)
                      auto
                      m
                      (matita_basics_logic.rewrite_l
                         matita_arithmetics_nat.nat
                         matita_arithmetics_nat.O
                         (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            m
                            (matita_arithmetics_nat.times __ q))
                         (matita_basics_logic.rewrite_l
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.O
                            (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                             matita_basics_logic.eq
                               matita_arithmetics_nat.nat
                               __
                               (matita_arithmetics_nat.times matita_arithmetics_nat.O q))
                            (matita_arithmetics_nat.times_O_n q)
                            m
                            Hm)
                         m
                         Hm))))
             divmn)
          m
          Hm)
       (matita_arithmetics_nat.le_to_or_lt_eq
          matita_arithmetics_nat.O
          m
          (matita_arithmetics_nat.le_O_n m)))
    (Hn:(pts.El
           pts.var
           (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n)) =>
     matita_basics_logic.eq_ind
       matita_arithmetics_nat.nat
       matita_arithmetics_nat.O
       (x_1:(pts.El pts.var matita_arithmetics_nat.nat) =>
        _x_2:(pts.El
                pts.var
                (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O x_1)) =>
        matita_basics_logic.eq matita_arithmetics_nat.nat x_1 m)
       (match_divides
          n
          m
          pts.var
          (__:(pts.El pts.var (divides n m)) =>
           matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O m)
          (q:(pts.El pts.var matita_arithmetics_nat.nat) =>
           auto:(pts.El
                   pts.var
                   (matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      m
                      (matita_arithmetics_nat.times n q))) =>
           matita_basics_logic.rewrite_r
             matita_arithmetics_nat.nat
             n
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq matita_arithmetics_nat.nat __ m)
             (matita_basics_logic.rewrite_r
                matita_arithmetics_nat.nat
                n
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq matita_arithmetics_nat.nat n __)
                (matita_basics_logic.refl matita_arithmetics_nat.nat n)
                m
                (matita_basics_logic.rewrite_r
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.times n q)
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq matita_arithmetics_nat.nat m __)
                   auto
                   n
                   (matita_basics_logic.rewrite_l
                      matita_arithmetics_nat.nat
                      matita_arithmetics_nat.O
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         n
                         (matita_arithmetics_nat.times __ q))
                      (matita_basics_logic.rewrite_l
                         matita_arithmetics_nat.nat
                         matita_arithmetics_nat.O
                         (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            __
                            (matita_arithmetics_nat.times matita_arithmetics_nat.O q))
                         (matita_arithmetics_nat.times_O_n q)
                         n
                         Hn)
                      n
                      Hn)))
             matita_arithmetics_nat.O
             Hn)
          divnm)
       n
       Hn)
    (matita_arithmetics_nat.le_to_or_lt_eq
       matita_arithmetics_nat.O
       n
       (matita_arithmetics_nat.le_O_n n)).

def divides_to_lt_O :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) ->
  __1:(pts.El pts.var (divides n m)) ->
  pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posm:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) =>
  matita_basics_logic.match_Or
    (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)
    (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n)
    pts.var
    (__:(pts.El
           pts.var
           (matita_basics_logic.Or
              (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)
              (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n))) =>
     pts.Prod
       pts.var
       pts.var
       (divides n m)
       (__1:(pts.El pts.var (divides n m)) => matita_arithmetics_nat.lt matita_arithmetics_nat.O n))
    (auto:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) =>
     auto':(pts.El pts.var (divides n m)) => auto)
    (eqn0:(pts.El
             pts.var
             (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n)) =>
     _clearme:(pts.El pts.var (divides n m)) =>
     match_divides
       n
       m
       pts.var
       (__:(pts.El pts.var (divides n m)) => matita_arithmetics_nat.lt matita_arithmetics_nat.O n)
       (d:(pts.El pts.var matita_arithmetics_nat.nat) =>
        matita_basics_logic.eq_ind
          matita_arithmetics_nat.nat
          matita_arithmetics_nat.O
          (x_1:(pts.El pts.var matita_arithmetics_nat.nat) =>
           _x_2:(pts.El
                   pts.var
                   (matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      matita_arithmetics_nat.O
                      x_1)) =>
           pts.Prod
             pts.var
             pts.var
             (matita_basics_logic.eq
                matita_arithmetics_nat.nat
                m
                (matita_arithmetics_nat.times x_1 d))
             (__:(pts.El
                    pts.var
                    (matita_basics_logic.eq
                       matita_arithmetics_nat.nat
                       m
                       (matita_arithmetics_nat.times x_1 d))) =>
              matita_arithmetics_nat.lt matita_arithmetics_nat.O x_1))
          (eqm:(pts.El
                  pts.var
                  (matita_basics_logic.eq
                     matita_arithmetics_nat.nat
                     m
                     (matita_arithmetics_nat.times matita_arithmetics_nat.O d))) =>
           matita_basics_logic.False_ind
             (_x_66:(pts.El pts.var matita_basics_logic.False) =>
              matita_arithmetics_nat.lt matita_arithmetics_nat.O matita_arithmetics_nat.O)
             (matita_basics_logic.absurd
                (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)
                posm
                (matita_arithmetics_nat.le_to_not_lt
                   m
                   matita_arithmetics_nat.O
                   (matita_basics_logic.eq_ind_r
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.times matita_arithmetics_nat.O d)
                      (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       __:(pts.El
                             pts.var
                             (matita_basics_logic.eq
                                matita_arithmetics_nat.nat
                                x
                                (matita_arithmetics_nat.times matita_arithmetics_nat.O d))) =>
                       matita_arithmetics_nat.le x matita_arithmetics_nat.O)
                      (matita_arithmetics_nat.le_n
                         (matita_arithmetics_nat.times matita_arithmetics_nat.O d))
                      m
                      eqm))))
          n
          eqn0)
       _clearme)
    (matita_arithmetics_nat.le_to_or_lt_eq
       matita_arithmetics_nat.O
       n
       (matita_arithmetics_nat.le_O_n n)).

def or_div_mod1 :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O q)) ->
  pts.El
    pts.var
    (matita_basics_logic.Or
       (matita_basics_logic.And
          (divides q (matita_arithmetics_nat.S n))
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.S n)
             (matita_arithmetics_nat.times
                (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.div n q))
                q)))
       (matita_basics_logic.And
          (matita_basics_logic.Not (divides q (matita_arithmetics_nat.S n)))
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.S n)
             (matita_arithmetics_nat.plus
                (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n q) q)
                (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q))))))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  q:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posq:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O q)) =>
  matita_basics_logic.match_Or
    (matita_basics_logic.And
       (matita_basics_logic.eq
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q))
          q)
       (matita_basics_logic.eq
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.S n)
          (matita_arithmetics_nat.times
             (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.div n q))
             q)))
    (matita_basics_logic.And
       (matita_arithmetics_nat.lt
          (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q))
          q)
       (matita_basics_logic.eq
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.S n)
          (matita_arithmetics_nat.plus
             (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n q) q)
             (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q)))))
    pts.var
    (__:(pts.El
           pts.var
           (matita_basics_logic.Or
              (matita_basics_logic.And
                 (matita_basics_logic.eq
                    matita_arithmetics_nat.nat
                    (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q))
                    q)
                 (matita_basics_logic.eq
                    matita_arithmetics_nat.nat
                    (matita_arithmetics_nat.S n)
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.div n q))
                       q)))
              (matita_basics_logic.And
                 (matita_arithmetics_nat.lt
                    (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q))
                    q)
                 (matita_basics_logic.eq
                    matita_arithmetics_nat.nat
                    (matita_arithmetics_nat.S n)
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_div_and_mod.div n q)
                          q)
                       (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q))))))) =>
     matita_basics_logic.Or
       (matita_basics_logic.And
          (divides q (matita_arithmetics_nat.S n))
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.S n)
             (matita_arithmetics_nat.times
                (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.div n q))
                q)))
       (matita_basics_logic.And
          (matita_basics_logic.Not (divides q (matita_arithmetics_nat.S n)))
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.S n)
             (matita_arithmetics_nat.plus
                (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n q) q)
                (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q))))))
    (_clearme:(pts.El
                 pts.var
                 (matita_basics_logic.And
                    (matita_basics_logic.eq
                       matita_arithmetics_nat.nat
                       (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q))
                       q)
                    (matita_basics_logic.eq
                       matita_arithmetics_nat.nat
                       (matita_arithmetics_nat.S n)
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.div n q))
                          q)))) =>
     matita_basics_logic.match_And
       (matita_basics_logic.eq
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q))
          q)
       (matita_basics_logic.eq
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.S n)
          (matita_arithmetics_nat.times
             (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.div n q))
             q))
       pts.var
       (__:(pts.El
              pts.var
              (matita_basics_logic.And
                 (matita_basics_logic.eq
                    matita_arithmetics_nat.nat
                    (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q))
                    q)
                 (matita_basics_logic.eq
                    matita_arithmetics_nat.nat
                    (matita_arithmetics_nat.S n)
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.div n q))
                       q)))) =>
        matita_basics_logic.Or
          (matita_basics_logic.And
             (divides q (matita_arithmetics_nat.S n))
             (matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.S n)
                (matita_arithmetics_nat.times
                   (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.div n q))
                   q)))
          (matita_basics_logic.And
             (matita_basics_logic.Not (divides q (matita_arithmetics_nat.S n)))
             (matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.S n)
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n q) q)
                   (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q))))))
       (H1:(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q))
                 q)) =>
        H2:(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 (matita_arithmetics_nat.S n)
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.div n q))
                    q))) =>
        matita_basics_logic.or_introl
          (matita_basics_logic.And
             (divides q (matita_arithmetics_nat.S n))
             (matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.S n)
                (matita_arithmetics_nat.times
                   (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.div n q))
                   q)))
          (matita_basics_logic.And
             (matita_basics_logic.Not (divides q (matita_arithmetics_nat.S n)))
             (matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.S n)
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n q) q)
                   (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q)))))
          (matita_basics_logic.conj
             (divides q (matita_arithmetics_nat.S n))
             (matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.S n)
                (matita_arithmetics_nat.times
                   (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.div n q))
                   q))
             (matita_basics_logic.eq_coerc
                (divides
                   (matita_arithmetics_nat.times
                      q
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   (matita_arithmetics_nat.times
                      q
                      (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.div n q))))
                (divides q (matita_arithmetics_nat.S n))
                (divides_times
                   q
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                   q
                   (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.div n q))
                   (divides_n_n q)
                   (divides_SO_n
                      (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.div n q))))
                (matita_basics_logic.rewrite_r
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.plus
                      q
                      (matita_arithmetics_nat.times q (matita_arithmetics_div_and_mod.div n q)))
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      (pts.u pts.var)
                      (divides
                         (matita_arithmetics_nat.times
                            q
                            (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                         (matita_arithmetics_nat.times
                            q
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_div_and_mod.div n q))))
                      (divides q __))
                   (matita_basics_logic.rewrite_l
                      matita_arithmetics_nat.nat
                      q
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         (pts.u pts.var)
                         (divides
                            __
                            (matita_arithmetics_nat.times
                               q
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_div_and_mod.div n q))))
                         (divides
                            q
                            (matita_arithmetics_nat.plus
                               q
                               (matita_arithmetics_nat.times
                                  q
                                  (matita_arithmetics_div_and_mod.div n q)))))
                      (matita_basics_logic.rewrite_l
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.plus
                            q
                            (matita_arithmetics_nat.times
                               q
                               (matita_arithmetics_div_and_mod.div n q)))
                         (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq
                            (pts.u pts.var)
                            (divides q __)
                            (divides
                               q
                               (matita_arithmetics_nat.plus
                                  q
                                  (matita_arithmetics_nat.times
                                     q
                                     (matita_arithmetics_div_and_mod.div n q)))))
                         (matita_basics_logic.refl
                            (pts.u pts.var)
                            (divides
                               q
                               (matita_arithmetics_nat.plus
                                  q
                                  (matita_arithmetics_nat.times
                                     q
                                     (matita_arithmetics_div_and_mod.div n q)))))
                         (matita_arithmetics_nat.times
                            q
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_div_and_mod.div n q)))
                         (matita_arithmetics_nat.times_n_Sm
                            q
                            (matita_arithmetics_div_and_mod.div n q)))
                      (matita_arithmetics_nat.times
                         q
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                      (matita_arithmetics_nat.times_n_1 q))
                   (matita_arithmetics_nat.S n)
                   (matita_basics_logic.rewrite_r
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.times
                         q
                         (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.div n q)))
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.S n)
                         __)
                      (matita_basics_logic.rewrite_l
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_div_and_mod.div n q))
                            q)
                         (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.S n)
                            __)
                         H2
                         (matita_arithmetics_nat.times
                            q
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_div_and_mod.div n q)))
                         (matita_arithmetics_nat.commutative_times
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_div_and_mod.div n q))
                            q))
                      (matita_arithmetics_nat.plus
                         q
                         (matita_arithmetics_nat.times
                            q
                            (matita_arithmetics_div_and_mod.div n q)))
                      (matita_arithmetics_nat.times_n_Sm
                         q
                         (matita_arithmetics_div_and_mod.div n q)))))
             (matita_basics_logic.rewrite_r
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.plus
                   q
                   (matita_arithmetics_nat.times q (matita_arithmetics_div_and_mod.div n q)))
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   __
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.div n q))
                      q))
                (matita_basics_logic.rewrite_r
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.times
                      q
                      (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.div n q)))
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.plus
                         q
                         (matita_arithmetics_nat.times
                            q
                            (matita_arithmetics_div_and_mod.div n q)))
                      __)
                   (matita_basics_logic.rewrite_l
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.plus
                         q
                         (matita_arithmetics_nat.times
                            q
                            (matita_arithmetics_div_and_mod.div n q)))
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.plus
                            q
                            (matita_arithmetics_nat.times
                               q
                               (matita_arithmetics_div_and_mod.div n q)))
                         __)
                      (matita_basics_logic.refl
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.plus
                            q
                            (matita_arithmetics_nat.times
                               q
                               (matita_arithmetics_div_and_mod.div n q))))
                      (matita_arithmetics_nat.times
                         q
                         (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.div n q)))
                      (matita_arithmetics_nat.times_n_Sm
                         q
                         (matita_arithmetics_div_and_mod.div n q)))
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.div n q))
                      q)
                   (matita_arithmetics_nat.commutative_times
                      (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.div n q))
                      q))
                (matita_arithmetics_nat.S n)
                (matita_basics_logic.rewrite_r
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.times
                      q
                      (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.div n q)))
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.S n)
                      __)
                   (matita_basics_logic.rewrite_l
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.div n q))
                         q)
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.S n)
                         __)
                      H2
                      (matita_arithmetics_nat.times
                         q
                         (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.div n q)))
                      (matita_arithmetics_nat.commutative_times
                         (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.div n q))
                         q))
                   (matita_arithmetics_nat.plus
                      q
                      (matita_arithmetics_nat.times q (matita_arithmetics_div_and_mod.div n q)))
                   (matita_arithmetics_nat.times_n_Sm q (matita_arithmetics_div_and_mod.div n q))))))
       _clearme)
    (_clearme:(pts.El
                 pts.var
                 (matita_basics_logic.And
                    (matita_arithmetics_nat.lt
                       (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q))
                       q)
                    (matita_basics_logic.eq
                       matita_arithmetics_nat.nat
                       (matita_arithmetics_nat.S n)
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_div_and_mod.div n q)
                             q)
                          (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q)))))) =>
     matita_basics_logic.match_And
       (matita_arithmetics_nat.lt
          (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q))
          q)
       (matita_basics_logic.eq
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.S n)
          (matita_arithmetics_nat.plus
             (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n q) q)
             (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q))))
       pts.var
       (__:(pts.El
              pts.var
              (matita_basics_logic.And
                 (matita_arithmetics_nat.lt
                    (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q))
                    q)
                 (matita_basics_logic.eq
                    matita_arithmetics_nat.nat
                    (matita_arithmetics_nat.S n)
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_div_and_mod.div n q)
                          q)
                       (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q)))))) =>
        matita_basics_logic.Or
          (matita_basics_logic.And
             (divides q (matita_arithmetics_nat.S n))
             (matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.S n)
                (matita_arithmetics_nat.times
                   (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.div n q))
                   q)))
          (matita_basics_logic.And
             (matita_basics_logic.Not (divides q (matita_arithmetics_nat.S n)))
             (matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.S n)
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n q) q)
                   (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q))))))
       (H1:(pts.El
              pts.var
              (matita_arithmetics_nat.lt
                 (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q))
                 q)) =>
        H2:(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 (matita_arithmetics_nat.S n)
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n q) q)
                    (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q))))) =>
        matita_basics_logic.or_intror
          (matita_basics_logic.And
             (divides q (matita_arithmetics_nat.S n))
             (matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.S n)
                (matita_arithmetics_nat.times
                   (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.div n q))
                   q)))
          (matita_basics_logic.And
             (matita_basics_logic.Not (divides q (matita_arithmetics_nat.S n)))
             (matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.S n)
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n q) q)
                   (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q)))))
          (matita_basics_logic.conj
             (matita_basics_logic.Not (divides q (matita_arithmetics_nat.S n)))
             (matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.S n)
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n q) q)
                   (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q))))
             (matita_basics_logic.not_to_not
                (divides q (matita_arithmetics_nat.S n))
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_div_and_mod.mod (matita_arithmetics_nat.S n) q)
                   matita_arithmetics_nat.O)
                (divides_to_mod_O q (matita_arithmetics_nat.S n) posq)
                (matita_basics_logic.eq_ind_r
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q))
                   (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    __:(pts.El
                          pts.var
                          (matita_basics_logic.eq
                             matita_arithmetics_nat.nat
                             x
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_div_and_mod.mod n q)))) =>
                    matita_basics_logic.Not
                      (matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         x
                         matita_arithmetics_nat.O))
                   (matita_basics_logic.nmk
                      (matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q))
                         matita_arithmetics_nat.O)
                      (auto:(pts.El
                               pts.var
                               (matita_basics_logic.eq
                                  matita_arithmetics_nat.nat
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_div_and_mod.mod n q))
                                  matita_arithmetics_nat.O)) =>
                       matita_basics_logic.absurd
                         (matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.O
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_div_and_mod.mod n q)))
                         (matita_basics_logic.rewrite_l
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_div_and_mod.mod n q))
                            (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                             matita_basics_logic.eq
                               matita_arithmetics_nat.nat
                               __
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_div_and_mod.mod n q)))
                            (matita_basics_logic.refl
                               matita_arithmetics_nat.nat
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_div_and_mod.mod n q)))
                            matita_arithmetics_nat.O
                            auto)
                         (matita_arithmetics_nat.not_eq_O_S
                            (matita_arithmetics_div_and_mod.mod n q))))
                   (matita_arithmetics_div_and_mod.mod (matita_arithmetics_nat.S n) q)
                   (matita_arithmetics_div_and_mod.div_mod_spec_to_eq2
                      (matita_arithmetics_nat.S n)
                      q
                      (matita_arithmetics_div_and_mod.div (matita_arithmetics_nat.S n) q)
                      (matita_arithmetics_div_and_mod.mod (matita_arithmetics_nat.S n) q)
                      (matita_arithmetics_div_and_mod.div n q)
                      (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q))
                      (matita_arithmetics_div_and_mod.div_mod_spec_div_mod
                         (matita_arithmetics_nat.S n)
                         q
                         posq)
                      (matita_arithmetics_div_and_mod.div_mod_spec_intro
                         (matita_arithmetics_nat.S n)
                         q
                         (matita_arithmetics_div_and_mod.div n q)
                         (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q))
                         H1
                         (matita_basics_logic.rewrite_r
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.times
                               q
                               (matita_arithmetics_div_and_mod.div n q))
                            (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                             matita_basics_logic.eq
                               matita_arithmetics_nat.nat
                               (matita_arithmetics_nat.S n)
                               (matita_arithmetics_nat.plus
                                  __
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_div_and_mod.mod n q))))
                            (matita_basics_logic.rewrite_l
                               matita_arithmetics_nat.nat
                               (matita_arithmetics_nat.S n)
                               (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                matita_basics_logic.eq
                                  matita_arithmetics_nat.nat
                                  (matita_arithmetics_nat.S n)
                                  __)
                               (matita_basics_logic.refl
                                  matita_arithmetics_nat.nat
                                  (matita_arithmetics_nat.S n))
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.times
                                     q
                                     (matita_arithmetics_div_and_mod.div n q))
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_div_and_mod.mod n q)))
                               (matita_basics_logic.rewrite_l
                                  matita_arithmetics_nat.nat
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_div_and_mod.div n q)
                                     q)
                                  (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                   matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     (matita_arithmetics_nat.S n)
                                     (matita_arithmetics_nat.plus
                                        __
                                        (matita_arithmetics_nat.S
                                           (matita_arithmetics_div_and_mod.mod n q))))
                                  H2
                                  (matita_arithmetics_nat.times
                                     q
                                     (matita_arithmetics_div_and_mod.div n q))
                                  (matita_arithmetics_nat.commutative_times
                                     (matita_arithmetics_div_and_mod.div n q)
                                     q)))
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_div_and_mod.div n q)
                               q)
                            (matita_arithmetics_nat.commutative_times
                               (matita_arithmetics_div_and_mod.div n q)
                               q))))))
             (matita_basics_logic.rewrite_r
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.times q (matita_arithmetics_div_and_mod.div n q))
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.S n)
                   (matita_arithmetics_nat.plus
                      __
                      (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q))))
                (matita_basics_logic.rewrite_l
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.S n)
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.S n)
                      __)
                   (matita_basics_logic.refl
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.S n))
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times q (matita_arithmetics_div_and_mod.div n q))
                      (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q)))
                   (matita_basics_logic.rewrite_l
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n q) q)
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.S n)
                         (matita_arithmetics_nat.plus
                            __
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_div_and_mod.mod n q))))
                      H2
                      (matita_arithmetics_nat.times q (matita_arithmetics_div_and_mod.div n q))
                      (matita_arithmetics_nat.commutative_times
                         (matita_arithmetics_div_and_mod.div n q)
                         q)))
                (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n q) q)
                (matita_arithmetics_nat.commutative_times
                   (matita_arithmetics_div_and_mod.div n q)
                   q))))
       _clearme)
    (matita_arithmetics_div_and_mod.or_div_mod n q posq).

def let_clause_1532 :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  divnm:(pts.El pts.var (divides n m)) ->
  H:(pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n)) ->
  d:(pts.El pts.var matita_arithmetics_nat.nat) ->
  auto:(pts.El
          pts.var
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             m
             (matita_arithmetics_nat.times matita_arithmetics_nat.O d))) ->
  pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat m matita_arithmetics_nat.O)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  divnm:(pts.El pts.var (divides n m)) =>
  H:(pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n)) =>
  d:(pts.El pts.var matita_arithmetics_nat.nat) =>
  auto:(pts.El
          pts.var
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             m
             (matita_arithmetics_nat.times matita_arithmetics_nat.O d))) =>
  matita_basics_logic.rewrite_r
    matita_arithmetics_nat.nat
    (matita_arithmetics_nat.times d matita_arithmetics_nat.O)
    (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
     matita_basics_logic.eq matita_arithmetics_nat.nat m __)
    (matita_basics_logic.rewrite_l
       matita_arithmetics_nat.nat
       (matita_arithmetics_nat.times matita_arithmetics_nat.O d)
       (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
        matita_basics_logic.eq matita_arithmetics_nat.nat m __)
       auto
       (matita_arithmetics_nat.times d matita_arithmetics_nat.O)
       (matita_arithmetics_nat.commutative_times matita_arithmetics_nat.O d))
    matita_arithmetics_nat.O
    (matita_arithmetics_nat.times_n_O d).

def let_clause_1559 :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  divnm:(pts.El pts.var (divides n m)) ->
  H:(pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n)) ->
  d:(pts.El pts.var matita_arithmetics_nat.nat) ->
  auto:(pts.El
          pts.var
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             m
             (matita_arithmetics_nat.times matita_arithmetics_nat.O d))) ->
  pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat m n)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  divnm:(pts.El pts.var (divides n m)) =>
  H:(pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n)) =>
  d:(pts.El pts.var matita_arithmetics_nat.nat) =>
  auto:(pts.El
          pts.var
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             m
             (matita_arithmetics_nat.times matita_arithmetics_nat.O d))) =>
  matita_basics_logic.rewrite_r
    matita_arithmetics_nat.nat
    matita_arithmetics_nat.O
    (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
     matita_basics_logic.eq matita_arithmetics_nat.nat __ n)
    H
    m
    (let_clause_1532 n m divnm H d auto).

def let_clause_1560 :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  divnm:(pts.El pts.var (divides n m)) ->
  H:(pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n)) ->
  d:(pts.El pts.var matita_arithmetics_nat.nat) ->
  auto:(pts.El
          pts.var
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             m
             (matita_arithmetics_nat.times matita_arithmetics_nat.O d))) ->
  pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat n matita_arithmetics_nat.O)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  divnm:(pts.El pts.var (divides n m)) =>
  H:(pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n)) =>
  d:(pts.El pts.var matita_arithmetics_nat.nat) =>
  auto:(pts.El
          pts.var
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             m
             (matita_arithmetics_nat.times matita_arithmetics_nat.O d))) =>
  matita_basics_logic.rewrite_l
    matita_arithmetics_nat.nat
    m
    (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
     matita_basics_logic.eq matita_arithmetics_nat.nat __ matita_arithmetics_nat.O)
    (let_clause_1532 n m divnm H d auto)
    n
    (let_clause_1559 n m divnm H d auto).

def divides_to_div :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (divides n m)) ->
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div m n) n)
       m)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  divnm:(pts.El pts.var (divides n m)) =>
  matita_basics_logic.match_Or
    (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)
    (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n)
    pts.var
    (__:(pts.El
           pts.var
           (matita_basics_logic.Or
              (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)
              (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n))) =>
     matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div m n) n)
       m)
    (H:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) =>
     matita_basics_logic.eq_ind_r
       matita_arithmetics_nat.nat
       (matita_arithmetics_nat.plus
          (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div m n) n)
          matita_arithmetics_nat.O)
       (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
        __:(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 x
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div m n) n)
                    matita_arithmetics_nat.O))) =>
        matita_basics_logic.eq matita_arithmetics_nat.nat x m)
       (matita_basics_logic.eq_ind
          matita_arithmetics_nat.nat
          (matita_arithmetics_div_and_mod.mod m n)
          (x_1:(pts.El pts.var matita_arithmetics_nat.nat) =>
           _x_2:(pts.El
                   pts.var
                   (matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_div_and_mod.mod m n)
                      x_1)) =>
           matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.plus
                (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div m n) n)
                x_1)
             m)
          (matita_basics_logic.rewrite_r
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.times n (matita_arithmetics_div_and_mod.div m n))
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.plus __ (matita_arithmetics_div_and_mod.mod m n))
                m)
             (matita_basics_logic.rewrite_r
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_div_and_mod.mod m n)
                   (matita_arithmetics_nat.times n (matita_arithmetics_div_and_mod.div m n)))
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq matita_arithmetics_nat.nat __ m)
                (matita_basics_logic.rewrite_l
                   matita_arithmetics_nat.nat
                   m
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq matita_arithmetics_nat.nat __ m)
                   (matita_basics_logic.refl matita_arithmetics_nat.nat m)
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_div_and_mod.mod m n)
                      (matita_arithmetics_nat.times n (matita_arithmetics_div_and_mod.div m n)))
                   (matita_basics_logic.rewrite_l
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.times
                            n
                            (matita_arithmetics_div_and_mod.div m n))
                         (matita_arithmetics_div_and_mod.mod m n))
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq matita_arithmetics_nat.nat m __)
                      (matita_basics_logic.rewrite_l
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_div_and_mod.div m n)
                            n)
                         (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            m
                            (matita_arithmetics_nat.plus
                               __
                               (matita_arithmetics_div_and_mod.mod m n)))
                         (matita_arithmetics_div_and_mod.div_mod m n)
                         (matita_arithmetics_nat.times
                            n
                            (matita_arithmetics_div_and_mod.div m n))
                         (matita_arithmetics_nat.commutative_times
                            (matita_arithmetics_div_and_mod.div m n)
                            n))
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_div_and_mod.mod m n)
                         (matita_arithmetics_nat.times
                            n
                            (matita_arithmetics_div_and_mod.div m n)))
                      (matita_arithmetics_nat.commutative_plus
                         (matita_arithmetics_nat.times
                            n
                            (matita_arithmetics_div_and_mod.div m n))
                         (matita_arithmetics_div_and_mod.mod m n))))
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.times n (matita_arithmetics_div_and_mod.div m n))
                   (matita_arithmetics_div_and_mod.mod m n))
                (matita_arithmetics_nat.commutative_plus
                   (matita_arithmetics_nat.times n (matita_arithmetics_div_and_mod.div m n))
                   (matita_arithmetics_div_and_mod.mod m n)))
             (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div m n) n)
             (matita_arithmetics_nat.commutative_times (matita_arithmetics_div_and_mod.div m n) n))
          matita_arithmetics_nat.O
          (divides_to_mod_O n m H divnm))
       (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div m n) n)
       (matita_arithmetics_nat.plus_n_O
          (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div m n) n)))
    (H:(pts.El
          pts.var
          (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n)) =>
     match_divides
       n
       m
       pts.var
       (__:(pts.El pts.var (divides n m)) =>
        matita_basics_logic.eq
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div m n) n)
          m)
       (d:(pts.El pts.var matita_arithmetics_nat.nat) =>
        matita_basics_logic.eq_ind
          matita_arithmetics_nat.nat
          matita_arithmetics_nat.O
          (x_1:(pts.El pts.var matita_arithmetics_nat.nat) =>
           _x_2:(pts.El
                   pts.var
                   (matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      matita_arithmetics_nat.O
                      x_1)) =>
           pts.Prod
             pts.var
             pts.var
             (matita_basics_logic.eq
                matita_arithmetics_nat.nat
                m
                (matita_arithmetics_nat.times x_1 d))
             (__:(pts.El
                    pts.var
                    (matita_basics_logic.eq
                       matita_arithmetics_nat.nat
                       m
                       (matita_arithmetics_nat.times x_1 d))) =>
              matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div m x_1) x_1)
                m))
          (auto:(pts.El
                   pts.var
                   (matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      m
                      (matita_arithmetics_nat.times matita_arithmetics_nat.O d))) =>
           matita_basics_logic.rewrite_r
             matita_arithmetics_nat.nat
             n
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.times
                   (matita_arithmetics_div_and_mod.div __ matita_arithmetics_nat.O)
                   matita_arithmetics_nat.O)
                m)
             (matita_basics_logic.rewrite_l
                matita_arithmetics_nat.nat
                n
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_div_and_mod.div n __)
                      matita_arithmetics_nat.O)
                   m)
                (matita_basics_logic.rewrite_l
                   matita_arithmetics_nat.nat
                   n
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n n) __)
                      m)
                   (matita_basics_logic.rewrite_r
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.times n (matita_arithmetics_div_and_mod.div n n))
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq matita_arithmetics_nat.nat __ m)
                      (matita_basics_logic.rewrite_l
                         matita_arithmetics_nat.nat
                         n
                         (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq matita_arithmetics_nat.nat __ m)
                         (matita_basics_logic.rewrite_r
                            matita_arithmetics_nat.nat
                            n
                            (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                             matita_basics_logic.eq matita_arithmetics_nat.nat n __)
                            (matita_basics_logic.refl matita_arithmetics_nat.nat n)
                            m
                            (let_clause_1559 n m divnm H d auto))
                         (matita_arithmetics_nat.times
                            n
                            (matita_arithmetics_div_and_mod.div n n))
                         (matita_basics_logic.rewrite_l
                            matita_arithmetics_nat.nat
                            m
                            (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                             matita_basics_logic.eq
                               matita_arithmetics_nat.nat
                               n
                               (matita_arithmetics_nat.times
                                  __
                                  (matita_arithmetics_div_and_mod.div n n)))
                            (matita_basics_logic.rewrite_l
                               matita_arithmetics_nat.nat
                               m
                               (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                matita_basics_logic.eq
                                  matita_arithmetics_nat.nat
                                  __
                                  (matita_arithmetics_nat.times
                                     m
                                     (matita_arithmetics_div_and_mod.div n n)))
                               (matita_basics_logic.rewrite_r
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.O
                                  (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                   matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     m
                                     (matita_arithmetics_nat.times
                                        __
                                        (matita_arithmetics_div_and_mod.div n n)))
                                  (matita_basics_logic.rewrite_r
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.O
                                     (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                      matita_basics_logic.eq
                                        matita_arithmetics_nat.nat
                                        __
                                        (matita_arithmetics_nat.times
                                           matita_arithmetics_nat.O
                                           (matita_arithmetics_div_and_mod.div n n)))
                                     (matita_arithmetics_nat.times_O_n
                                        (matita_arithmetics_div_and_mod.div n n))
                                     m
                                     (let_clause_1532 n m divnm H d auto))
                                  m
                                  (let_clause_1532 n m divnm H d auto))
                               n
                               (let_clause_1559 n m divnm H d auto))
                            n
                            (let_clause_1559 n m divnm H d auto)))
                      (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n n) n)
                      (matita_arithmetics_nat.commutative_times
                         (matita_arithmetics_div_and_mod.div n n)
                         n))
                   matita_arithmetics_nat.O
                   (let_clause_1560 n m divnm H d auto))
                matita_arithmetics_nat.O
                (let_clause_1560 n m divnm H d auto))
             m
             (let_clause_1559 n m divnm H d auto))
          n
          H)
       divnm)
    (matita_arithmetics_nat.le_to_or_lt_eq
       matita_arithmetics_nat.O
       n
       (matita_arithmetics_nat.le_O_n n)).

def divides_div :
  d:(pts.El pts.var matita_arithmetics_nat.nat) ->
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (divides d n)) ->
  pts.El pts.var (divides (matita_arithmetics_div_and_mod.div n d) n)
  :=
  d:(pts.El pts.var matita_arithmetics_nat.nat) =>
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  divdn:(pts.El pts.var (divides d n)) =>
  quotient
    (matita_arithmetics_div_and_mod.div n d)
    n
    d
    (matita_basics_logic.sym_eq
       matita_arithmetics_nat.nat
       (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n d) d)
       n
       (divides_to_div d n divdn)).

def div_div :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  d:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) ->
  __1:(pts.El pts.var (divides d n)) ->
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (matita_arithmetics_div_and_mod.div n (matita_arithmetics_div_and_mod.div n d))
       d)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  d:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) =>
  divdn:(pts.El pts.var (divides d n)) =>
  matita_arithmetics_div_and_mod.injective_times_l
    (matita_arithmetics_div_and_mod.div n d)
    (matita_arithmetics_nat.lt_times_n_to_lt_l
       d
       matita_arithmetics_nat.O
       (matita_arithmetics_div_and_mod.div n d)
       (matita_basics_logic.eq_ind_r
          matita_arithmetics_nat.nat
          n
          (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
           __:(pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat x n)) =>
           matita_arithmetics_nat.lt (matita_arithmetics_nat.times matita_arithmetics_nat.O d) x)
          posn
          (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n d) d)
          (divides_to_div d n divdn)))
    (matita_arithmetics_div_and_mod.div n (matita_arithmetics_div_and_mod.div n d))
    d
    (matita_basics_logic.eq_ind_r
       matita_arithmetics_nat.nat
       n
       (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
        __:(pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat x n)) =>
        matita_basics_logic.eq
          matita_arithmetics_nat.nat
          x
          (matita_arithmetics_nat.times d (matita_arithmetics_div_and_mod.div n d)))
       (matita_basics_logic.eq_ind_r
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n d) d)
          (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
           __:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    matita_arithmetics_nat.nat
                    x
                    (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n d) d))) =>
           matita_basics_logic.eq matita_arithmetics_nat.nat n x)
          (matita_basics_logic.eq_ind_r
             matita_arithmetics_nat.nat
             n
             (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
              __:(pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat x n)) =>
              matita_basics_logic.eq matita_arithmetics_nat.nat n x)
             (matita_basics_logic.refl matita_arithmetics_nat.nat n)
             (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n d) d)
             (divides_to_div d n divdn))
          (matita_arithmetics_nat.times d (matita_arithmetics_div_and_mod.div n d))
          (matita_arithmetics_nat.commutative_times d (matita_arithmetics_div_and_mod.div n d)))
       (matita_arithmetics_nat.times
          (matita_arithmetics_div_and_mod.div n (matita_arithmetics_div_and_mod.div n d))
          (matita_arithmetics_div_and_mod.div n d))
       (divides_to_div
          (matita_arithmetics_div_and_mod.div n d)
          n
          (quotient
             (matita_arithmetics_div_and_mod.div n d)
             n
             d
             (matita_basics_logic.sym_eq
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.times (matita_arithmetics_div_and_mod.div n d) d)
                n
                (divides_to_div d n divdn))))).

def times_div :
  a:(pts.El pts.var matita_arithmetics_nat.nat) ->
  b:(pts.El pts.var matita_arithmetics_nat.nat) ->
  c:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O b)) ->
  __1:(pts.El pts.var (divides c b)) ->
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (matita_arithmetics_nat.times a (matita_arithmetics_div_and_mod.div b c))
       (matita_arithmetics_div_and_mod.div (matita_arithmetics_nat.times a b) c))
  :=
  a:(pts.El pts.var matita_arithmetics_nat.nat) =>
  b:(pts.El pts.var matita_arithmetics_nat.nat) =>
  c:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posb:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O b)) =>
  divcb:(pts.El pts.var (divides c b)) =>
  match_divides
    c
    b
    pts.var
    (__:(pts.El pts.var (divides c b)) =>
     matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (matita_arithmetics_nat.times a (matita_arithmetics_div_and_mod.div b c))
       (matita_arithmetics_div_and_mod.div (matita_arithmetics_nat.times a b) c))
    (d:(pts.El pts.var matita_arithmetics_nat.nat) =>
     eqb:(pts.El
            pts.var
            (matita_basics_logic.eq
               matita_arithmetics_nat.nat
               b
               (matita_arithmetics_nat.times c d))) =>
     matita_basics_logic.eq_ind_r
       matita_arithmetics_nat.nat
       (matita_arithmetics_nat.times c d)
       (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
        __:(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 x
                 (matita_arithmetics_nat.times c d))) =>
        matita_basics_logic.eq
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.times a (matita_arithmetics_div_and_mod.div x c))
          (matita_arithmetics_div_and_mod.div (matita_arithmetics_nat.times a x) c))
       (matita_basics_logic.eq_ind_r
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.times d c)
          (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
           __:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    matita_arithmetics_nat.nat
                    x
                    (matita_arithmetics_nat.times d c))) =>
           matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.times a (matita_arithmetics_div_and_mod.div x c))
             (matita_arithmetics_div_and_mod.div (matita_arithmetics_nat.times a x) c))
          (matita_basics_logic.eq_ind_r
             matita_arithmetics_nat.nat
             d
             (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
              __:(pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat x d)) =>
              matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.times a x)
                (matita_arithmetics_div_and_mod.div
                   (matita_arithmetics_nat.times a (matita_arithmetics_nat.times d c))
                   c))
             (matita_basics_logic.eq_ind
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.times (matita_arithmetics_nat.times a d) c)
                (x_1:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 _x_2:(pts.El
                         pts.var
                         (matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_nat.times a d)
                               c)
                            x_1)) =>
                 matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.times a d)
                   (matita_arithmetics_div_and_mod.div x_1 c))
                (matita_basics_logic.eq_ind_r
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.times a d)
                   (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    __:(pts.El
                          pts.var
                          (matita_basics_logic.eq
                             matita_arithmetics_nat.nat
                             x
                             (matita_arithmetics_nat.times a d))) =>
                    matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.times a d)
                      x)
                   (matita_basics_logic.refl
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.times a d))
                   (matita_arithmetics_div_and_mod.div
                      (matita_arithmetics_nat.times (matita_arithmetics_nat.times a d) c)
                      c)
                   (matita_arithmetics_div_and_mod.div_times
                      (matita_arithmetics_nat.times a d)
                      c
                      (divides_to_lt_O c b posb divcb)))
                (matita_arithmetics_nat.times a (matita_arithmetics_nat.times d c))
                (matita_arithmetics_nat.associative_times a d c))
             (matita_arithmetics_div_and_mod.div (matita_arithmetics_nat.times d c) c)
             (matita_arithmetics_div_and_mod.div_times d c (divides_to_lt_O c b posb divcb)))
          (matita_arithmetics_nat.times c d)
          (matita_arithmetics_nat.commutative_times c d))
       b
       eqb)
    divcb.

def plus_div :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  d:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O d)) ->
  __1:(pts.El pts.var (divides d n)) ->
  __2:(pts.El pts.var (divides d m)) ->
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (matita_arithmetics_div_and_mod.div (matita_arithmetics_nat.plus n m) d)
       (matita_arithmetics_nat.plus
          (matita_arithmetics_div_and_mod.div n d)
          (matita_arithmetics_div_and_mod.div m d)))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  d:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posd:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O d)) =>
  divdn:(pts.El pts.var (divides d n)) =>
  divdm:(pts.El pts.var (divides d m)) =>
  match_divides
    d
    n
    pts.var
    (__:(pts.El pts.var (divides d n)) =>
     matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (matita_arithmetics_div_and_mod.div (matita_arithmetics_nat.plus n m) d)
       (matita_arithmetics_nat.plus
          (matita_arithmetics_div_and_mod.div n d)
          (matita_arithmetics_div_and_mod.div m d)))
    (a:(pts.El pts.var matita_arithmetics_nat.nat) =>
     eqn:(pts.El
            pts.var
            (matita_basics_logic.eq
               matita_arithmetics_nat.nat
               n
               (matita_arithmetics_nat.times d a))) =>
     match_divides
       d
       m
       pts.var
       (__:(pts.El pts.var (divides d m)) =>
        matita_basics_logic.eq
          matita_arithmetics_nat.nat
          (matita_arithmetics_div_and_mod.div (matita_arithmetics_nat.plus n m) d)
          (matita_arithmetics_nat.plus
             (matita_arithmetics_div_and_mod.div n d)
             (matita_arithmetics_div_and_mod.div m d)))
       (b:(pts.El pts.var matita_arithmetics_nat.nat) =>
        eqm:(pts.El
               pts.var
               (matita_basics_logic.eq
                  matita_arithmetics_nat.nat
                  m
                  (matita_arithmetics_nat.times d b))) =>
        matita_basics_logic.eq_ind_r
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.times d a)
          (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
           __:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    matita_arithmetics_nat.nat
                    x
                    (matita_arithmetics_nat.times d a))) =>
           matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (matita_arithmetics_div_and_mod.div (matita_arithmetics_nat.plus x m) d)
             (matita_arithmetics_nat.plus
                (matita_arithmetics_div_and_mod.div x d)
                (matita_arithmetics_div_and_mod.div m d)))
          (matita_basics_logic.eq_ind_r
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.times d b)
             (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
              __:(pts.El
                    pts.var
                    (matita_basics_logic.eq
                       matita_arithmetics_nat.nat
                       x
                       (matita_arithmetics_nat.times d b))) =>
              matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (matita_arithmetics_div_and_mod.div
                   (matita_arithmetics_nat.plus (matita_arithmetics_nat.times d a) x)
                   d)
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_div_and_mod.div (matita_arithmetics_nat.times d a) d)
                   (matita_arithmetics_div_and_mod.div x d)))
             (matita_basics_logic.eq_ind
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.times d (matita_arithmetics_nat.plus a b))
                (x_1:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 _x_2:(pts.El
                         pts.var
                         (matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.times
                               d
                               (matita_arithmetics_nat.plus a b))
                            x_1)) =>
                 matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_div_and_mod.div x_1 d)
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_div_and_mod.div (matita_arithmetics_nat.times d a) d)
                      (matita_arithmetics_div_and_mod.div (matita_arithmetics_nat.times d b) d)))
                (matita_basics_logic.eq_ind_r
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.times (matita_arithmetics_nat.plus a b) d)
                   (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    __:(pts.El
                          pts.var
                          (matita_basics_logic.eq
                             matita_arithmetics_nat.nat
                             x
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.plus a b)
                                d))) =>
                    matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_div_and_mod.div x d)
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_div_and_mod.div
                            (matita_arithmetics_nat.times d a)
                            d)
                         (matita_arithmetics_div_and_mod.div
                            (matita_arithmetics_nat.times d b)
                            d)))
                   (matita_basics_logic.eq_ind_r
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.plus a b)
                      (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       __:(pts.El
                             pts.var
                             (matita_basics_logic.eq
                                matita_arithmetics_nat.nat
                                x
                                (matita_arithmetics_nat.plus a b))) =>
                       matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         x
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_div_and_mod.div
                               (matita_arithmetics_nat.times d a)
                               d)
                            (matita_arithmetics_div_and_mod.div
                               (matita_arithmetics_nat.times d b)
                               d)))
                      (matita_basics_logic.eq_ind_r
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.times a d)
                         (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          __:(pts.El
                                pts.var
                                (matita_basics_logic.eq
                                   matita_arithmetics_nat.nat
                                   x
                                   (matita_arithmetics_nat.times a d))) =>
                          matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.plus a b)
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_div_and_mod.div x d)
                               (matita_arithmetics_div_and_mod.div
                                  (matita_arithmetics_nat.times d b)
                                  d)))
                         (matita_basics_logic.eq_ind_r
                            matita_arithmetics_nat.nat
                            a
                            (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
                             __:(pts.El
                                   pts.var
                                   (matita_basics_logic.eq matita_arithmetics_nat.nat x a)) =>
                             matita_basics_logic.eq
                               matita_arithmetics_nat.nat
                               (matita_arithmetics_nat.plus a b)
                               (matita_arithmetics_nat.plus
                                  x
                                  (matita_arithmetics_div_and_mod.div
                                     (matita_arithmetics_nat.times d b)
                                     d)))
                            (matita_basics_logic.eq_ind_r
                               matita_arithmetics_nat.nat
                               (matita_arithmetics_nat.times b d)
                               (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                __:(pts.El
                                      pts.var
                                      (matita_basics_logic.eq
                                         matita_arithmetics_nat.nat
                                         x
                                         (matita_arithmetics_nat.times b d))) =>
                                matita_basics_logic.eq
                                  matita_arithmetics_nat.nat
                                  (matita_arithmetics_nat.plus a b)
                                  (matita_arithmetics_nat.plus
                                     a
                                     (matita_arithmetics_div_and_mod.div x d)))
                               (matita_basics_logic.eq_ind_r
                                  matita_arithmetics_nat.nat
                                  b
                                  (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                   __:(pts.El
                                         pts.var
                                         (matita_basics_logic.eq
                                            matita_arithmetics_nat.nat
                                            x
                                            b)) =>
                                   matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     (matita_arithmetics_nat.plus a b)
                                     (matita_arithmetics_nat.plus a x))
                                  (matita_basics_logic.refl
                                     matita_arithmetics_nat.nat
                                     (matita_arithmetics_nat.plus a b))
                                  (matita_arithmetics_div_and_mod.div
                                     (matita_arithmetics_nat.times b d)
                                     d)
                                  (matita_arithmetics_div_and_mod.div_times b d posd))
                               (matita_arithmetics_nat.times d b)
                               (matita_arithmetics_nat.commutative_times d b))
                            (matita_arithmetics_div_and_mod.div
                               (matita_arithmetics_nat.times a d)
                               d)
                            (matita_arithmetics_div_and_mod.div_times a d posd))
                         (matita_arithmetics_nat.times d a)
                         (matita_arithmetics_nat.commutative_times d a))
                      (matita_arithmetics_div_and_mod.div
                         (matita_arithmetics_nat.times (matita_arithmetics_nat.plus a b) d)
                         d)
                      (matita_arithmetics_div_and_mod.div_times
                         (matita_arithmetics_nat.plus a b)
                         d
                         posd))
                   (matita_arithmetics_nat.times d (matita_arithmetics_nat.plus a b))
                   (matita_arithmetics_nat.commutative_times d (matita_arithmetics_nat.plus a b)))
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.times d a)
                   (matita_arithmetics_nat.times d b))
                (matita_arithmetics_nat.distributive_times_plus d a b))
             m
             eqm)
          n
          eqn)
       divdm)
    divdn.

def dividesb :
  __:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __1:(pts.El pts.var matita_arithmetics_nat.nat) -> pts.El pts.var matita_basics_bool.bool
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_arithmetics_nat.eqb (matita_arithmetics_div_and_mod.mod m n) matita_arithmetics_nat.O.

def dividesb_true_to_divides :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El
        pts.var
        (matita_basics_logic.eq matita_basics_bool.bool (dividesb n m) matita_basics_bool.true)) ->
  pts.El pts.var (divides n m)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_basics_logic.match_Or
    (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)
    (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n)
    pts.var
    (__:(pts.El
           pts.var
           (matita_basics_logic.Or
              (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)
              (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n))) =>
     pts.Prod
       pts.var
       pts.var
       (matita_basics_logic.eq matita_basics_bool.bool (dividesb n m) matita_basics_bool.true)
       (__1:(pts.El
               pts.var
               (matita_basics_logic.eq
                  matita_basics_bool.bool
                  (dividesb n m)
                  matita_basics_bool.true)) =>
        divides n m))
    (posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) =>
     divbnm:(pts.El
               pts.var
               (matita_basics_logic.eq
                  matita_basics_bool.bool
                  (dividesb n m)
                  matita_basics_bool.true)) =>
     mod_O_to_divides
       n
       m
       posn
       (matita_arithmetics_nat.eqb_true_to_eq
          (matita_arithmetics_div_and_mod.mod m n)
          matita_arithmetics_nat.O
          divbnm))
    (eqnO:(pts.El
             pts.var
             (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n)) =>
     matita_basics_logic.eq_ind
       matita_arithmetics_nat.nat
       matita_arithmetics_nat.O
       (x_1:(pts.El pts.var matita_arithmetics_nat.nat) =>
        _x_2:(pts.El
                pts.var
                (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O x_1)) =>
        pts.Prod
          pts.var
          pts.var
          (matita_basics_logic.eq matita_basics_bool.bool (dividesb x_1 m) matita_basics_bool.true)
          (__:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    matita_basics_bool.bool
                    (dividesb x_1 m)
                    matita_basics_bool.true)) =>
           divides x_1 m))
       (eqbmO:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    matita_basics_bool.bool
                    (matita_arithmetics_nat.eqb m matita_arithmetics_nat.O)
                    matita_basics_bool.true)) =>
        matita_basics_logic.eq_ind_r
          matita_arithmetics_nat.nat
          matita_arithmetics_nat.O
          (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
           __:(pts.El
                 pts.var
                 (matita_basics_logic.eq matita_arithmetics_nat.nat x matita_arithmetics_nat.O)) =>
           divides matita_arithmetics_nat.O x)
          (divides_n_n matita_arithmetics_nat.O)
          m
          (matita_arithmetics_nat.eqb_true_to_eq m matita_arithmetics_nat.O eqbmO))
       n
       eqnO)
    (matita_arithmetics_nat.le_to_or_lt_eq
       matita_arithmetics_nat.O
       n
       (matita_arithmetics_nat.le_O_n n)).

def dividesb_false_to_not_divides :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El
        pts.var
        (matita_basics_logic.eq matita_basics_bool.bool (dividesb n m) matita_basics_bool.false)) ->
  pts.El pts.var (matita_basics_logic.Not (divides n m))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_basics_logic.match_Or
    (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)
    (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n)
    pts.var
    (__:(pts.El
           pts.var
           (matita_basics_logic.Or
              (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)
              (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n))) =>
     pts.Prod
       pts.var
       pts.var
       (matita_basics_logic.eq matita_basics_bool.bool (dividesb n m) matita_basics_bool.false)
       (__1:(pts.El
               pts.var
               (matita_basics_logic.eq
                  matita_basics_bool.bool
                  (dividesb n m)
                  matita_basics_bool.false)) =>
        matita_basics_logic.Not (divides n m)))
    (posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) =>
     ndivbnm:(pts.El
                pts.var
                (matita_basics_logic.eq
                   matita_basics_bool.bool
                   (dividesb n m)
                   matita_basics_bool.false)) =>
     matita_basics_logic.not_to_not
       (divides n m)
       (matita_basics_logic.eq
          matita_arithmetics_nat.nat
          (matita_arithmetics_div_and_mod.mod m n)
          matita_arithmetics_nat.O)
       (divides_to_mod_O n m posn)
       (matita_arithmetics_nat.eqb_false_to_not_eq
          (matita_arithmetics_div_and_mod.mod m n)
          matita_arithmetics_nat.O
          ndivbnm))
    (eqnO:(pts.El
             pts.var
             (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n)) =>
     matita_basics_logic.eq_ind
       matita_arithmetics_nat.nat
       matita_arithmetics_nat.O
       (x_1:(pts.El pts.var matita_arithmetics_nat.nat) =>
        _x_2:(pts.El
                pts.var
                (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O x_1)) =>
        pts.Prod
          pts.var
          pts.var
          (matita_basics_logic.eq matita_basics_bool.bool (dividesb x_1 m) matita_basics_bool.false)
          (__:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    matita_basics_bool.bool
                    (dividesb x_1 m)
                    matita_basics_bool.false)) =>
           matita_basics_logic.Not (divides x_1 m)))
       (matita_arithmetics_nat.nat_case
          m
          (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
           pts.Prod
             pts.var
             pts.var
             (matita_basics_logic.eq
                matita_basics_bool.bool
                (matita_arithmetics_nat.eqb __ matita_arithmetics_nat.O)
                matita_basics_bool.false)
             (__1:(pts.El
                     pts.var
                     (matita_basics_logic.eq
                        matita_basics_bool.bool
                        (matita_arithmetics_nat.eqb __ matita_arithmetics_nat.O)
                        matita_basics_bool.false)) =>
              matita_basics_logic.Not (divides matita_arithmetics_nat.O __)))
          (auto:(pts.El
                   pts.var
                   (matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      m
                      matita_arithmetics_nat.O)) =>
           auto':(pts.El
                    pts.var
                    (matita_basics_logic.eq
                       matita_basics_bool.bool
                       matita_basics_bool.true
                       matita_basics_bool.false)) =>
           matita_basics_logic.not_to_not
             (divides matita_arithmetics_nat.O matita_arithmetics_nat.O)
             (matita_basics_logic.eq
                matita_basics_bool.bool
                matita_basics_bool.true
                matita_basics_bool.false)
             (auto'':(pts.El
                        pts.var
                        (divides matita_arithmetics_nat.O matita_arithmetics_nat.O)) =>
              matita_basics_logic.rewrite_l
                matita_basics_bool.bool
                matita_basics_bool.true
                (__:(pts.El pts.var matita_basics_bool.bool) =>
                 matita_basics_logic.eq matita_basics_bool.bool matita_basics_bool.true __)
                (matita_basics_logic.refl matita_basics_bool.bool matita_basics_bool.true)
                matita_basics_bool.false
                auto')
             matita_basics_bool.not_eq_true_false)
          (a:(pts.El pts.var matita_arithmetics_nat.nat) =>
           __:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    matita_arithmetics_nat.nat
                    m
                    (matita_arithmetics_nat.S a))) =>
           _0:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    matita_basics_bool.bool
                    (matita_arithmetics_nat.eqb
                       (matita_arithmetics_nat.S a)
                       matita_arithmetics_nat.O)
                    matita_basics_bool.false)) =>
           matita_basics_logic.nmk
             (divides matita_arithmetics_nat.O (matita_arithmetics_nat.S a))
             (_clearme:(pts.El
                          pts.var
                          (divides matita_arithmetics_nat.O (matita_arithmetics_nat.S a))) =>
              match_divides
                matita_arithmetics_nat.O
                (matita_arithmetics_nat.S a)
                pts.var
                (_1:(pts.El
                       pts.var
                       (divides matita_arithmetics_nat.O (matita_arithmetics_nat.S a))) =>
                 matita_basics_logic.False)
                (q:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 auto:(pts.El
                         pts.var
                         (matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.S a)
                            (matita_arithmetics_nat.times matita_arithmetics_nat.O q))) =>
                 matita_basics_logic.absurd
                   (matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      matita_arithmetics_nat.O
                      (matita_arithmetics_nat.S a))
                   (matita_basics_logic.rewrite_r
                      matita_arithmetics_nat.nat
                      n
                      (__1:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         __1
                         (matita_arithmetics_nat.S a))
                      (matita_basics_logic.rewrite_l
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.S a)
                         (__1:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            __1
                            (matita_arithmetics_nat.S a))
                         (matita_basics_logic.refl
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.S a))
                         n
                         (matita_basics_logic.rewrite_l
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.O
                            (__1:(pts.El pts.var matita_arithmetics_nat.nat) =>
                             matita_basics_logic.eq
                               matita_arithmetics_nat.nat
                               (matita_arithmetics_nat.S a)
                               __1)
                            (matita_basics_logic.rewrite_r
                               matita_arithmetics_nat.nat
                               (matita_arithmetics_nat.times q matita_arithmetics_nat.O)
                               (__1:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                matita_basics_logic.eq
                                  matita_arithmetics_nat.nat
                                  (matita_arithmetics_nat.S a)
                                  __1)
                               (matita_basics_logic.rewrite_l
                                  matita_arithmetics_nat.nat
                                  (matita_arithmetics_nat.times matita_arithmetics_nat.O q)
                                  (__1:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                   matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     (matita_arithmetics_nat.S a)
                                     __1)
                                  auto
                                  (matita_arithmetics_nat.times q matita_arithmetics_nat.O)
                                  (matita_arithmetics_nat.commutative_times
                                     matita_arithmetics_nat.O
                                     q))
                               matita_arithmetics_nat.O
                               (matita_arithmetics_nat.times_n_O q))
                            n
                            eqnO))
                      matita_arithmetics_nat.O
                      eqnO)
                   (matita_arithmetics_nat.not_eq_O_S a))
                _clearme)))
       n
       eqnO)
    (matita_arithmetics_nat.le_to_or_lt_eq
       matita_arithmetics_nat.O
       n
       (matita_arithmetics_nat.le_O_n n)).

def decidable_divides :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  pts.El pts.var (matita_basics_logic.decidable (divides n m))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_basics_logic.match_Or
    (matita_basics_logic.eq matita_basics_bool.bool (dividesb n m) matita_basics_bool.true)
    (matita_basics_logic.eq matita_basics_bool.bool (dividesb n m) matita_basics_bool.false)
    pts.var
    (__:(pts.El
           pts.var
           (matita_basics_logic.Or
              (matita_basics_logic.eq
                 matita_basics_bool.bool
                 (dividesb n m)
                 matita_basics_bool.true)
              (matita_basics_logic.eq
                 matita_basics_bool.bool
                 (dividesb n m)
                 matita_basics_bool.false))) =>
     matita_basics_logic.decidable (divides n m))
    (auto:(pts.El
             pts.var
             (matita_basics_logic.eq
                matita_basics_bool.bool
                (dividesb n m)
                matita_basics_bool.true)) =>
     matita_basics_logic.or_introl
       (divides n m)
       (matita_basics_logic.Not (divides n m))
       (dividesb_true_to_divides
          n
          m
          (matita_basics_logic.rewrite_r
             matita_basics_bool.bool
             matita_basics_bool.true
             (__:(pts.El pts.var matita_basics_bool.bool) =>
              matita_basics_logic.eq matita_basics_bool.bool __ matita_basics_bool.true)
             (matita_basics_logic.refl matita_basics_bool.bool matita_basics_bool.true)
             (dividesb n m)
             auto)))
    (auto:(pts.El
             pts.var
             (matita_basics_logic.eq
                matita_basics_bool.bool
                (dividesb n m)
                matita_basics_bool.false)) =>
     matita_basics_logic.or_intror
       (divides n m)
       (matita_basics_logic.Not (divides n m))
       (dividesb_false_to_not_divides
          n
          m
          (matita_basics_logic.rewrite_r
             matita_basics_bool.bool
             matita_basics_bool.false
             (__:(pts.El pts.var matita_basics_bool.bool) =>
              matita_basics_logic.eq matita_basics_bool.bool __ matita_basics_bool.false)
             (matita_basics_logic.refl matita_basics_bool.bool matita_basics_bool.false)
             (dividesb n m)
             auto)))
    (matita_basics_bool.true_or_false (dividesb n m)).

def divides_to_dividesb_true :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) ->
  __1:(pts.El pts.var (divides n m)) ->
  pts.El
    pts.var
    (matita_basics_logic.eq matita_basics_bool.bool (dividesb n m) matita_basics_bool.true)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) =>
  divnm:(pts.El pts.var (divides n m)) =>
  matita_basics_logic.match_Or
    (matita_basics_logic.eq matita_basics_bool.bool (dividesb n m) matita_basics_bool.true)
    (matita_basics_logic.eq matita_basics_bool.bool (dividesb n m) matita_basics_bool.false)
    pts.var
    (__:(pts.El
           pts.var
           (matita_basics_logic.Or
              (matita_basics_logic.eq
                 matita_basics_bool.bool
                 (dividesb n m)
                 matita_basics_bool.true)
              (matita_basics_logic.eq
                 matita_basics_bool.bool
                 (dividesb n m)
                 matita_basics_bool.false))) =>
     matita_basics_logic.eq matita_basics_bool.bool (dividesb n m) matita_basics_bool.true)
    (auto:(pts.El
             pts.var
             (matita_basics_logic.eq
                matita_basics_bool.bool
                (dividesb n m)
                matita_basics_bool.true)) =>
     matita_basics_logic.rewrite_r
       matita_basics_bool.bool
       matita_basics_bool.true
       (__:(pts.El pts.var matita_basics_bool.bool) =>
        matita_basics_logic.eq matita_basics_bool.bool __ matita_basics_bool.true)
       (matita_basics_logic.refl matita_basics_bool.bool matita_basics_bool.true)
       (dividesb n m)
       auto)
    (ndivbnm:(pts.El
                pts.var
                (matita_basics_logic.eq
                   matita_basics_bool.bool
                   (dividesb n m)
                   matita_basics_bool.false)) =>
     matita_basics_logic.False_ind
       (_x_66:(pts.El pts.var matita_basics_logic.False) =>
        matita_basics_logic.eq matita_basics_bool.bool (dividesb n m) matita_basics_bool.true)
       (matita_basics_logic.absurd
          (divides n m)
          divnm
          (dividesb_false_to_not_divides
             n
             m
             (matita_basics_logic.rewrite_r
                matita_basics_bool.bool
                matita_basics_bool.false
                (__:(pts.El pts.var matita_basics_bool.bool) =>
                 matita_basics_logic.eq matita_basics_bool.bool __ matita_basics_bool.false)
                (matita_basics_logic.refl matita_basics_bool.bool matita_basics_bool.false)
                (dividesb n m)
                ndivbnm))))
    (matita_basics_bool.true_or_false (dividesb n m)).

def let_clause_15321 :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) ->
  eqn0:(pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n)) ->
  _clearme:(pts.El pts.var (divides matita_arithmetics_nat.O m)) ->
  q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  eqm:(pts.El
         pts.var
         (matita_basics_logic.eq
            matita_arithmetics_nat.nat
            m
            (matita_arithmetics_nat.times matita_arithmetics_nat.O q))) ->
  pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat m matita_arithmetics_nat.O)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) =>
  eqn0:(pts.El
          pts.var
          (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n)) =>
  _clearme:(pts.El pts.var (divides matita_arithmetics_nat.O m)) =>
  q:(pts.El pts.var matita_arithmetics_nat.nat) =>
  eqm:(pts.El
         pts.var
         (matita_basics_logic.eq
            matita_arithmetics_nat.nat
            m
            (matita_arithmetics_nat.times matita_arithmetics_nat.O q))) =>
  matita_basics_logic.rewrite_r
    matita_arithmetics_nat.nat
    (matita_arithmetics_nat.times q matita_arithmetics_nat.O)
    (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
     matita_basics_logic.eq matita_arithmetics_nat.nat m __)
    (matita_basics_logic.rewrite_l
       matita_arithmetics_nat.nat
       (matita_arithmetics_nat.times matita_arithmetics_nat.O q)
       (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
        matita_basics_logic.eq matita_arithmetics_nat.nat m __)
       eqm
       (matita_arithmetics_nat.times q matita_arithmetics_nat.O)
       (matita_arithmetics_nat.commutative_times matita_arithmetics_nat.O q))
    matita_arithmetics_nat.O
    (matita_arithmetics_nat.times_n_O q).

def let_clause_15591 :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) ->
  eqn0:(pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n)) ->
  _clearme:(pts.El pts.var (divides matita_arithmetics_nat.O m)) ->
  q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  eqm:(pts.El
         pts.var
         (matita_basics_logic.eq
            matita_arithmetics_nat.nat
            m
            (matita_arithmetics_nat.times matita_arithmetics_nat.O q))) ->
  pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat m n)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) =>
  eqn0:(pts.El
          pts.var
          (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n)) =>
  _clearme:(pts.El pts.var (divides matita_arithmetics_nat.O m)) =>
  q:(pts.El pts.var matita_arithmetics_nat.nat) =>
  eqm:(pts.El
         pts.var
         (matita_basics_logic.eq
            matita_arithmetics_nat.nat
            m
            (matita_arithmetics_nat.times matita_arithmetics_nat.O q))) =>
  matita_basics_logic.rewrite_r
    matita_arithmetics_nat.nat
    matita_arithmetics_nat.O
    (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
     matita_basics_logic.eq matita_arithmetics_nat.nat __ n)
    eqn0
    m
    (let_clause_15321 n m posn eqn0 _clearme q eqm).

def let_clause_15601 :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) ->
  eqn0:(pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n)) ->
  _clearme:(pts.El pts.var (divides matita_arithmetics_nat.O m)) ->
  q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  eqm:(pts.El
         pts.var
         (matita_basics_logic.eq
            matita_arithmetics_nat.nat
            m
            (matita_arithmetics_nat.times matita_arithmetics_nat.O q))) ->
  pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat n matita_arithmetics_nat.O)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) =>
  eqn0:(pts.El
          pts.var
          (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n)) =>
  _clearme:(pts.El pts.var (divides matita_arithmetics_nat.O m)) =>
  q:(pts.El pts.var matita_arithmetics_nat.nat) =>
  eqm:(pts.El
         pts.var
         (matita_basics_logic.eq
            matita_arithmetics_nat.nat
            m
            (matita_arithmetics_nat.times matita_arithmetics_nat.O q))) =>
  matita_basics_logic.rewrite_l
    matita_arithmetics_nat.nat
    m
    (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
     matita_basics_logic.eq matita_arithmetics_nat.nat __ matita_arithmetics_nat.O)
    (let_clause_15321 n m posn eqn0 _clearme q eqm)
    n
    (let_clause_15591 n m posn eqn0 _clearme q eqm).

def divides_to_dividesb_true1 :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) ->
  __1:(pts.El pts.var (divides n m)) ->
  pts.El
    pts.var
    (matita_basics_logic.eq matita_basics_bool.bool (dividesb n m) matita_basics_bool.true)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) =>
  matita_basics_logic.match_Or
    (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)
    (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n)
    pts.var
    (__:(pts.El
           pts.var
           (matita_basics_logic.Or
              (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)
              (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n))) =>
     pts.Prod
       pts.var
       pts.var
       (divides n m)
       (__1:(pts.El pts.var (divides n m)) =>
        matita_basics_logic.eq matita_basics_bool.bool (dividesb n m) matita_basics_bool.true))
    (auto:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) =>
     auto':(pts.El pts.var (divides n m)) => divides_to_dividesb_true n m auto auto')
    (eqn0:(pts.El
             pts.var
             (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n)) =>
     matita_basics_logic.eq_ind
       matita_arithmetics_nat.nat
       matita_arithmetics_nat.O
       (x_1:(pts.El pts.var matita_arithmetics_nat.nat) =>
        _x_2:(pts.El
                pts.var
                (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O x_1)) =>
        pts.Prod
          pts.var
          pts.var
          (divides x_1 m)
          (__:(pts.El pts.var (divides x_1 m)) =>
           matita_basics_logic.eq matita_basics_bool.bool (dividesb x_1 m) matita_basics_bool.true))
       (_clearme:(pts.El pts.var (divides matita_arithmetics_nat.O m)) =>
        match_divides
          matita_arithmetics_nat.O
          m
          pts.var
          (__:(pts.El pts.var (divides matita_arithmetics_nat.O m)) =>
           matita_basics_logic.eq
             matita_basics_bool.bool
             (dividesb matita_arithmetics_nat.O m)
             matita_basics_bool.true)
          (q:(pts.El pts.var matita_arithmetics_nat.nat) =>
           eqm:(pts.El
                  pts.var
                  (matita_basics_logic.eq
                     matita_arithmetics_nat.nat
                     m
                     (matita_arithmetics_nat.times matita_arithmetics_nat.O q))) =>
           matita_basics_logic.False_ind
             (_x_66:(pts.El pts.var matita_basics_logic.False) =>
              matita_basics_logic.eq
                matita_basics_bool.bool
                (dividesb matita_arithmetics_nat.O m)
                matita_basics_bool.true)
             (matita_basics_logic.absurd
                (matita_arithmetics_nat.le (matita_arithmetics_nat.S n) matita_arithmetics_nat.O)
                (matita_basics_logic.eq_coerc
                   (matita_arithmetics_nat.le
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                      m)
                   (matita_arithmetics_nat.le
                      (matita_arithmetics_nat.S n)
                      matita_arithmetics_nat.O)
                   posn
                   (matita_basics_logic.rewrite_l
                      matita_arithmetics_nat.nat
                      n
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         (pts.u pts.var)
                         (matita_arithmetics_nat.le (matita_arithmetics_nat.S __) m)
                         (matita_arithmetics_nat.le
                            (matita_arithmetics_nat.S n)
                            matita_arithmetics_nat.O))
                      (matita_basics_logic.rewrite_r
                         matita_arithmetics_nat.nat
                         n
                         (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq
                            (pts.u pts.var)
                            (matita_arithmetics_nat.le (matita_arithmetics_nat.S n) __)
                            (matita_arithmetics_nat.le
                               (matita_arithmetics_nat.S n)
                               matita_arithmetics_nat.O))
                         (matita_basics_logic.rewrite_l
                            matita_arithmetics_nat.nat
                            n
                            (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                             matita_basics_logic.eq
                               (pts.u pts.var)
                               (matita_arithmetics_nat.le (matita_arithmetics_nat.S n) n)
                               (matita_arithmetics_nat.le (matita_arithmetics_nat.S n) __))
                            (matita_basics_logic.refl
                               (pts.u pts.var)
                               (matita_arithmetics_nat.le (matita_arithmetics_nat.S n) n))
                            matita_arithmetics_nat.O
                            (let_clause_15601 n m posn eqn0 _clearme q eqm))
                         m
                         (let_clause_15591 n m posn eqn0 _clearme q eqm))
                      matita_arithmetics_nat.O
                      (let_clause_15601 n m posn eqn0 _clearme q eqm)))
                (matita_arithmetics_nat.not_le_Sn_O n)))
          _clearme)
       n
       eqn0)
    (matita_arithmetics_nat.le_to_or_lt_eq
       matita_arithmetics_nat.O
       n
       (matita_arithmetics_nat.le_O_n n)).

def not_divides_to_dividesb_false :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) ->
  __1:(pts.El pts.var (matita_basics_logic.Not (divides n m))) ->
  pts.El
    pts.var
    (matita_basics_logic.eq matita_basics_bool.bool (dividesb n m) matita_basics_bool.false)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) =>
  matita_basics_logic.match_Or
    (matita_basics_logic.eq matita_basics_bool.bool (dividesb n m) matita_basics_bool.true)
    (matita_basics_logic.eq matita_basics_bool.bool (dividesb n m) matita_basics_bool.false)
    pts.var
    (__:(pts.El
           pts.var
           (matita_basics_logic.Or
              (matita_basics_logic.eq
                 matita_basics_bool.bool
                 (dividesb n m)
                 matita_basics_bool.true)
              (matita_basics_logic.eq
                 matita_basics_bool.bool
                 (dividesb n m)
                 matita_basics_bool.false))) =>
     pts.Prod
       pts.var
       pts.var
       (matita_basics_logic.Not (divides n m))
       (__1:(pts.El pts.var (matita_basics_logic.Not (divides n m))) =>
        matita_basics_logic.eq matita_basics_bool.bool (dividesb n m) matita_basics_bool.false))
    (divbnm:(pts.El
               pts.var
               (matita_basics_logic.eq
                  matita_basics_bool.bool
                  (dividesb n m)
                  matita_basics_bool.true)) =>
     ndivnm:(pts.El pts.var (matita_basics_logic.Not (divides n m))) =>
     matita_basics_logic.False_ind
       (_x_66:(pts.El pts.var matita_basics_logic.False) =>
        matita_basics_logic.eq matita_basics_bool.bool (dividesb n m) matita_basics_bool.false)
       (matita_basics_logic.absurd
          (divides n m)
          (dividesb_true_to_divides
             n
             m
             (matita_basics_logic.rewrite_r
                matita_basics_bool.bool
                matita_basics_bool.true
                (__:(pts.El pts.var matita_basics_bool.bool) =>
                 matita_basics_logic.eq matita_basics_bool.bool __ matita_basics_bool.true)
                (matita_basics_logic.refl matita_basics_bool.bool matita_basics_bool.true)
                (dividesb n m)
                divbnm))
          ndivnm))
    (auto:(pts.El
             pts.var
             (matita_basics_logic.eq
                matita_basics_bool.bool
                (dividesb n m)
                matita_basics_bool.false)) =>
     auto':(pts.El pts.var (matita_basics_logic.Not (divides n m))) =>
     matita_basics_logic.rewrite_r
       matita_basics_bool.bool
       matita_basics_bool.false
       (__:(pts.El pts.var matita_basics_bool.bool) =>
        matita_basics_logic.eq matita_basics_bool.bool __ matita_basics_bool.false)
       (matita_basics_logic.refl matita_basics_bool.bool matita_basics_bool.false)
       (dividesb n m)
       auto)
    (matita_basics_bool.true_or_false (dividesb n m)).

def dividesb_div_true :
  d:(pts.El pts.var matita_arithmetics_nat.nat) ->
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) ->
  __1:(pts.El
         pts.var
         (matita_basics_logic.eq matita_basics_bool.bool (dividesb d n) matita_basics_bool.true)) ->
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_basics_bool.bool
       (dividesb (matita_arithmetics_div_and_mod.div n d) n)
       matita_basics_bool.true)
  :=
  d:(pts.El pts.var matita_arithmetics_nat.nat) =>
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) =>
  divbdn:(pts.El
            pts.var
            (matita_basics_logic.eq matita_basics_bool.bool (dividesb d n) matita_basics_bool.true)) =>
  divides_to_dividesb_true1
    (matita_arithmetics_div_and_mod.div n d)
    n
    posn
    (divides_div
       d
       n
       (dividesb_true_to_divides
          d
          n
          (matita_basics_logic.rewrite_r
             matita_basics_bool.bool
             matita_basics_bool.true
             (__:(pts.El pts.var matita_basics_bool.bool) =>
              matita_basics_logic.eq matita_basics_bool.bool __ matita_basics_bool.true)
             (matita_basics_logic.refl matita_basics_bool.bool matita_basics_bool.true)
             (dividesb d n)
             divbdn))).

def let_clause_1573 :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) ->
  _clearme:(pts.El pts.var (divides m n)) ->
  d:(pts.El pts.var matita_arithmetics_nat.nat) ->
  auto:(pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O m)) ->
  auto':(pts.El
           pts.var
           (matita_basics_logic.eq matita_arithmetics_nat.nat n (matita_arithmetics_nat.times m d))) ->
  pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat n m)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) =>
  _clearme:(pts.El pts.var (divides m n)) =>
  d:(pts.El pts.var matita_arithmetics_nat.nat) =>
  auto:(pts.El
          pts.var
          (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O m)) =>
  auto':(pts.El
           pts.var
           (matita_basics_logic.eq matita_arithmetics_nat.nat n (matita_arithmetics_nat.times m d))) =>
  matita_basics_logic.rewrite_r
    matita_arithmetics_nat.nat
    (matita_arithmetics_nat.times m d)
    (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
     matita_basics_logic.eq matita_arithmetics_nat.nat n __)
    auto'
    m
    (matita_basics_logic.rewrite_l
       matita_arithmetics_nat.nat
       matita_arithmetics_nat.O
       (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
        matita_basics_logic.eq matita_arithmetics_nat.nat m (matita_arithmetics_nat.times __ d))
       (matita_basics_logic.rewrite_l
          matita_arithmetics_nat.nat
          matita_arithmetics_nat.O
          (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
           matita_basics_logic.eq
             matita_arithmetics_nat.nat
             __
             (matita_arithmetics_nat.times matita_arithmetics_nat.O d))
          (matita_arithmetics_nat.times_O_n d)
          m
          auto)
       m
       auto).

def let_clause_1585 :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) ->
  _clearme:(pts.El pts.var (divides m n)) ->
  d:(pts.El pts.var matita_arithmetics_nat.nat) ->
  auto:(pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O m)) ->
  auto':(pts.El
           pts.var
           (matita_basics_logic.eq matita_arithmetics_nat.nat n (matita_arithmetics_nat.times m d))) ->
  pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O n)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) =>
  _clearme:(pts.El pts.var (divides m n)) =>
  d:(pts.El pts.var matita_arithmetics_nat.nat) =>
  auto:(pts.El
          pts.var
          (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O m)) =>
  auto':(pts.El
           pts.var
           (matita_basics_logic.eq matita_arithmetics_nat.nat n (matita_arithmetics_nat.times m d))) =>
  matita_basics_logic.rewrite_r
    matita_arithmetics_nat.nat
    m
    (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
     matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O __)
    auto
    n
    (let_clause_1573 n m posn _clearme d auto auto').

def dividesb_true_to_lt_O :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) ->
  __1:(pts.El pts.var (divides m n)) ->
  pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) =>
  _clearme:(pts.El pts.var (divides m n)) =>
  match_divides
    m
    n
    pts.var
    (__:(pts.El pts.var (divides m n)) => matita_arithmetics_nat.lt matita_arithmetics_nat.O m)
    (d:(pts.El pts.var matita_arithmetics_nat.nat) =>
     matita_basics_logic.match_Or
       (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)
       (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O m)
       pts.var
       (__:(pts.El
              pts.var
              (matita_basics_logic.Or
                 (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)
                 (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O m))) =>
        pts.Prod
          pts.var
          pts.var
          (matita_basics_logic.eq matita_arithmetics_nat.nat n (matita_arithmetics_nat.times m d))
          (__1:(pts.El
                  pts.var
                  (matita_basics_logic.eq
                     matita_arithmetics_nat.nat
                     n
                     (matita_arithmetics_nat.times m d))) =>
           matita_arithmetics_nat.lt matita_arithmetics_nat.O m))
       (auto:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) =>
        auto':(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    matita_arithmetics_nat.nat
                    n
                    (matita_arithmetics_nat.times m d))) =>
        auto)
       (auto:(pts.El
                pts.var
                (matita_basics_logic.eq matita_arithmetics_nat.nat matita_arithmetics_nat.O m)) =>
        auto':(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    matita_arithmetics_nat.nat
                    n
                    (matita_arithmetics_nat.times m d))) =>
        matita_basics_logic.eq_coerc
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)
          posn
          (matita_basics_logic.rewrite_r
             matita_arithmetics_nat.nat
             n
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq
                (pts.u pts.var)
                (matita_arithmetics_nat.lt __ n)
                (matita_arithmetics_nat.lt matita_arithmetics_nat.O m))
             (matita_basics_logic.rewrite_r
                matita_arithmetics_nat.nat
                n
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   (pts.u pts.var)
                   (matita_arithmetics_nat.lt n n)
                   (matita_arithmetics_nat.lt __ m))
                (matita_basics_logic.rewrite_l
                   matita_arithmetics_nat.nat
                   n
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      (pts.u pts.var)
                      (matita_arithmetics_nat.lt n n)
                      (matita_arithmetics_nat.lt n __))
                   (matita_basics_logic.refl (pts.u pts.var) (matita_arithmetics_nat.lt n n))
                   m
                   (let_clause_1573 n m posn _clearme d auto auto'))
                matita_arithmetics_nat.O
                (let_clause_1585 n m posn _clearme d auto auto'))
             matita_arithmetics_nat.O
             (let_clause_1585 n m posn _clearme d auto auto')))
       (matita_arithmetics_nat.le_to_or_lt_eq
          matita_arithmetics_nat.O
          m
          (matita_arithmetics_nat.le_O_n m)))
    _clearme.

def prime :
  __:(pts.El pts.var matita_arithmetics_nat.nat) -> pts.U pts.var
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_basics_logic.And
    (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)
    (pts.Prod
       pts.var
       pts.var
       matita_arithmetics_nat.nat
       (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
        pts.Prod
          pts.var
          pts.var
          (divides m n)
          (__:(pts.El pts.var (divides m n)) =>
           pts.Prod
             pts.var
             pts.var
             (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) m)
             (__1:(pts.El
                     pts.var
                     (matita_arithmetics_nat.lt
                        (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                        m)) =>
              matita_basics_logic.eq matita_arithmetics_nat.nat m n)))).

def not_prime_O :
  pts.El pts.var (matita_basics_logic.Not (prime matita_arithmetics_nat.O))
  :=
  matita_basics_logic.nmk
    (prime matita_arithmetics_nat.O)
    (_clearme:(pts.El pts.var (prime matita_arithmetics_nat.O)) =>
     matita_basics_logic.match_And
       (matita_arithmetics_nat.lt
          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
          matita_arithmetics_nat.O)
       (pts.Prod
          pts.var
          pts.var
          matita_arithmetics_nat.nat
          (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
           pts.Prod
             pts.var
             pts.var
             (divides m matita_arithmetics_nat.O)
             (__:(pts.El pts.var (divides m matita_arithmetics_nat.O)) =>
              pts.Prod
                pts.var
                pts.var
                (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) m)
                (__1:(pts.El
                        pts.var
                        (matita_arithmetics_nat.lt
                           (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                           m)) =>
                 matita_basics_logic.eq matita_arithmetics_nat.nat m matita_arithmetics_nat.O))))
       pts.var
       (__:(pts.El
              pts.var
              (matita_basics_logic.And
                 (matita_arithmetics_nat.lt
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    matita_arithmetics_nat.O)
                 (pts.Prod
                    pts.var
                    pts.var
                    matita_arithmetics_nat.nat
                    (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
                     pts.Prod
                       pts.var
                       pts.var
                       (divides m matita_arithmetics_nat.O)
                       (__:(pts.El pts.var (divides m matita_arithmetics_nat.O)) =>
                        pts.Prod
                          pts.var
                          pts.var
                          (matita_arithmetics_nat.lt
                             (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                             m)
                          (__1:(pts.El
                                  pts.var
                                  (matita_arithmetics_nat.lt
                                     (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                                     m)) =>
                           matita_basics_logic.eq
                             matita_arithmetics_nat.nat
                             m
                             matita_arithmetics_nat.O)))))) =>
        matita_basics_logic.False)
       (lt10:(pts.El
                pts.var
                (matita_arithmetics_nat.lt
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                   matita_arithmetics_nat.O)) =>
        auto:(m:(pts.El pts.var matita_arithmetics_nat.nat) ->
              __:(pts.El pts.var (divides m matita_arithmetics_nat.O)) ->
              __1:(pts.El
                     pts.var
                     (matita_arithmetics_nat.lt
                        (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                        m)) ->
              pts.El
                pts.var
                (matita_basics_logic.eq matita_arithmetics_nat.nat m matita_arithmetics_nat.O)) =>
        matita_basics_logic.absurd
          (matita_arithmetics_nat.le
             (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             matita_arithmetics_nat.O)
          lt10
          (matita_arithmetics_nat.not_le_Sn_O (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
       _clearme).

def not_prime_SO :
  pts.El pts.var (matita_basics_logic.Not (prime (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
  :=
  matita_basics_logic.nmk
    (prime (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (_clearme:(pts.El pts.var (prime (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
     matita_basics_logic.match_And
       (matita_arithmetics_nat.lt
          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
       (pts.Prod
          pts.var
          pts.var
          matita_arithmetics_nat.nat
          (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
           pts.Prod
             pts.var
             pts.var
             (divides m (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             (__:(pts.El
                    pts.var
                    (divides m (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
              pts.Prod
                pts.var
                pts.var
                (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) m)
                (__1:(pts.El
                        pts.var
                        (matita_arithmetics_nat.lt
                           (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                           m)) =>
                 matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   m
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O)))))
       pts.var
       (__:(pts.El
              pts.var
              (matita_basics_logic.And
                 (matita_arithmetics_nat.lt
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 (pts.Prod
                    pts.var
                    pts.var
                    matita_arithmetics_nat.nat
                    (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
                     pts.Prod
                       pts.var
                       pts.var
                       (divides m (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       (__:(pts.El
                              pts.var
                              (divides
                                 m
                                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
                        pts.Prod
                          pts.var
                          pts.var
                          (matita_arithmetics_nat.lt
                             (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                             m)
                          (__1:(pts.El
                                  pts.var
                                  (matita_arithmetics_nat.lt
                                     (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                                     m)) =>
                           matita_basics_logic.eq
                             matita_arithmetics_nat.nat
                             m
                             (matita_arithmetics_nat.S matita_arithmetics_nat.O))))))) =>
        matita_basics_logic.False)
       (lt11:(pts.El
                pts.var
                (matita_arithmetics_nat.lt
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
        auto:(m:(pts.El pts.var matita_arithmetics_nat.nat) ->
              __:(pts.El pts.var (divides m (matita_arithmetics_nat.S matita_arithmetics_nat.O))) ->
              __1:(pts.El
                     pts.var
                     (matita_arithmetics_nat.lt
                        (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                        m)) ->
              pts.El
                pts.var
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   m
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
        matita_basics_logic.absurd
          (matita_arithmetics_nat.le
             (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             (matita_arithmetics_nat.S matita_arithmetics_nat.O))
          lt11
          (matita_arithmetics_nat.not_le_Sn_n (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
       _clearme).

def prime_to_lt_O :
  p:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (prime p)) ->
  pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O p)
  :=
  p:(pts.El pts.var matita_arithmetics_nat.nat) =>
  _clearme:(pts.El pts.var (prime p)) =>
  matita_basics_logic.match_And
    (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) p)
    (pts.Prod
       pts.var
       pts.var
       matita_arithmetics_nat.nat
       (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
        pts.Prod
          pts.var
          pts.var
          (divides m p)
          (__:(pts.El pts.var (divides m p)) =>
           pts.Prod
             pts.var
             pts.var
             (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) m)
             (__1:(pts.El
                     pts.var
                     (matita_arithmetics_nat.lt
                        (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                        m)) =>
              matita_basics_logic.eq matita_arithmetics_nat.nat m p))))
    pts.var
    (__:(pts.El
           pts.var
           (matita_basics_logic.And
              (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) p)
              (pts.Prod
                 pts.var
                 pts.var
                 matita_arithmetics_nat.nat
                 (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
                  pts.Prod
                    pts.var
                    pts.var
                    (divides m p)
                    (__:(pts.El pts.var (divides m p)) =>
                     pts.Prod
                       pts.var
                       pts.var
                       (matita_arithmetics_nat.lt
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                          m)
                       (__1:(pts.El
                               pts.var
                               (matita_arithmetics_nat.lt
                                  (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                                  m)) =>
                        matita_basics_logic.eq matita_arithmetics_nat.nat m p)))))) =>
     matita_arithmetics_nat.lt matita_arithmetics_nat.O p)
    (lt1p:(pts.El
             pts.var
             (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) p)) =>
     auto:(m:(pts.El pts.var matita_arithmetics_nat.nat) ->
           __:(pts.El pts.var (divides m p)) ->
           __1:(pts.El
                  pts.var
                  (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) m)) ->
           pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat m p)) =>
     matita_arithmetics_nat.lt_S_to_lt matita_arithmetics_nat.O p lt1p)
    _clearme.

def prime_to_lt_SO :
  p:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (prime p)) ->
  pts.El pts.var (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) p)
  :=
  p:(pts.El pts.var matita_arithmetics_nat.nat) =>
  _clearme:(pts.El pts.var (prime p)) =>
  matita_basics_logic.match_And
    (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) p)
    (pts.Prod
       pts.var
       pts.var
       matita_arithmetics_nat.nat
       (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
        pts.Prod
          pts.var
          pts.var
          (divides m p)
          (__:(pts.El pts.var (divides m p)) =>
           pts.Prod
             pts.var
             pts.var
             (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) m)
             (__1:(pts.El
                     pts.var
                     (matita_arithmetics_nat.lt
                        (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                        m)) =>
              matita_basics_logic.eq matita_arithmetics_nat.nat m p))))
    pts.var
    (__:(pts.El
           pts.var
           (matita_basics_logic.And
              (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) p)
              (pts.Prod
                 pts.var
                 pts.var
                 matita_arithmetics_nat.nat
                 (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
                  pts.Prod
                    pts.var
                    pts.var
                    (divides m p)
                    (__:(pts.El pts.var (divides m p)) =>
                     pts.Prod
                       pts.var
                       pts.var
                       (matita_arithmetics_nat.lt
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                          m)
                       (__1:(pts.El
                               pts.var
                               (matita_arithmetics_nat.lt
                                  (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                                  m)) =>
                        matita_basics_logic.eq matita_arithmetics_nat.nat m p)))))) =>
     matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) p)
    (lt1p:(pts.El
             pts.var
             (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) p)) =>
     auto:(m:(pts.El pts.var matita_arithmetics_nat.nat) ->
           __:(pts.El pts.var (divides m p)) ->
           __1:(pts.El
                  pts.var
                  (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) m)) ->
           pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat m p)) =>
     lt1p)
    _clearme.

def smallest_factor :
  __:(pts.El pts.var matita_arithmetics_nat.nat) -> pts.El pts.var matita_arithmetics_nat.nat
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_basics_bool.match_bool
    pts.var
    (__:(pts.El pts.var matita_basics_bool.bool) => matita_arithmetics_nat.nat)
    n
    (matita_arithmetics_minimization.min
       n
       (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
       (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
        matita_arithmetics_nat.eqb (matita_arithmetics_div_and_mod.mod n m) matita_arithmetics_nat.O))
    (matita_arithmetics_nat.leb n (matita_arithmetics_nat.S matita_arithmetics_nat.O)).

def smallest_factor_to_min :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)) ->
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (smallest_factor n)
       (matita_arithmetics_minimization.min
          n
          (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
          (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
           matita_arithmetics_nat.eqb
             (matita_arithmetics_div_and_mod.mod n m)
             matita_arithmetics_nat.O)))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  lt1n:(pts.El
          pts.var
          (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)) =>
  matita_basics_logic.eq_ind_r
    matita_basics_bool.bool
    matita_basics_bool.false
    (x:(pts.El pts.var matita_basics_bool.bool) =>
     __:(pts.El
           pts.var
           (matita_basics_logic.eq matita_basics_bool.bool x matita_basics_bool.false)) =>
     matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (matita_basics_bool.match_bool
          pts.var
          (_0:(pts.El pts.var matita_basics_bool.bool) => matita_arithmetics_nat.nat)
          n
          (matita_arithmetics_minimization.min
             n
             (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_arithmetics_nat.eqb
                (matita_arithmetics_nat.match_nat
                   pts.var
                   (_0:(pts.El pts.var matita_arithmetics_nat.nat) => matita_arithmetics_nat.nat)
                   n
                   (p:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_arithmetics_div_and_mod.mod_aux n n p)
                   m)
                matita_arithmetics_nat.O))
          x)
       (matita_arithmetics_minimization.min
          n
          (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
          (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
           matita_arithmetics_nat.eqb
             (matita_arithmetics_nat.match_nat
                pts.var
                (_0:(pts.El pts.var matita_arithmetics_nat.nat) => matita_arithmetics_nat.nat)
                n
                (p:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_arithmetics_div_and_mod.mod_aux n n p)
                m)
             matita_arithmetics_nat.O)))
    (matita_basics_logic.refl
       matita_arithmetics_nat.nat
       (matita_basics_bool.match_bool
          pts.var
          (__:(pts.El pts.var matita_basics_bool.bool) => matita_arithmetics_nat.nat)
          n
          (matita_arithmetics_minimization.min
             n
             (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_arithmetics_nat.eqb
                (matita_arithmetics_nat.match_nat
                   pts.var
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) => matita_arithmetics_nat.nat)
                   n
                   (p:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_arithmetics_div_and_mod.mod_aux n n p)
                   m)
                matita_arithmetics_nat.O))
          matita_basics_bool.false))
    (matita_arithmetics_nat.leb n (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (matita_arithmetics_nat.lt_to_leb_false
       n
       (matita_arithmetics_nat.S matita_arithmetics_nat.O)
       lt1n).

def example1 :
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (smallest_factor
          (matita_arithmetics_nat.S
             (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))))
       (matita_arithmetics_nat.S
          (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))))
  :=
  matita_basics_logic.refl
    matita_arithmetics_nat.nat
    (matita_arithmetics_nat.S
       (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))).

def example2 :
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (smallest_factor
          (matita_arithmetics_nat.S
             (matita_arithmetics_nat.S
                (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O)))))
       (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
  :=
  matita_basics_logic.refl
    matita_arithmetics_nat.nat
    (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O)).

def example3 :
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (smallest_factor
          (matita_arithmetics_nat.S
             (matita_arithmetics_nat.S
                (matita_arithmetics_nat.S
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S matita_arithmetics_nat.O))))))))
       (matita_arithmetics_nat.S
          (matita_arithmetics_nat.S
             (matita_arithmetics_nat.S
                (matita_arithmetics_nat.S
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O))))))))
  :=
  matita_basics_logic.refl
    matita_arithmetics_nat.nat
    (matita_arithmetics_nat.S
       (matita_arithmetics_nat.S
          (matita_arithmetics_nat.S
             (matita_arithmetics_nat.S
                (matita_arithmetics_nat.S
                   (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))))))).

def le_SO_smallest_factor :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.le n (matita_arithmetics_nat.S matita_arithmetics_nat.O))) ->
  pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat (smallest_factor n) n)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  le1n:(pts.El
          pts.var
          (matita_arithmetics_nat.le n (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
  matita_basics_logic.eq_ind_r
    matita_basics_bool.bool
    matita_basics_bool.true
    (x:(pts.El pts.var matita_basics_bool.bool) =>
     __:(pts.El pts.var (matita_basics_logic.eq matita_basics_bool.bool x matita_basics_bool.true)) =>
     matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (matita_basics_bool.match_bool
          pts.var
          (_0:(pts.El pts.var matita_basics_bool.bool) => matita_arithmetics_nat.nat)
          n
          (matita_arithmetics_minimization.min
             n
             (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_arithmetics_nat.eqb
                (matita_arithmetics_nat.match_nat
                   pts.var
                   (_0:(pts.El pts.var matita_arithmetics_nat.nat) => matita_arithmetics_nat.nat)
                   n
                   (p:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_arithmetics_div_and_mod.mod_aux n n p)
                   m)
                matita_arithmetics_nat.O))
          x)
       n)
    (matita_basics_logic.refl
       matita_arithmetics_nat.nat
       (matita_basics_bool.match_bool
          pts.var
          (__:(pts.El pts.var matita_basics_bool.bool) => matita_arithmetics_nat.nat)
          n
          (matita_arithmetics_minimization.min
             n
             (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_arithmetics_nat.eqb
                (matita_arithmetics_nat.match_nat
                   pts.var
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) => matita_arithmetics_nat.nat)
                   n
                   (p:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_arithmetics_div_and_mod.mod_aux n n p)
                   m)
                matita_arithmetics_nat.O))
          matita_basics_bool.true))
    (matita_arithmetics_nat.leb n (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (matita_arithmetics_nat.le_to_leb_true n (matita_arithmetics_nat.S matita_arithmetics_nat.O) le1n).

def lt_SO_smallest_factor :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)) ->
  pts.El
    pts.var
    (matita_arithmetics_nat.lt
       (matita_arithmetics_nat.S matita_arithmetics_nat.O)
       (smallest_factor n))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  lt1n:(pts.El
          pts.var
          (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)) =>
  matita_basics_logic.eq_ind_r
    matita_arithmetics_nat.nat
    (matita_arithmetics_minimization.min
       n
       (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
       (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
        matita_arithmetics_nat.eqb (matita_arithmetics_div_and_mod.mod n m) matita_arithmetics_nat.O))
    (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
     __:(pts.El
           pts.var
           (matita_basics_logic.eq
              matita_arithmetics_nat.nat
              x
              (matita_arithmetics_minimization.min
                 n
                 (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
                  matita_arithmetics_nat.eqb
                    (matita_arithmetics_div_and_mod.mod n m)
                    matita_arithmetics_nat.O)))) =>
     matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) x)
    (matita_arithmetics_minimization.le_min_l
       (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
        matita_arithmetics_nat.eqb (matita_arithmetics_div_and_mod.mod n m) matita_arithmetics_nat.O)
       n
       (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
    (smallest_factor n)
    (smallest_factor_to_min n lt1n).

def lt_O_smallest_factor :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) ->
  pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O (smallest_factor n))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) =>
  matita_arithmetics_nat.match_le
    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
    pts.var
    (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
     _0:(pts.El
           pts.var
           (matita_arithmetics_nat.le (matita_arithmetics_nat.S matita_arithmetics_nat.O) __)) =>
     matita_arithmetics_nat.lt matita_arithmetics_nat.O (smallest_factor __))
    (matita_basics_logic.eq_ind_r
       matita_arithmetics_nat.nat
       (matita_arithmetics_nat.S matita_arithmetics_nat.O)
       (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
        __:(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 x
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
        matita_arithmetics_nat.lt matita_arithmetics_nat.O x)
       (matita_arithmetics_nat.lt_O_S matita_arithmetics_nat.O)
       (smallest_factor (matita_arithmetics_nat.S matita_arithmetics_nat.O))
       (le_SO_smallest_factor
          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
          (matita_arithmetics_nat.lt_O_S matita_arithmetics_nat.O)))
    (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
     posm:(pts.El
             pts.var
             (matita_arithmetics_nat.le (matita_arithmetics_nat.S matita_arithmetics_nat.O) m)) =>
     matita_arithmetics_nat.le_S_S_to_le
       (matita_arithmetics_nat.S matita_arithmetics_nat.O)
       (smallest_factor (matita_arithmetics_nat.S m))
       (matita_arithmetics_nat.le_S
          (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
          (smallest_factor (matita_arithmetics_nat.S m))
          (lt_SO_smallest_factor
             (matita_arithmetics_nat.S m)
             (matita_arithmetics_nat.le_S_S
                (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                m
                posm))))
    n
    posn.

def divides_smallest_factor_n :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) ->
  pts.El pts.var (divides (smallest_factor n) n)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) =>
  matita_basics_logic.match_Or
    (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (matita_arithmetics_nat.S matita_arithmetics_nat.O)
       n)
    pts.var
    (__:(pts.El
           pts.var
           (matita_basics_logic.Or
              (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                 n))) =>
     divides (smallest_factor n) n)
    (lt1n:(pts.El
             pts.var
             (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)) =>
     mod_O_to_divides
       (smallest_factor n)
       n
       (lt_O_smallest_factor n posn)
       (matita_basics_logic.eq_ind_r
          matita_arithmetics_nat.nat
          (matita_arithmetics_minimization.min
             n
             (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_arithmetics_nat.eqb
                (matita_arithmetics_div_and_mod.mod n m)
                matita_arithmetics_nat.O))
          (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
           __:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    matita_arithmetics_nat.nat
                    x
                    (matita_arithmetics_minimization.min
                       n
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
                        matita_arithmetics_nat.eqb
                          (matita_arithmetics_div_and_mod.mod n m)
                          matita_arithmetics_nat.O)))) =>
           matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (matita_arithmetics_div_and_mod.mod n x)
             matita_arithmetics_nat.O)
          (matita_arithmetics_nat.eqb_true_to_eq
             (matita_arithmetics_div_and_mod.mod
                n
                (matita_arithmetics_minimization.min
                   n
                   (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_arithmetics_nat.eqb
                      (matita_arithmetics_div_and_mod.mod n m)
                      matita_arithmetics_nat.O)))
             matita_arithmetics_nat.O
             (matita_arithmetics_minimization.f_min_true
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_arithmetics_nat.eqb
                   (matita_arithmetics_div_and_mod.mod n __)
                   matita_arithmetics_nat.O)
                n
                (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                (matita_basics_logic.ex_intro
                   matita_arithmetics_nat.nat
                   (i:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.And
                      (matita_basics_logic.And
                         (matita_arithmetics_nat.le
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                            i)
                         (matita_arithmetics_nat.lt
                            i
                            (matita_arithmetics_nat.plus
                               n
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S matita_arithmetics_nat.O)))))
                      (matita_basics_logic.eq
                         matita_basics_bool.bool
                         (matita_arithmetics_nat.eqb
                            (matita_arithmetics_div_and_mod.mod n i)
                            matita_arithmetics_nat.O)
                         matita_basics_bool.true))
                   n
                   (matita_basics_logic.conj
                      (matita_basics_logic.And
                         (matita_arithmetics_nat.le
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                            n)
                         (matita_arithmetics_nat.lt
                            n
                            (matita_arithmetics_nat.plus
                               n
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S matita_arithmetics_nat.O)))))
                      (matita_basics_logic.eq
                         matita_basics_bool.bool
                         (matita_arithmetics_nat.eqb
                            (matita_arithmetics_div_and_mod.mod n n)
                            matita_arithmetics_nat.O)
                         matita_basics_bool.true)
                      (matita_basics_logic.conj
                         (matita_arithmetics_nat.le
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                            n)
                         (matita_arithmetics_nat.lt
                            n
                            (matita_arithmetics_nat.plus
                               n
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S matita_arithmetics_nat.O))))
                         lt1n
                         (matita_basics_logic.eq_coerc
                            (matita_arithmetics_nat.le
                               (matita_arithmetics_nat.S n)
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.S n)
                                  (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                            (matita_arithmetics_nat.le
                               (matita_arithmetics_nat.S n)
                               (matita_arithmetics_nat.plus
                                  n
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S matita_arithmetics_nat.O))))
                            (matita_arithmetics_nat.le_plus_n_r
                               (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                               (matita_arithmetics_nat.S n))
                            (matita_basics_logic.rewrite_l
                               matita_arithmetics_nat.nat
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                                  (matita_arithmetics_nat.S n))
                               (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                matita_basics_logic.eq
                                  (pts.u pts.var)
                                  (matita_arithmetics_nat.le
                                     (matita_arithmetics_nat.S n)
                                     __)
                                  (matita_arithmetics_nat.le
                                     (matita_arithmetics_nat.S n)
                                     (matita_arithmetics_nat.plus
                                        n
                                        (matita_arithmetics_nat.S
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O)))))
                               (matita_basics_logic.rewrite_r
                                  matita_arithmetics_nat.nat
                                  (matita_arithmetics_nat.plus
                                     n
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O)))
                                  (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                   matita_basics_logic.eq
                                     (pts.u pts.var)
                                     (matita_arithmetics_nat.le
                                        (matita_arithmetics_nat.S n)
                                        __)
                                     (matita_arithmetics_nat.le
                                        (matita_arithmetics_nat.S n)
                                        (matita_arithmetics_nat.plus
                                           n
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O)))))
                                  (matita_basics_logic.refl
                                     (pts.u pts.var)
                                     (matita_arithmetics_nat.le
                                        (matita_arithmetics_nat.S n)
                                        (matita_arithmetics_nat.plus
                                           n
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O)))))
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                                     (matita_arithmetics_nat.S n))
                                  (matita_basics_logic.rewrite_l
                                     matita_arithmetics_nat.nat
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O)
                                           n))
                                     (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                      matita_basics_logic.eq
                                        matita_arithmetics_nat.nat
                                        __
                                        (matita_arithmetics_nat.plus
                                           n
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O))))
                                     (matita_basics_logic.rewrite_l
                                        matita_arithmetics_nat.nat
                                        (matita_arithmetics_nat.plus
                                           n
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O))
                                        (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                         matita_basics_logic.eq
                                           matita_arithmetics_nat.nat
                                           (matita_arithmetics_nat.S __)
                                           (matita_arithmetics_nat.plus
                                              n
                                              (matita_arithmetics_nat.S
                                                 (matita_arithmetics_nat.S
                                                    matita_arithmetics_nat.O))))
                                        (matita_arithmetics_nat.plus_n_Sm
                                           n
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O))
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O)
                                           n)
                                        (matita_arithmetics_nat.commutative_plus
                                           n
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O)))
                                     (matita_arithmetics_nat.plus
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O)
                                        (matita_arithmetics_nat.S n))
                                     (matita_arithmetics_nat.plus_n_Sm
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O)
                                        n)))
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.S n)
                                  (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                               (matita_arithmetics_nat.commutative_plus
                                  (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                                  (matita_arithmetics_nat.S n)))))
                      (divides_to_dividesb_true n n posn (divides_n_n n))))))
          (smallest_factor n)
          (smallest_factor_to_min n lt1n)))
    (H:(pts.El
          pts.var
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)
             n)) =>
     matita_basics_logic.eq_ind
       matita_arithmetics_nat.nat
       (matita_arithmetics_nat.S matita_arithmetics_nat.O)
       (x_1:(pts.El pts.var matita_arithmetics_nat.nat) =>
        _x_2:(pts.El
                pts.var
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                   x_1)) =>
        divides (smallest_factor x_1) x_1)
       (divides_n_n (smallest_factor (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
       n
       H)
    (matita_arithmetics_nat.le_to_or_lt_eq (matita_arithmetics_nat.S matita_arithmetics_nat.O) n posn).

def le_smallest_factor_n :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  pts.El pts.var (matita_arithmetics_nat.le (smallest_factor n) n)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_arithmetics_nat.match_nat
    pts.var
    (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
     matita_arithmetics_nat.le (smallest_factor __) __)
    (matita_arithmetics_nat.le_n (smallest_factor matita_arithmetics_nat.O))
    (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
     divides_to_le
       (smallest_factor (matita_arithmetics_nat.S m))
       (matita_arithmetics_nat.S m)
       (matita_arithmetics_nat.lt_O_S m)
       (divides_smallest_factor_n (matita_arithmetics_nat.S m) (matita_arithmetics_nat.lt_O_S m)))
    n.

def lt_smallest_factor_to_not_divides :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  i:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)) ->
  __1:(pts.El pts.var (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) i)) ->
  __2:(pts.El pts.var (matita_arithmetics_nat.lt i (smallest_factor n))) ->
  pts.El pts.var (matita_basics_logic.Not (divides i n))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  i:(pts.El pts.var matita_arithmetics_nat.nat) =>
  ltn:(pts.El
         pts.var
         (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)) =>
  lti:(pts.El
         pts.var
         (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) i)) =>
  matita_basics_logic.eq_ind_r
    matita_arithmetics_nat.nat
    (matita_arithmetics_minimization.min
       n
       (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
       (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
        matita_arithmetics_nat.eqb (matita_arithmetics_div_and_mod.mod n m) matita_arithmetics_nat.O))
    (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
     __:(pts.El
           pts.var
           (matita_basics_logic.eq
              matita_arithmetics_nat.nat
              x
              (matita_arithmetics_minimization.min
                 n
                 (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
                  matita_arithmetics_nat.eqb
                    (matita_arithmetics_div_and_mod.mod n m)
                    matita_arithmetics_nat.O)))) =>
     pts.Prod
       pts.var
       pts.var
       (matita_arithmetics_nat.lt i x)
       (__1:(pts.El pts.var (matita_arithmetics_nat.lt i x)) =>
        matita_basics_logic.Not (divides i n)))
    (ltmin:(pts.El
              pts.var
              (matita_arithmetics_nat.lt
                 i
                 (matita_arithmetics_minimization.min
                    n
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
                     matita_arithmetics_nat.eqb
                       (matita_arithmetics_div_and_mod.mod n m)
                       matita_arithmetics_nat.O)))) =>
     matita_basics_logic.not_to_not
       (divides i n)
       (matita_basics_logic.eq
          matita_arithmetics_nat.nat
          (matita_arithmetics_div_and_mod.mod n i)
          matita_arithmetics_nat.O)
       (divin:(pts.El pts.var (divides i n)) =>
        divides_to_mod_O
          i
          n
          (matita_arithmetics_nat.lt_S_to_lt matita_arithmetics_nat.O i lti)
          divin)
       (matita_arithmetics_nat.eqb_false_to_not_eq
          (matita_arithmetics_div_and_mod.mod n i)
          matita_arithmetics_nat.O
          (matita_arithmetics_minimization.lt_min_to_false
             (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_arithmetics_nat.eqb
                (matita_arithmetics_div_and_mod.mod n m)
                matita_arithmetics_nat.O)
             n
             i
             (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             lti
             ltmin)))
    (smallest_factor n)
    (smallest_factor_to_min n ltn).

def prime_smallest_factor_n :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)) ->
  pts.El pts.var (prime (smallest_factor n))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  lt1n:(pts.El
          pts.var
          (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)) =>
  matita_basics_logic.conj
    (matita_arithmetics_nat.lt
       (matita_arithmetics_nat.S matita_arithmetics_nat.O)
       (smallest_factor n))
    (pts.Prod
       pts.var
       pts.var
       matita_arithmetics_nat.nat
       (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
        pts.Prod
          pts.var
          pts.var
          (divides m (smallest_factor n))
          (__:(pts.El pts.var (divides m (smallest_factor n))) =>
           pts.Prod
             pts.var
             pts.var
             (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) m)
             (__1:(pts.El
                     pts.var
                     (matita_arithmetics_nat.lt
                        (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                        m)) =>
              matita_basics_logic.eq matita_arithmetics_nat.nat m (smallest_factor n)))))
    (lt_SO_smallest_factor n lt1n)
    (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
     divmmin:(pts.El pts.var (divides m (smallest_factor n))) =>
     lt1m:(pts.El
             pts.var
             (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) m)) =>
     matita_arithmetics_nat.le_to_le_to_eq
       m
       (smallest_factor n)
       (divides_to_le
          m
          (smallest_factor n)
          (lt_O_smallest_factor
             n
             (matita_arithmetics_nat.lt_S_to_lt matita_arithmetics_nat.O n lt1n))
          divmmin)
       (matita_basics_logic.eq_ind_r
          matita_arithmetics_nat.nat
          (matita_arithmetics_minimization.min
             n
             (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             (m0:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_arithmetics_nat.eqb
                (matita_arithmetics_div_and_mod.mod n m0)
                matita_arithmetics_nat.O))
          (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
           __:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    matita_arithmetics_nat.nat
                    x
                    (matita_arithmetics_minimization.min
                       n
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       (m0:(pts.El pts.var matita_arithmetics_nat.nat) =>
                        matita_arithmetics_nat.eqb
                          (matita_arithmetics_div_and_mod.mod n m0)
                          matita_arithmetics_nat.O)))) =>
           matita_arithmetics_nat.le x m)
          (matita_arithmetics_minimization.true_to_le_min
             (m0:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_arithmetics_nat.eqb
                (matita_arithmetics_div_and_mod.mod n m0)
                matita_arithmetics_nat.O)
             n
             m
             (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             lt1m
             (matita_arithmetics_nat.eq_to_eqb_true
                (matita_arithmetics_div_and_mod.mod n m)
                matita_arithmetics_nat.O
                (divides_to_mod_O
                   m
                   n
                   (matita_arithmetics_nat.lt_S_to_lt matita_arithmetics_nat.O m lt1m)
                   (transitive_divides
                      m
                      (smallest_factor n)
                      n
                      divmmin
                      (divides_smallest_factor_n
                         n
                         (matita_arithmetics_nat.lt_S_to_lt matita_arithmetics_nat.O n lt1n))))))
          (smallest_factor n)
          (smallest_factor_to_min n lt1n))).

def prime_to_smallest_factor :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (prime n)) ->
  pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat (smallest_factor n) n)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  _clearme:(pts.El pts.var (prime n)) =>
  matita_basics_logic.match_And
    (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)
    (pts.Prod
       pts.var
       pts.var
       matita_arithmetics_nat.nat
       (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
        pts.Prod
          pts.var
          pts.var
          (divides m n)
          (__:(pts.El pts.var (divides m n)) =>
           pts.Prod
             pts.var
             pts.var
             (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) m)
             (__1:(pts.El
                     pts.var
                     (matita_arithmetics_nat.lt
                        (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                        m)) =>
              matita_basics_logic.eq matita_arithmetics_nat.nat m n))))
    pts.var
    (__:(pts.El
           pts.var
           (matita_basics_logic.And
              (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)
              (pts.Prod
                 pts.var
                 pts.var
                 matita_arithmetics_nat.nat
                 (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
                  pts.Prod
                    pts.var
                    pts.var
                    (divides m n)
                    (__:(pts.El pts.var (divides m n)) =>
                     pts.Prod
                       pts.var
                       pts.var
                       (matita_arithmetics_nat.lt
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                          m)
                       (__1:(pts.El
                               pts.var
                               (matita_arithmetics_nat.lt
                                  (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                                  m)) =>
                        matita_basics_logic.eq matita_arithmetics_nat.nat m n)))))) =>
     matita_basics_logic.eq matita_arithmetics_nat.nat (smallest_factor n) n)
    (lt1n:(pts.El
             pts.var
             (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)) =>
     primen:(m:(pts.El pts.var matita_arithmetics_nat.nat) ->
             __:(pts.El pts.var (divides m n)) ->
             __1:(pts.El
                    pts.var
                    (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) m)) ->
             pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat m n)) =>
     primen
       (smallest_factor n)
       (divides_smallest_factor_n
          n
          (matita_arithmetics_nat.lt_S_to_lt matita_arithmetics_nat.O n lt1n))
       (lt_SO_smallest_factor n lt1n))
    _clearme.

def smallest_factor_to_prime :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)) ->
  __1:(pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat (smallest_factor n) n)) ->
  pts.El pts.var (prime n)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  lt1n:(pts.El
          pts.var
          (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)) =>
  H:(pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat (smallest_factor n) n)) =>
  matita_basics_logic.eq_ind
    matita_arithmetics_nat.nat
    (smallest_factor n)
    (x_1:(pts.El pts.var matita_arithmetics_nat.nat) =>
     _x_2:(pts.El
             pts.var
             (matita_basics_logic.eq matita_arithmetics_nat.nat (smallest_factor n) x_1)) =>
     prime x_1)
    (prime_smallest_factor_n n lt1n)
    n
    H.

def primeb :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) -> pts.El pts.var matita_basics_bool.bool
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_basics_bool.andb
    (matita_arithmetics_nat.leb
       (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
       n)
    (matita_arithmetics_nat.eqb (smallest_factor n) n).

def example4 :
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_basics_bool.bool
       (primeb
          (matita_arithmetics_nat.S
             (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))))
       matita_basics_bool.true)
  :=
  matita_basics_logic.refl matita_basics_bool.bool matita_basics_bool.true.

def example5 :
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_basics_bool.bool
       (primeb
          (matita_arithmetics_nat.S
             (matita_arithmetics_nat.S
                (matita_arithmetics_nat.S
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O)))))))
       matita_basics_bool.false)
  :=
  matita_basics_logic.refl matita_basics_bool.bool matita_basics_bool.false.

def example6 :
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_basics_bool.bool
       (primeb
          (matita_arithmetics_nat.S
             (matita_arithmetics_nat.S
                (matita_arithmetics_nat.S
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O))))))))))))
       matita_basics_bool.true)
  :=
  matita_basics_logic.refl matita_basics_bool.bool matita_basics_bool.true.

def example7 :
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_basics_bool.bool
       (primeb
          (matita_arithmetics_nat.S
             (matita_arithmetics_nat.S
                (matita_arithmetics_nat.S
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.S
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.S
                                                 (matita_arithmetics_nat.S
                                                    (matita_arithmetics_nat.S
                                                       (matita_arithmetics_nat.S
                                                          (matita_arithmetics_nat.S
                                                             matita_arithmetics_nat.O))))))))))))))))))
       matita_basics_bool.true)
  :=
  matita_basics_logic.refl matita_basics_bool.bool matita_basics_bool.true.

def primeb_true_to_prime :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_basics_logic.eq matita_basics_bool.bool (primeb n) matita_basics_bool.true)) ->
  pts.El pts.var (prime n)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  primebn:(pts.El
             pts.var
             (matita_basics_logic.eq matita_basics_bool.bool (primeb n) matita_basics_bool.true)) =>
  smallest_factor_to_prime
    n
    (matita_arithmetics_nat.leb_true_to_le
       (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
       n
       (matita_basics_bool.andb_true_l
          (matita_arithmetics_nat.leb
             (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             n)
          (matita_arithmetics_nat.eqb (smallest_factor n) n)
          primebn))
    (matita_arithmetics_nat.eqb_true_to_eq
       (smallest_factor n)
       n
       (matita_basics_bool.andb_true_r
          (matita_arithmetics_nat.leb
             (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             n)
          (matita_arithmetics_nat.eqb (smallest_factor n) n)
          primebn)).

def primeb_false_to_not_prime :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El
        pts.var
        (matita_basics_logic.eq matita_basics_bool.bool (primeb n) matita_basics_bool.false)) ->
  pts.El pts.var (matita_basics_logic.Not (prime n))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  H:(pts.El
       pts.var
       (matita_basics_logic.eq matita_basics_bool.bool (primeb n) matita_basics_bool.false)) =>
  matita_arithmetics_nat.leb_elim
    (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    n
    (__:(pts.El pts.var matita_basics_bool.bool) =>
     pts.Prod
       pts.var
       pts.var
       (matita_basics_logic.eq
          matita_basics_bool.bool
          (matita_basics_bool.andb __ (matita_arithmetics_nat.eqb (smallest_factor n) n))
          matita_basics_bool.false)
       (__1:(pts.El
               pts.var
               (matita_basics_logic.eq
                  matita_basics_bool.bool
                  (matita_basics_bool.andb
                     __
                     (matita_arithmetics_nat.eqb (smallest_factor n) n))
                  matita_basics_bool.false)) =>
        matita_basics_logic.Not (prime n)))
    (__:(pts.El
           pts.var
           (matita_arithmetics_nat.le
              (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
              n)) =>
     H1:(pts.El
           pts.var
           (matita_basics_logic.eq
              matita_basics_bool.bool
              (matita_basics_bool.andb
                 matita_basics_bool.true
                 (matita_arithmetics_nat.eqb (smallest_factor n) n))
              matita_basics_bool.false)) =>
     matita_basics_logic.not_to_not
       (prime n)
       (matita_basics_logic.eq matita_arithmetics_nat.nat (smallest_factor n) n)
       (prime_to_smallest_factor n)
       (matita_arithmetics_nat.eqb_false_to_not_eq (smallest_factor n) n H1))
    (len1:(pts.El
             pts.var
             (matita_basics_logic.Not
                (matita_arithmetics_nat.le
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   n))) =>
     __:(pts.El
           pts.var
           (matita_basics_logic.eq
              matita_basics_bool.bool
              (matita_basics_bool.andb
                 matita_basics_bool.false
                 (matita_arithmetics_nat.eqb (smallest_factor n) n))
              matita_basics_bool.false)) =>
     matita_basics_logic.not_to_not
       (prime n)
       (matita_arithmetics_nat.le
          (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
          n)
       (_clearme:(pts.El pts.var (prime n)) =>
        matita_basics_logic.match_And
          (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)
          (pts.Prod
             pts.var
             pts.var
             matita_arithmetics_nat.nat
             (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
              pts.Prod
                pts.var
                pts.var
                (divides m n)
                (__1:(pts.El pts.var (divides m n)) =>
                 pts.Prod
                   pts.var
                   pts.var
                   (matita_arithmetics_nat.lt
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                      m)
                   (__2:(pts.El
                           pts.var
                           (matita_arithmetics_nat.lt
                              (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                              m)) =>
                    matita_basics_logic.eq matita_arithmetics_nat.nat m n))))
          pts.var
          (_0:(pts.El
                 pts.var
                 (matita_basics_logic.And
                    (matita_arithmetics_nat.lt
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                       n)
                    (pts.Prod
                       pts.var
                       pts.var
                       matita_arithmetics_nat.nat
                       (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
                        pts.Prod
                          pts.var
                          pts.var
                          (divides m n)
                          (__1:(pts.El pts.var (divides m n)) =>
                           pts.Prod
                             pts.var
                             pts.var
                             (matita_arithmetics_nat.lt
                                (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                                m)
                             (__2:(pts.El
                                     pts.var
                                     (matita_arithmetics_nat.lt
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O)
                                        m)) =>
                              matita_basics_logic.eq matita_arithmetics_nat.nat m n)))))) =>
           matita_arithmetics_nat.le
             (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             n)
          (auto:(pts.El
                   pts.var
                   (matita_arithmetics_nat.lt
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                      n)) =>
           auto':(m:(pts.El pts.var matita_arithmetics_nat.nat) ->
                  __1:(pts.El pts.var (divides m n)) ->
                  __2:(pts.El
                         pts.var
                         (matita_arithmetics_nat.lt
                            (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                            m)) ->
                  pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat m n)) =>
           auto)
          _clearme)
       len1)
    H.

def decidable_prime :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  pts.El pts.var (matita_basics_logic.decidable (prime n))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_basics_logic.match_Or
    (matita_basics_logic.eq matita_basics_bool.bool (primeb n) matita_basics_bool.true)
    (matita_basics_logic.eq matita_basics_bool.bool (primeb n) matita_basics_bool.false)
    pts.var
    (__:(pts.El
           pts.var
           (matita_basics_logic.Or
              (matita_basics_logic.eq matita_basics_bool.bool (primeb n) matita_basics_bool.true)
              (matita_basics_logic.eq
                 matita_basics_bool.bool
                 (primeb n)
                 matita_basics_bool.false))) =>
     matita_basics_logic.decidable (prime n))
    (H:(pts.El
          pts.var
          (matita_basics_logic.eq matita_basics_bool.bool (primeb n) matita_basics_bool.true)) =>
     matita_basics_logic.or_introl
       (prime n)
       (matita_basics_logic.Not (prime n))
       (primeb_true_to_prime
          n
          (matita_basics_logic.rewrite_r
             matita_basics_bool.bool
             matita_basics_bool.true
             (__:(pts.El pts.var matita_basics_bool.bool) =>
              matita_basics_logic.eq matita_basics_bool.bool __ matita_basics_bool.true)
             (matita_basics_logic.refl matita_basics_bool.bool matita_basics_bool.true)
             (primeb n)
             H)))
    (H:(pts.El
          pts.var
          (matita_basics_logic.eq matita_basics_bool.bool (primeb n) matita_basics_bool.false)) =>
     matita_basics_logic.or_intror
       (prime n)
       (matita_basics_logic.Not (prime n))
       (primeb_false_to_not_prime
          n
          (matita_basics_logic.rewrite_r
             matita_basics_bool.bool
             matita_basics_bool.false
             (__:(pts.El pts.var matita_basics_bool.bool) =>
              matita_basics_logic.eq matita_basics_bool.bool __ matita_basics_bool.false)
             (matita_basics_logic.refl matita_basics_bool.bool matita_basics_bool.false)
             (primeb n)
             H)))
    (matita_basics_bool.true_or_false (primeb n)).

def prime_to_primeb_true :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (prime n)) ->
  pts.El pts.var (matita_basics_logic.eq matita_basics_bool.bool (primeb n) matita_basics_bool.true)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  primen:(pts.El pts.var (prime n)) =>
  matita_basics_logic.match_Or
    (matita_basics_logic.eq matita_basics_bool.bool (primeb n) matita_basics_bool.true)
    (matita_basics_logic.eq matita_basics_bool.bool (primeb n) matita_basics_bool.false)
    pts.var
    (__:(pts.El
           pts.var
           (matita_basics_logic.Or
              (matita_basics_logic.eq matita_basics_bool.bool (primeb n) matita_basics_bool.true)
              (matita_basics_logic.eq
                 matita_basics_bool.bool
                 (primeb n)
                 matita_basics_bool.false))) =>
     matita_basics_logic.eq matita_basics_bool.bool (primeb n) matita_basics_bool.true)
    (auto:(pts.El
             pts.var
             (matita_basics_logic.eq matita_basics_bool.bool (primeb n) matita_basics_bool.true)) =>
     matita_basics_logic.rewrite_r
       matita_basics_bool.bool
       matita_basics_bool.true
       (__:(pts.El pts.var matita_basics_bool.bool) =>
        matita_basics_logic.eq matita_basics_bool.bool __ matita_basics_bool.true)
       (matita_basics_logic.refl matita_basics_bool.bool matita_basics_bool.true)
       (primeb n)
       auto)
    (H:(pts.El
          pts.var
          (matita_basics_logic.eq matita_basics_bool.bool (primeb n) matita_basics_bool.false)) =>
     matita_basics_logic.False_ind
       (_x_66:(pts.El pts.var matita_basics_logic.False) =>
        matita_basics_logic.eq matita_basics_bool.bool (primeb n) matita_basics_bool.true)
       (matita_basics_logic.absurd
          (prime n)
          primen
          (primeb_false_to_not_prime
             n
             (matita_basics_logic.rewrite_r
                matita_basics_bool.bool
                matita_basics_bool.false
                (__:(pts.El pts.var matita_basics_bool.bool) =>
                 matita_basics_logic.eq matita_basics_bool.bool __ matita_basics_bool.false)
                (matita_basics_logic.refl matita_basics_bool.bool matita_basics_bool.false)
                (primeb n)
                H))))
    (matita_basics_bool.true_or_false (primeb n)).

def not_prime_to_primeb_false :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_basics_logic.Not (prime n))) ->
  pts.El pts.var (matita_basics_logic.eq matita_basics_bool.bool (primeb n) matita_basics_bool.false)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  np:(pts.El pts.var (matita_basics_logic.Not (prime n))) =>
  matita_basics_logic.match_Or
    (matita_basics_logic.eq matita_basics_bool.bool (primeb n) matita_basics_bool.true)
    (matita_basics_logic.eq matita_basics_bool.bool (primeb n) matita_basics_bool.false)
    pts.var
    (__:(pts.El
           pts.var
           (matita_basics_logic.Or
              (matita_basics_logic.eq matita_basics_bool.bool (primeb n) matita_basics_bool.true)
              (matita_basics_logic.eq
                 matita_basics_bool.bool
                 (primeb n)
                 matita_basics_bool.false))) =>
     matita_basics_logic.eq matita_basics_bool.bool (primeb n) matita_basics_bool.false)
    (p:(pts.El
          pts.var
          (matita_basics_logic.eq matita_basics_bool.bool (primeb n) matita_basics_bool.true)) =>
     matita_basics_logic.False_ind
       (_x_66:(pts.El pts.var matita_basics_logic.False) =>
        matita_basics_logic.eq matita_basics_bool.bool (primeb n) matita_basics_bool.false)
       (matita_basics_logic.absurd
          (prime n)
          (primeb_true_to_prime
             n
             (matita_basics_logic.rewrite_r
                matita_basics_bool.bool
                matita_basics_bool.true
                (__:(pts.El pts.var matita_basics_bool.bool) =>
                 matita_basics_logic.eq matita_basics_bool.bool __ matita_basics_bool.true)
                (matita_basics_logic.refl matita_basics_bool.bool matita_basics_bool.true)
                (primeb n)
                p))
          np))
    (auto:(pts.El
             pts.var
             (matita_basics_logic.eq matita_basics_bool.bool (primeb n) matita_basics_bool.false)) =>
     matita_basics_logic.rewrite_r
       matita_basics_bool.bool
       matita_basics_bool.false
       (__:(pts.El pts.var matita_basics_bool.bool) =>
        matita_basics_logic.eq matita_basics_bool.bool __ matita_basics_bool.false)
       (matita_basics_logic.refl matita_basics_bool.bool matita_basics_bool.false)
       (primeb n)
       auto)
    (matita_basics_bool.true_or_false (primeb n)).

def divides_fact :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  i:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O i)) ->
  __1:(pts.El pts.var (matita_arithmetics_nat.le i n)) ->
  pts.El pts.var (divides i (matita_arithmetics_factorial.fact n))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  i:(pts.El pts.var matita_arithmetics_nat.nat) =>
  ltOi:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O i)) =>
  matita_arithmetics_nat.nat_ind
    (_x_365:(pts.El pts.var matita_arithmetics_nat.nat) =>
     pts.Prod
       pts.var
       pts.var
       (matita_arithmetics_nat.le i _x_365)
       (__:(pts.El pts.var (matita_arithmetics_nat.le i _x_365)) =>
        divides i (matita_arithmetics_factorial.fact _x_365)))
    (leiO:(pts.El pts.var (matita_arithmetics_nat.le i matita_arithmetics_nat.O)) =>
     matita_basics_logic.False_ind
       (_x_66:(pts.El pts.var matita_basics_logic.False) =>
        divides i (matita_arithmetics_factorial.fact matita_arithmetics_nat.O))
       (matita_basics_logic.absurd
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O i)
          ltOi
          (matita_arithmetics_nat.le_to_not_lt i matita_arithmetics_nat.O leiO)))
    (n0:(pts.El pts.var matita_arithmetics_nat.nat) =>
     Hind:(__:(pts.El pts.var (matita_arithmetics_nat.le i n0)) ->
           pts.El pts.var (divides i (matita_arithmetics_factorial.fact n0))) =>
     lei:(pts.El pts.var (matita_arithmetics_nat.le i (matita_arithmetics_nat.S n0))) =>
     matita_basics_logic.match_Or
       (matita_arithmetics_nat.lt i (matita_arithmetics_nat.S n0))
       (matita_basics_logic.eq matita_arithmetics_nat.nat i (matita_arithmetics_nat.S n0))
       pts.var
       (__:(pts.El
              pts.var
              (matita_basics_logic.Or
                 (matita_arithmetics_nat.lt i (matita_arithmetics_nat.S n0))
                 (matita_basics_logic.eq
                    matita_arithmetics_nat.nat
                    i
                    (matita_arithmetics_nat.S n0)))) =>
        divides
          i
          (matita_arithmetics_nat.times
             (matita_arithmetics_factorial.fact n0)
             (matita_arithmetics_nat.S n0)))
       (ltiS:(pts.El pts.var (matita_arithmetics_nat.lt i (matita_arithmetics_nat.S n0))) =>
        transitive_divides
          i
          (matita_arithmetics_factorial.fact n0)
          (matita_arithmetics_nat.times
             (matita_arithmetics_factorial.fact n0)
             (matita_arithmetics_nat.S n0))
          (Hind
             (matita_basics_logic.eq_coerc
                (matita_arithmetics_nat.le
                   (matita_arithmetics_nat.pred (matita_arithmetics_nat.S i))
                   (matita_arithmetics_nat.pred (matita_arithmetics_nat.S n0)))
                (matita_arithmetics_nat.le i n0)
                (matita_arithmetics_nat.monotonic_pred
                   (matita_arithmetics_nat.S i)
                   (matita_arithmetics_nat.S n0)
                   ltiS)
                (matita_basics_logic.rewrite_l
                   matita_arithmetics_nat.nat
                   i
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      (pts.u pts.var)
                      (matita_arithmetics_nat.le
                         __
                         (matita_arithmetics_nat.pred (matita_arithmetics_nat.S n0)))
                      (matita_arithmetics_nat.le i n0))
                   (matita_basics_logic.rewrite_l
                      matita_arithmetics_nat.nat
                      n0
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         (pts.u pts.var)
                         (matita_arithmetics_nat.le i __)
                         (matita_arithmetics_nat.le i n0))
                      (matita_basics_logic.refl
                         (pts.u pts.var)
                         (matita_arithmetics_nat.le i n0))
                      (matita_arithmetics_nat.pred (matita_arithmetics_nat.S n0))
                      (matita_arithmetics_nat.pred_Sn n0))
                   (matita_arithmetics_nat.pred (matita_arithmetics_nat.S i))
                   (matita_arithmetics_nat.pred_Sn i))))
          (quotient
             (matita_arithmetics_factorial.fact n0)
             (matita_arithmetics_nat.times
                (matita_arithmetics_factorial.fact n0)
                (matita_arithmetics_nat.S n0))
             (matita_arithmetics_nat.S n0)
             (matita_basics_logic.rewrite_l
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_factorial.fact n0)
                   (matita_arithmetics_nat.times (matita_arithmetics_factorial.fact n0) n0))
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   __
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_factorial.fact n0)
                      (matita_arithmetics_nat.S n0)))
                (matita_basics_logic.rewrite_r
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.times n0 (matita_arithmetics_factorial.fact n0))
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.plus (matita_arithmetics_factorial.fact n0) __)
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_factorial.fact n0)
                         (matita_arithmetics_nat.S n0)))
                   (matita_basics_logic.rewrite_r
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_nat.S n0)
                         (matita_arithmetics_factorial.fact n0))
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_factorial.fact n0)
                            (matita_arithmetics_nat.times
                               n0
                               (matita_arithmetics_factorial.fact n0)))
                         __)
                      (matita_basics_logic.rewrite_r
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.S n0)
                            (matita_arithmetics_factorial.fact n0))
                         (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            __
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_nat.S n0)
                               (matita_arithmetics_factorial.fact n0)))
                         (matita_basics_logic.refl
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_nat.S n0)
                               (matita_arithmetics_factorial.fact n0)))
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_factorial.fact n0)
                            (matita_arithmetics_nat.times
                               n0
                               (matita_arithmetics_factorial.fact n0)))
                         (matita_arithmetics_nat.times_Sn_m
                            n0
                            (matita_arithmetics_factorial.fact n0)))
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_factorial.fact n0)
                         (matita_arithmetics_nat.S n0))
                      (matita_arithmetics_nat.commutative_times
                         (matita_arithmetics_factorial.fact n0)
                         (matita_arithmetics_nat.S n0)))
                   (matita_arithmetics_nat.times (matita_arithmetics_factorial.fact n0) n0)
                   (matita_arithmetics_nat.commutative_times
                      (matita_arithmetics_factorial.fact n0)
                      n0))
                (matita_arithmetics_nat.times
                   (matita_arithmetics_factorial.fact n0)
                   (matita_arithmetics_nat.S n0))
                (matita_arithmetics_nat.times_n_Sm (matita_arithmetics_factorial.fact n0) n0))))
       (eqi:(pts.El
               pts.var
               (matita_basics_logic.eq
                  matita_arithmetics_nat.nat
                  i
                  (matita_arithmetics_nat.S n0))) =>
        matita_basics_logic.eq_ind_r
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.S n0)
          (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
           __:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    matita_arithmetics_nat.nat
                    x
                    (matita_arithmetics_nat.S n0))) =>
           divides
             x
             (matita_arithmetics_nat.times
                (matita_arithmetics_factorial.fact n0)
                (matita_arithmetics_nat.S n0)))
          (matita_basics_logic.eq_coerc
             (divides
                (matita_arithmetics_nat.times
                   i
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                (matita_arithmetics_nat.times i (matita_arithmetics_factorial.fact n0)))
             (divides
                (matita_arithmetics_nat.S n0)
                (matita_arithmetics_nat.times
                   (matita_arithmetics_factorial.fact n0)
                   (matita_arithmetics_nat.S n0)))
             (divides_times
                i
                (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                i
                (matita_arithmetics_factorial.fact n0)
                (divides_n_n i)
                (divides_SO_n (matita_arithmetics_factorial.fact n0)))
             (matita_basics_logic.rewrite_l
                matita_arithmetics_nat.nat
                i
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   (pts.u pts.var)
                   (divides
                      (matita_arithmetics_nat.times
                         i
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                      (matita_arithmetics_nat.times i (matita_arithmetics_factorial.fact n0)))
                   (divides
                      __
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_factorial.fact n0)
                         (matita_arithmetics_nat.S n0))))
                (matita_basics_logic.rewrite_l
                   matita_arithmetics_nat.nat
                   i
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      (pts.u pts.var)
                      (divides
                         (matita_arithmetics_nat.times
                            i
                            (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                         (matita_arithmetics_nat.times
                            i
                            (matita_arithmetics_factorial.fact n0)))
                      (divides
                         i
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_factorial.fact n0)
                            __)))
                   (matita_basics_logic.rewrite_r
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.times i (matita_arithmetics_factorial.fact n0))
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         (pts.u pts.var)
                         (divides
                            (matita_arithmetics_nat.times
                               i
                               (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                            (matita_arithmetics_nat.times
                               i
                               (matita_arithmetics_factorial.fact n0)))
                         (divides i __))
                      (matita_basics_logic.rewrite_l
                         matita_arithmetics_nat.nat
                         i
                         (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq
                            (pts.u pts.var)
                            (divides
                               __
                               (matita_arithmetics_nat.times
                                  i
                                  (matita_arithmetics_factorial.fact n0)))
                            (divides
                               i
                               (matita_arithmetics_nat.times
                                  i
                                  (matita_arithmetics_factorial.fact n0))))
                         (matita_basics_logic.refl
                            (pts.u pts.var)
                            (divides
                               i
                               (matita_arithmetics_nat.times
                                  i
                                  (matita_arithmetics_factorial.fact n0))))
                         (matita_arithmetics_nat.times
                            i
                            (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                         (matita_arithmetics_nat.times_n_1 i))
                      (matita_arithmetics_nat.times (matita_arithmetics_factorial.fact n0) i)
                      (matita_arithmetics_nat.commutative_times
                         (matita_arithmetics_factorial.fact n0)
                         i))
                   (matita_arithmetics_nat.S n0)
                   eqi)
                (matita_arithmetics_nat.S n0)
                eqi))
          i
          eqi)
       (matita_arithmetics_nat.le_to_or_lt_eq i (matita_arithmetics_nat.S n0) lei))
    n.

def mod_S_fact :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  i:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) i)) ->
  __1:(pts.El pts.var (matita_arithmetics_nat.le i n)) ->
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (matita_arithmetics_div_and_mod.mod
          (matita_arithmetics_nat.S (matita_arithmetics_factorial.fact n))
          i)
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  i:(pts.El pts.var matita_arithmetics_nat.nat) =>
  lt1i:(pts.El
          pts.var
          (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) i)) =>
  lein:(pts.El pts.var (matita_arithmetics_nat.le i n)) =>
  matita_basics_logic.eq_ind
    matita_arithmetics_nat.nat
    (matita_arithmetics_div_and_mod.mod (matita_arithmetics_factorial.fact n) i)
    (x_1:(pts.El pts.var matita_arithmetics_nat.nat) =>
     _x_2:(pts.El
             pts.var
             (matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (matita_arithmetics_div_and_mod.mod (matita_arithmetics_factorial.fact n) i)
                x_1)) =>
     matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (matita_arithmetics_div_and_mod.mod
          (matita_arithmetics_nat.S (matita_arithmetics_factorial.fact n))
          i)
       (matita_arithmetics_nat.S x_1))
    (matita_arithmetics_div_and_mod.mod_S
       (matita_arithmetics_factorial.fact n)
       i
       (matita_arithmetics_nat.lt_S_to_lt matita_arithmetics_nat.O i lt1i)
       (matita_basics_logic.eq_coerc
          (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) i)
          (matita_arithmetics_nat.lt
             (matita_arithmetics_nat.S
                (matita_arithmetics_div_and_mod.mod (matita_arithmetics_factorial.fact n) i))
             i)
          lt1i
          (matita_basics_logic.rewrite_r
             matita_arithmetics_nat.nat
             matita_arithmetics_nat.O
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq
                (pts.u pts.var)
                (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) i)
                (matita_arithmetics_nat.lt (matita_arithmetics_nat.S __) i))
             (matita_basics_logic.refl
                (pts.u pts.var)
                (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) i))
             (matita_arithmetics_div_and_mod.mod (matita_arithmetics_factorial.fact n) i)
             (divides_to_mod_O
                i
                (matita_arithmetics_factorial.fact n)
                (matita_arithmetics_nat.lt_S_to_lt matita_arithmetics_nat.O i lt1i)
                (divides_fact
                   n
                   i
                   (matita_arithmetics_nat.lt_S_to_lt matita_arithmetics_nat.O i lt1i)
                   lein)))))
    matita_arithmetics_nat.O
    (divides_to_mod_O
       i
       (matita_arithmetics_factorial.fact n)
       (matita_arithmetics_nat.lt_S_to_lt matita_arithmetics_nat.O i lt1i)
       (divides_fact n i (matita_arithmetics_nat.lt_S_to_lt matita_arithmetics_nat.O i lt1i) lein)).

def not_divides_S_fact :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  i:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) i)) ->
  __1:(pts.El pts.var (matita_arithmetics_nat.le i n)) ->
  pts.El
    pts.var
    (matita_basics_logic.Not
       (divides i (matita_arithmetics_nat.S (matita_arithmetics_factorial.fact n))))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  i:(pts.El pts.var matita_arithmetics_nat.nat) =>
  lt1i:(pts.El
          pts.var
          (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) i)) =>
  lein:(pts.El pts.var (matita_arithmetics_nat.le i n)) =>
  matita_basics_logic.not_to_not
    (divides i (matita_arithmetics_nat.S (matita_arithmetics_factorial.fact n)))
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (matita_arithmetics_div_and_mod.mod
          (matita_arithmetics_nat.S (matita_arithmetics_factorial.fact n))
          i)
       matita_arithmetics_nat.O)
    (divides_to_mod_O
       i
       (matita_arithmetics_nat.S (matita_arithmetics_factorial.fact n))
       (matita_arithmetics_nat.lt_S_to_lt matita_arithmetics_nat.O i lt1i))
    (matita_basics_logic.eq_ind_r
       matita_arithmetics_nat.nat
       (matita_arithmetics_nat.S matita_arithmetics_nat.O)
       (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
        __:(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 x
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
        matita_basics_logic.Not
          (matita_basics_logic.eq matita_arithmetics_nat.nat x matita_arithmetics_nat.O))
       (matita_arithmetics_nat.eqb_false_to_not_eq
          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
          matita_arithmetics_nat.O
          (matita_basics_logic.refl
             matita_basics_bool.bool
             (matita_arithmetics_nat.eqb
                (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                matita_arithmetics_nat.O)))
       (matita_arithmetics_div_and_mod.mod
          (matita_arithmetics_nat.S (matita_arithmetics_factorial.fact n))
          i)
       (mod_S_fact n i lt1i lein)).

def smallest_factor_fact :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  pts.El
    pts.var
    (matita_arithmetics_nat.lt
       n
       (smallest_factor (matita_arithmetics_nat.S (matita_arithmetics_factorial.fact n))))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_arithmetics_nat.not_le_to_lt
    (smallest_factor (matita_arithmetics_nat.S (matita_arithmetics_factorial.fact n)))
    n
    (matita_basics_logic.not_to_not
       (matita_arithmetics_nat.le
          (smallest_factor (matita_arithmetics_nat.S (matita_arithmetics_factorial.fact n)))
          n)
       (matita_basics_logic.Not
          (divides
             (smallest_factor (matita_arithmetics_nat.S (matita_arithmetics_factorial.fact n)))
             (matita_arithmetics_nat.S (matita_arithmetics_factorial.fact n))))
       (not_divides_S_fact
          n
          (smallest_factor (matita_arithmetics_nat.S (matita_arithmetics_factorial.fact n)))
          (lt_SO_smallest_factor
             (matita_arithmetics_nat.S (matita_arithmetics_factorial.fact n))
             (matita_arithmetics_nat.le_S_S
                (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                (matita_arithmetics_factorial.fact n)
                (matita_arithmetics_factorial.le_1_fact n))))
       (matita_basics_logic.nmk
          (matita_basics_logic.Not
             (divides
                (smallest_factor (matita_arithmetics_nat.S (matita_arithmetics_factorial.fact n)))
                (matita_arithmetics_nat.S (matita_arithmetics_factorial.fact n))))
          (_clearme:(pts.El
                       pts.var
                       (matita_basics_logic.Not
                          (divides
                             (smallest_factor
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_factorial.fact n)))
                             (matita_arithmetics_nat.S (matita_arithmetics_factorial.fact n))))) =>
           matita_basics_logic.match_Not
             (divides
                (smallest_factor (matita_arithmetics_nat.S (matita_arithmetics_factorial.fact n)))
                (matita_arithmetics_nat.S (matita_arithmetics_factorial.fact n)))
             pts.var
             (__:(pts.El
                    pts.var
                    (matita_basics_logic.Not
                       (divides
                          (smallest_factor
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_factorial.fact n)))
                          (matita_arithmetics_nat.S (matita_arithmetics_factorial.fact n))))) =>
              matita_basics_logic.False)
             (H:(__:(pts.El
                       pts.var
                       (divides
                          (smallest_factor
                             (matita_arithmetics_nat.S (matita_arithmetics_factorial.fact n)))
                          (matita_arithmetics_nat.S (matita_arithmetics_factorial.fact n)))) ->
                 pts.El pts.var matita_basics_logic.False) =>
              H
                (divides_smallest_factor_n
                   (matita_arithmetics_nat.S (matita_arithmetics_factorial.fact n))
                   (matita_arithmetics_nat.le_S_S
                      matita_arithmetics_nat.O
                      (matita_arithmetics_factorial.fact n)
                      (matita_arithmetics_nat.le_O_n (matita_arithmetics_factorial.fact n)))))
             _clearme))).

def ex_prime :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.le (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)) ->
  pts.El
    pts.var
    (matita_basics_logic.ex
       matita_arithmetics_nat.nat
       (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
        matita_basics_logic.And
          (matita_basics_logic.And
             (matita_arithmetics_nat.lt n m)
             (matita_arithmetics_nat.le
                m
                (matita_arithmetics_nat.S (matita_arithmetics_factorial.fact n))))
          (prime m)))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  lein:(pts.El
          pts.var
          (matita_arithmetics_nat.le (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)) =>
  matita_arithmetics_nat.match_le
    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
    pts.var
    (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
     _0:(pts.El
           pts.var
           (matita_arithmetics_nat.le (matita_arithmetics_nat.S matita_arithmetics_nat.O) __)) =>
     matita_basics_logic.ex
       matita_arithmetics_nat.nat
       (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
        matita_basics_logic.And
          (matita_basics_logic.And
             (matita_arithmetics_nat.lt __ m)
             (matita_arithmetics_nat.le
                m
                (matita_arithmetics_nat.S (matita_arithmetics_factorial.fact __))))
          (prime m)))
    (matita_basics_logic.ex_intro
       matita_arithmetics_nat.nat
       (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
        matita_basics_logic.And
          (matita_basics_logic.And
             (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) m)
             (matita_arithmetics_nat.le
                m
                (matita_arithmetics_nat.S
                   (matita_arithmetics_factorial.fact
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O)))))
          (prime m))
       (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
       (matita_basics_logic.conj
          (matita_basics_logic.And
             (matita_arithmetics_nat.lt
                (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
             (matita_arithmetics_nat.le
                (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                (matita_arithmetics_nat.S
                   (matita_arithmetics_factorial.fact
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O)))))
          (prime (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
          (matita_basics_logic.conj
             (matita_arithmetics_nat.lt
                (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
             (matita_arithmetics_nat.le
                (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                (matita_arithmetics_nat.S
                   (matita_arithmetics_factorial.fact
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))))
             (smallest_factor_fact (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             (matita_arithmetics_nat.le_n
                (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))))
          (primeb_true_to_prime
             (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             (matita_basics_logic.refl
                matita_basics_bool.bool
                (primeb
                   (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O)))))))
    (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
     leim:(pts.El
             pts.var
             (matita_arithmetics_nat.le (matita_arithmetics_nat.S matita_arithmetics_nat.O) m)) =>
     matita_basics_logic.ex_intro
       matita_arithmetics_nat.nat
       (m0:(pts.El pts.var matita_arithmetics_nat.nat) =>
        matita_basics_logic.And
          (matita_basics_logic.And
             (matita_arithmetics_nat.lt (matita_arithmetics_nat.S m) m0)
             (matita_arithmetics_nat.le
                m0
                (matita_arithmetics_nat.S
                   (matita_arithmetics_factorial.fact (matita_arithmetics_nat.S m)))))
          (prime m0))
       (smallest_factor
          (matita_arithmetics_nat.S
             (matita_arithmetics_factorial.fact (matita_arithmetics_nat.S m))))
       (matita_basics_logic.conj
          (matita_basics_logic.And
             (matita_arithmetics_nat.lt
                (matita_arithmetics_nat.S m)
                (smallest_factor
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_factorial.fact (matita_arithmetics_nat.S m)))))
             (matita_arithmetics_nat.le
                (smallest_factor
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_factorial.fact (matita_arithmetics_nat.S m))))
                (matita_arithmetics_nat.S
                   (matita_arithmetics_factorial.fact (matita_arithmetics_nat.S m)))))
          (prime
             (smallest_factor
                (matita_arithmetics_nat.S
                   (matita_arithmetics_factorial.fact (matita_arithmetics_nat.S m)))))
          (matita_basics_logic.conj
             (matita_arithmetics_nat.lt
                (matita_arithmetics_nat.S m)
                (smallest_factor
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_factorial.fact (matita_arithmetics_nat.S m)))))
             (matita_arithmetics_nat.le
                (smallest_factor
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_factorial.fact (matita_arithmetics_nat.S m))))
                (matita_arithmetics_nat.S
                   (matita_arithmetics_factorial.fact (matita_arithmetics_nat.S m))))
             (smallest_factor_fact (matita_arithmetics_nat.S m))
             (le_smallest_factor_n
                (matita_arithmetics_nat.S
                   (matita_arithmetics_factorial.fact (matita_arithmetics_nat.S m)))))
          (prime_smallest_factor_n
             (matita_arithmetics_nat.S
                (matita_arithmetics_factorial.fact (matita_arithmetics_nat.S m)))
             (matita_arithmetics_nat.le_S_S
                (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                (matita_arithmetics_factorial.fact (matita_arithmetics_nat.S m))
                (matita_arithmetics_factorial.le_1_fact (matita_arithmetics_nat.S m))))))
    n
    lein.

def nth_prime :
  __:(pts.El pts.var matita_arithmetics_nat.nat) -> pts.El pts.var matita_arithmetics_nat.nat.

def nth_prime_body :
  __:(pts.El pts.var matita_arithmetics_nat.nat) -> pts.El pts.var matita_arithmetics_nat.nat.

def let_previous_prime :
  __:(pts.El pts.var matita_arithmetics_nat.nat) ->
  p:(pts.El pts.var matita_arithmetics_nat.nat) -> pts.El pts.var matita_arithmetics_nat.nat
  :=
  __:(pts.El pts.var matita_arithmetics_nat.nat) =>
  p:(pts.El pts.var matita_arithmetics_nat.nat) => nth_prime p.

def let_upper_bound :
  __:(pts.El pts.var matita_arithmetics_nat.nat) ->
  p:(pts.El pts.var matita_arithmetics_nat.nat) -> pts.El pts.var matita_arithmetics_nat.nat
  :=
  __:(pts.El pts.var matita_arithmetics_nat.nat) =>
  p:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_arithmetics_nat.S (matita_arithmetics_factorial.fact (let_previous_prime __ p)).

[__]
  nth_prime __
  -->
  matita_arithmetics_nat.filter_nat
    pts.var
    (__:(pts.El pts.var matita_arithmetics_nat.nat) => matita_arithmetics_nat.nat)
    nth_prime_body
    __.

[__]
  nth_prime_body __
  -->
  matita_arithmetics_nat.match_nat
    pts.var
    (__1:(pts.El pts.var matita_arithmetics_nat.nat) => matita_arithmetics_nat.nat)
    (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (p:(pts.El pts.var matita_arithmetics_nat.nat) =>
     matita_arithmetics_minimization.min
       (let_upper_bound __ p)
       (matita_arithmetics_nat.S (let_previous_prime __ p))
       primeb)
    __.

def let_previous_prime1 :
  n:(pts.El pts.var matita_arithmetics_nat.nat) -> pts.El pts.var matita_arithmetics_nat.nat
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) => nth_prime n.

def let_upper_bound1 :
  n:(pts.El pts.var matita_arithmetics_nat.nat) -> pts.El pts.var matita_arithmetics_nat.nat
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_arithmetics_nat.S (matita_arithmetics_factorial.fact (let_previous_prime1 n)).

def nth_primeS :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (nth_prime (matita_arithmetics_nat.S n))
       (matita_arithmetics_minimization.min
          (let_upper_bound1 n)
          (matita_arithmetics_nat.S (let_previous_prime1 n))
          primeb))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_basics_logic.refl matita_arithmetics_nat.nat (nth_prime (matita_arithmetics_nat.S n)).

def example11 :
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (nth_prime (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
       (matita_arithmetics_nat.S
          (matita_arithmetics_nat.S
             (matita_arithmetics_nat.S
                (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))))))
  :=
  matita_basics_logic.refl
    matita_arithmetics_nat.nat
    (matita_arithmetics_nat.S
       (matita_arithmetics_nat.S
          (matita_arithmetics_nat.S
             (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))))).

def example12 :
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (nth_prime
          (matita_arithmetics_nat.S
             (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))))
       (matita_arithmetics_nat.S
          (matita_arithmetics_nat.S
             (matita_arithmetics_nat.S
                (matita_arithmetics_nat.S
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O))))))))
  :=
  matita_basics_logic.refl
    matita_arithmetics_nat.nat
    (matita_arithmetics_nat.S
       (matita_arithmetics_nat.S
          (matita_arithmetics_nat.S
             (matita_arithmetics_nat.S
                (matita_arithmetics_nat.S
                   (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O))))))).

def example13 :
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (nth_prime
          (matita_arithmetics_nat.S
             (matita_arithmetics_nat.S
                (matita_arithmetics_nat.S (matita_arithmetics_nat.S matita_arithmetics_nat.O)))))
       (matita_arithmetics_nat.S
          (matita_arithmetics_nat.S
             (matita_arithmetics_nat.S
                (matita_arithmetics_nat.S
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S matita_arithmetics_nat.O))))))))))))
  :=
  matita_basics_logic.refl
    matita_arithmetics_nat.nat
    (matita_arithmetics_nat.S
       (matita_arithmetics_nat.S
          (matita_arithmetics_nat.S
             (matita_arithmetics_nat.S
                (matita_arithmetics_nat.S
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S matita_arithmetics_nat.O))))))))))).

def let_previous_prime2 :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) -> pts.El pts.var matita_arithmetics_nat.nat
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) => nth_prime m.

def let_upper_bound2 :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) -> pts.El pts.var matita_arithmetics_nat.nat
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_arithmetics_nat.S (matita_arithmetics_factorial.fact (let_previous_prime2 n m)).

def let_previous_prime3 :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x:(pts.El pts.var matita_arithmetics_nat.nat) -> pts.El pts.var matita_arithmetics_nat.nat
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x:(pts.El pts.var matita_arithmetics_nat.nat) => nth_prime m.

def let_upper_bound3 :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x:(pts.El pts.var matita_arithmetics_nat.nat) -> pts.El pts.var matita_arithmetics_nat.nat
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_arithmetics_nat.S (matita_arithmetics_factorial.fact (let_previous_prime3 n m x)).

def let_previous_prime4 :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) -> pts.El pts.var matita_arithmetics_nat.nat
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) => nth_prime m.

def let_upper_bound4 :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) -> pts.El pts.var matita_arithmetics_nat.nat
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_arithmetics_nat.S (matita_arithmetics_factorial.fact (let_previous_prime4 n m)).

def prime_nth_prime :
  n:(pts.El pts.var matita_arithmetics_nat.nat) -> pts.El pts.var (prime (nth_prime n))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_arithmetics_nat.match_nat
    pts.var
    (__:(pts.El pts.var matita_arithmetics_nat.nat) => prime (nth_prime __))
    (primeb_true_to_prime
       (nth_prime matita_arithmetics_nat.O)
       (matita_basics_logic.refl
          matita_basics_bool.bool
          (primeb (nth_prime matita_arithmetics_nat.O))))
    (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
     matita_basics_logic.eq_ind_r
       matita_arithmetics_nat.nat
       (matita_arithmetics_minimization.min
          (let_upper_bound2 n m)
          (matita_arithmetics_nat.S (let_previous_prime2 n m))
          primeb)
       (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
        __:(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 x
                 (matita_arithmetics_minimization.min
                    (let_upper_bound3 n m x)
                    (matita_arithmetics_nat.S (let_previous_prime3 n m x))
                    primeb))) =>
        prime x)
       (primeb_true_to_prime
          (matita_arithmetics_minimization.min
             (let_upper_bound4 n m)
             (matita_arithmetics_nat.S (let_previous_prime4 n m))
             primeb)
          (matita_arithmetics_minimization.f_min_true
             primeb
             (matita_arithmetics_nat.S (matita_arithmetics_factorial.fact (nth_prime m)))
             (matita_arithmetics_nat.S (nth_prime m))
             (matita_basics_logic.ex_intro
                matita_arithmetics_nat.nat
                (i:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.And
                   (matita_basics_logic.And
                      (matita_arithmetics_nat.le (matita_arithmetics_nat.S (nth_prime m)) i)
                      (matita_arithmetics_nat.lt
                         i
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_factorial.fact (nth_prime m)))
                            (matita_arithmetics_nat.S (nth_prime m)))))
                   (matita_basics_logic.eq
                      matita_basics_bool.bool
                      (primeb i)
                      matita_basics_bool.true))
                (smallest_factor
                   (matita_arithmetics_nat.S (matita_arithmetics_factorial.fact (nth_prime m))))
                (matita_basics_logic.conj
                   (matita_basics_logic.And
                      (matita_arithmetics_nat.le
                         (matita_arithmetics_nat.S (nth_prime m))
                         (smallest_factor
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_factorial.fact (nth_prime m)))))
                      (matita_arithmetics_nat.lt
                         (smallest_factor
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_factorial.fact (nth_prime m))))
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_factorial.fact (nth_prime m)))
                            (matita_arithmetics_nat.S (nth_prime m)))))
                   (matita_basics_logic.eq
                      matita_basics_bool.bool
                      (primeb
                         (smallest_factor
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_factorial.fact (nth_prime m)))))
                      matita_basics_bool.true)
                   (matita_basics_logic.conj
                      (matita_arithmetics_nat.le
                         (matita_arithmetics_nat.S (nth_prime m))
                         (smallest_factor
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_factorial.fact (nth_prime m)))))
                      (matita_arithmetics_nat.lt
                         (smallest_factor
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_factorial.fact (nth_prime m))))
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_factorial.fact (nth_prime m)))
                            (matita_arithmetics_nat.S (nth_prime m))))
                      (smallest_factor_fact (nth_prime m))
                      (matita_arithmetics_nat.le_S_S
                         (smallest_factor
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_factorial.fact (nth_prime m))))
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_factorial.fact (nth_prime m))
                            (matita_arithmetics_nat.S (nth_prime m)))
                         (matita_arithmetics_nat.transitive_le
                            (smallest_factor
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_factorial.fact (nth_prime m))))
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_factorial.fact (nth_prime m)))
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_factorial.fact (nth_prime m))
                               (matita_arithmetics_nat.S (nth_prime m)))
                            (le_smallest_factor_n
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_factorial.fact (nth_prime m))))
                            (matita_basics_logic.eq_ind
                               matita_arithmetics_nat.nat
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_factorial.fact (nth_prime m))
                                     (nth_prime m)))
                               (x_1:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                _x_2:(pts.El
                                        pts.var
                                        (matita_basics_logic.eq
                                           matita_arithmetics_nat.nat
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.plus
                                                 (matita_arithmetics_factorial.fact
                                                    (nth_prime m))
                                                 (nth_prime m)))
                                           x_1)) =>
                                matita_arithmetics_nat.le
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_factorial.fact (nth_prime m)))
                                  x_1)
                               (matita_arithmetics_nat.le_plus_n_r
                                  (nth_prime m)
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_factorial.fact (nth_prime m))))
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_factorial.fact (nth_prime m))
                                  (matita_arithmetics_nat.S (nth_prime m)))
                               (matita_arithmetics_nat.plus_n_Sm
                                  (matita_arithmetics_factorial.fact (nth_prime m))
                                  (nth_prime m))))))
                   (prime_to_primeb_true
                      (smallest_factor
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_factorial.fact (nth_prime m))))
                      (prime_smallest_factor_n
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_factorial.fact (nth_prime m)))
                         (matita_arithmetics_nat.le_S_S
                            (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                            (matita_arithmetics_factorial.fact (nth_prime m))
                            (matita_arithmetics_factorial.le_1_fact (nth_prime m)))))))))
       (nth_prime (matita_arithmetics_nat.S m))
       (nth_primeS m))
    n.

def increasing_nth_prime :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  pts.El pts.var (matita_arithmetics_nat.lt (nth_prime n) (nth_prime (matita_arithmetics_nat.S n)))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_arithmetics_minimization.le_min_l
    primeb
    (matita_arithmetics_nat.S (matita_arithmetics_factorial.fact (nth_prime n)))
    (matita_arithmetics_nat.S (nth_prime n)).

def lt_SO_nth_prime_n :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  pts.El
    pts.var
    (matita_arithmetics_nat.lt (matita_arithmetics_nat.S matita_arithmetics_nat.O) (nth_prime n))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) => prime_to_lt_SO (nth_prime n) (prime_nth_prime n).

def lt_O_nth_prime_n :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O (nth_prime n))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) => prime_to_lt_O (nth_prime n) (prime_nth_prime n).

def lt_n_nth_prime_n :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  pts.El pts.var (matita_arithmetics_nat.lt n (nth_prime n))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_arithmetics_nat.nat_ind
    (_x_365:(pts.El pts.var matita_arithmetics_nat.nat) =>
     matita_arithmetics_nat.lt _x_365 (nth_prime _x_365))
    (lt_O_nth_prime_n matita_arithmetics_nat.O)
    (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
     ltm:(pts.El pts.var (matita_arithmetics_nat.lt m (nth_prime m))) =>
     matita_arithmetics_nat.le_to_lt_to_lt
       (matita_arithmetics_nat.S m)
       (nth_prime m)
       (nth_prime (matita_arithmetics_nat.S m))
       ltm
       (increasing_nth_prime m))
    n.

def let_previous_prime5 :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  ltml:(pts.El pts.var (matita_arithmetics_nat.lt (nth_prime n) m)) ->
  pts.El pts.var matita_arithmetics_nat.nat
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  ltml:(pts.El pts.var (matita_arithmetics_nat.lt (nth_prime n) m)) => nth_prime n.

def let_upper_bound5 :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  ltml:(pts.El pts.var (matita_arithmetics_nat.lt (nth_prime n) m)) ->
  pts.El pts.var matita_arithmetics_nat.nat
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  ltml:(pts.El pts.var (matita_arithmetics_nat.lt (nth_prime n) m)) =>
  matita_arithmetics_nat.S (matita_arithmetics_factorial.fact (let_previous_prime5 n m ltml)).

def let_previous_prime6 :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  ltml:(pts.El pts.var (matita_arithmetics_nat.lt (nth_prime n) m)) ->
  x:(pts.El pts.var matita_arithmetics_nat.nat) -> pts.El pts.var matita_arithmetics_nat.nat
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  ltml:(pts.El pts.var (matita_arithmetics_nat.lt (nth_prime n) m)) =>
  x:(pts.El pts.var matita_arithmetics_nat.nat) => nth_prime n.

def let_upper_bound6 :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  ltml:(pts.El pts.var (matita_arithmetics_nat.lt (nth_prime n) m)) ->
  x:(pts.El pts.var matita_arithmetics_nat.nat) -> pts.El pts.var matita_arithmetics_nat.nat
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  ltml:(pts.El pts.var (matita_arithmetics_nat.lt (nth_prime n) m)) =>
  x:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_arithmetics_nat.S (matita_arithmetics_factorial.fact (let_previous_prime6 n m ltml x)).

def let_previous_prime7 :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  ltml:(pts.El pts.var (matita_arithmetics_nat.lt (nth_prime n) m)) ->
  pts.El pts.var matita_arithmetics_nat.nat
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  ltml:(pts.El pts.var (matita_arithmetics_nat.lt (nth_prime n) m)) => nth_prime n.

def let_upper_bound7 :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  ltml:(pts.El pts.var (matita_arithmetics_nat.lt (nth_prime n) m)) ->
  pts.El pts.var matita_arithmetics_nat.nat
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  ltml:(pts.El pts.var (matita_arithmetics_nat.lt (nth_prime n) m)) =>
  matita_arithmetics_nat.S (matita_arithmetics_factorial.fact (let_previous_prime7 n m ltml)).

def lt_nth_prime_to_not_prime :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt (nth_prime n) m)) ->
  __1:(pts.El pts.var (matita_arithmetics_nat.lt m (nth_prime (matita_arithmetics_nat.S n)))) ->
  pts.El pts.var (matita_basics_logic.Not (prime m))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  ltml:(pts.El pts.var (matita_arithmetics_nat.lt (nth_prime n) m)) =>
  matita_basics_logic.eq_ind_r
    matita_arithmetics_nat.nat
    (matita_arithmetics_minimization.min
       (let_upper_bound5 n m ltml)
       (matita_arithmetics_nat.S (let_previous_prime5 n m ltml))
       primeb)
    (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
     __:(pts.El
           pts.var
           (matita_basics_logic.eq
              matita_arithmetics_nat.nat
              x
              (matita_arithmetics_minimization.min
                 (let_upper_bound6 n m ltml x)
                 (matita_arithmetics_nat.S (let_previous_prime6 n m ltml x))
                 primeb))) =>
     pts.Prod
       pts.var
       pts.var
       (matita_arithmetics_nat.lt m x)
       (__1:(pts.El pts.var (matita_arithmetics_nat.lt m x)) => matita_basics_logic.Not (prime m)))
    (ltmr:(pts.El
             pts.var
             (matita_arithmetics_nat.lt
                m
                (matita_arithmetics_minimization.min
                   (let_upper_bound7 n m ltml)
                   (matita_arithmetics_nat.S (let_previous_prime7 n m ltml))
                   primeb))) =>
     primeb_false_to_not_prime
       m
       (matita_arithmetics_minimization.lt_min_to_false
          primeb
          (matita_arithmetics_nat.S (matita_arithmetics_factorial.fact (nth_prime n)))
          m
          (matita_arithmetics_nat.S (nth_prime n))
          ltml
          ltmr))
    (nth_prime (matita_arithmetics_nat.S n))
    (nth_primeS n).

def prime_to_nth_prime :
  p:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (prime p)) ->
  pts.El
    pts.var
    (matita_basics_logic.ex
       matita_arithmetics_nat.nat
       (i:(pts.El pts.var matita_arithmetics_nat.nat) =>
        matita_basics_logic.eq matita_arithmetics_nat.nat (nth_prime i) p))
  :=
  p:(pts.El pts.var matita_arithmetics_nat.nat) =>
  primep:(pts.El pts.var (prime p)) =>
  matita_basics_logic.match_ex
    matita_arithmetics_nat.nat
    (i:(pts.El pts.var matita_arithmetics_nat.nat) =>
     matita_basics_logic.And
       (matita_arithmetics_nat.le (nth_prime i) p)
       (matita_arithmetics_nat.lt p (nth_prime (matita_arithmetics_nat.S i))))
    pts.var
    (__:(pts.El
           pts.var
           (matita_basics_logic.ex
              matita_arithmetics_nat.nat
              (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
               matita_basics_logic.And
                 (matita_arithmetics_nat.le (nth_prime m) p)
                 (matita_arithmetics_nat.lt p (nth_prime (matita_arithmetics_nat.S m)))))) =>
     matita_basics_logic.ex
       matita_arithmetics_nat.nat
       (i:(pts.El pts.var matita_arithmetics_nat.nat) =>
        matita_basics_logic.eq matita_arithmetics_nat.nat (nth_prime i) p))
    (n:(pts.El pts.var matita_arithmetics_nat.nat) =>
     _clearme:(pts.El
                 pts.var
                 (matita_basics_logic.And
                    (matita_arithmetics_nat.le (nth_prime n) p)
                    (matita_arithmetics_nat.lt p (nth_prime (matita_arithmetics_nat.S n))))) =>
     matita_basics_logic.match_And
       (matita_arithmetics_nat.le (nth_prime n) p)
       (matita_arithmetics_nat.lt p (nth_prime (matita_arithmetics_nat.S n)))
       pts.var
       (__:(pts.El
              pts.var
              (matita_basics_logic.And
                 (matita_arithmetics_nat.le (nth_prime n) p)
                 (matita_arithmetics_nat.lt p (nth_prime (matita_arithmetics_nat.S n))))) =>
        matita_basics_logic.ex
          matita_arithmetics_nat.nat
          (i:(pts.El pts.var matita_arithmetics_nat.nat) =>
           matita_basics_logic.eq matita_arithmetics_nat.nat (nth_prime i) p))
       (lepl:(pts.El pts.var (matita_arithmetics_nat.le (nth_prime n) p)) =>
        ltpr:(pts.El
                pts.var
                (matita_arithmetics_nat.lt p (nth_prime (matita_arithmetics_nat.S n)))) =>
        matita_basics_logic.match_Or
          (matita_arithmetics_nat.lt (nth_prime n) p)
          (matita_basics_logic.eq matita_arithmetics_nat.nat (nth_prime n) p)
          pts.var
          (__:(pts.El
                 pts.var
                 (matita_basics_logic.Or
                    (matita_arithmetics_nat.lt (nth_prime n) p)
                    (matita_basics_logic.eq matita_arithmetics_nat.nat (nth_prime n) p))) =>
           matita_basics_logic.ex
             matita_arithmetics_nat.nat
             (i:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq matita_arithmetics_nat.nat (nth_prime i) p))
          (ltpl:(pts.El pts.var (matita_arithmetics_nat.lt (nth_prime n) p)) =>
           matita_basics_logic.False_ind
             (_x_66:(pts.El pts.var matita_basics_logic.False) =>
              matita_basics_logic.ex
                matita_arithmetics_nat.nat
                (i:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq matita_arithmetics_nat.nat (nth_prime i) p))
             (matita_basics_logic.absurd
                (prime p)
                primep
                (lt_nth_prime_to_not_prime n p ltpl ltpr)))
          (eqp:(pts.El
                  pts.var
                  (matita_basics_logic.eq matita_arithmetics_nat.nat (nth_prime n) p)) =>
           matita_basics_logic.ex_intro
             matita_arithmetics_nat.nat
             (i:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq matita_arithmetics_nat.nat (nth_prime i) p)
             n
             (matita_basics_logic.rewrite_r
                matita_arithmetics_nat.nat
                p
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq matita_arithmetics_nat.nat __ p)
                (matita_basics_logic.refl matita_arithmetics_nat.nat p)
                (nth_prime n)
                eqp))
          (matita_arithmetics_nat.le_to_or_lt_eq (nth_prime n) p lepl))
       _clearme)
    (matita_arithmetics_nat.increasing_to_le2
       nth_prime
       (n:(pts.El pts.var matita_arithmetics_nat.nat) => increasing_nth_prime n)
       p
       (prime_to_lt_SO p primep)).

