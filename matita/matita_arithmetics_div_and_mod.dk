def mod_aux :
  _p:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _n:(pts.El pts.var matita_arithmetics_nat.nat) -> pts.El pts.var matita_arithmetics_nat.nat.

def mod_aux_body :
  _p:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _n:(pts.El pts.var matita_arithmetics_nat.nat) -> pts.El pts.var matita_arithmetics_nat.nat.

[_p]
  mod_aux _p
  -->
  matita_arithmetics_nat.filter_nat
    pts.var
    (_p:(pts.El pts.var matita_arithmetics_nat.nat) =>
     pts.Prod
       pts.var
       pts.var
       matita_arithmetics_nat.nat
       (_m:(pts.El pts.var matita_arithmetics_nat.nat) =>
        pts.Prod
          pts.var
          pts.var
          matita_arithmetics_nat.nat
          (_n:(pts.El pts.var matita_arithmetics_nat.nat) => matita_arithmetics_nat.nat)))
    mod_aux_body
    _p.

[_p]
  mod_aux_body _p
  -->
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_arithmetics_nat.match_nat
    pts.var
    (__:(pts.El pts.var matita_arithmetics_nat.nat) => matita_arithmetics_nat.nat)
    m
    (q:(pts.El pts.var matita_arithmetics_nat.nat) =>
     matita_basics_bool.match_bool
       pts.var
       (__:(pts.El pts.var matita_basics_bool.bool) => matita_arithmetics_nat.nat)
       m
       (mod_aux q (matita_arithmetics_nat.minus m (matita_arithmetics_nat.S n)) n)
       (matita_arithmetics_nat.leb m n))
    _p.

def mod :
  __:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __1:(pts.El pts.var matita_arithmetics_nat.nat) -> pts.El pts.var matita_arithmetics_nat.nat
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_arithmetics_nat.match_nat
    pts.var
    (__:(pts.El pts.var matita_arithmetics_nat.nat) => matita_arithmetics_nat.nat)
    n
    (p:(pts.El pts.var matita_arithmetics_nat.nat) => mod_aux n n p)
    m.

def div_aux :
  _p:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _n:(pts.El pts.var matita_arithmetics_nat.nat) -> pts.El pts.var matita_arithmetics_nat.nat.

def div_aux_body :
  _p:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _n:(pts.El pts.var matita_arithmetics_nat.nat) -> pts.El pts.var matita_arithmetics_nat.nat.

[_p]
  div_aux _p
  -->
  matita_arithmetics_nat.filter_nat
    pts.var
    (_p:(pts.El pts.var matita_arithmetics_nat.nat) =>
     pts.Prod
       pts.var
       pts.var
       matita_arithmetics_nat.nat
       (_m:(pts.El pts.var matita_arithmetics_nat.nat) =>
        pts.Prod
          pts.var
          pts.var
          matita_arithmetics_nat.nat
          (_n:(pts.El pts.var matita_arithmetics_nat.nat) => matita_arithmetics_nat.nat)))
    div_aux_body
    _p.

[_p]
  div_aux_body _p
  -->
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_arithmetics_nat.match_nat
    pts.var
    (__:(pts.El pts.var matita_arithmetics_nat.nat) => matita_arithmetics_nat.nat)
    matita_arithmetics_nat.O
    (q:(pts.El pts.var matita_arithmetics_nat.nat) =>
     matita_basics_bool.match_bool
       pts.var
       (__:(pts.El pts.var matita_basics_bool.bool) => matita_arithmetics_nat.nat)
       matita_arithmetics_nat.O
       (matita_arithmetics_nat.S
          (div_aux q (matita_arithmetics_nat.minus m (matita_arithmetics_nat.S n)) n))
       (matita_arithmetics_nat.leb m n))
    _p.

def div :
  __:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __1:(pts.El pts.var matita_arithmetics_nat.nat) -> pts.El pts.var matita_arithmetics_nat.nat
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_arithmetics_nat.match_nat
    pts.var
    (__:(pts.El pts.var matita_arithmetics_nat.nat) => matita_arithmetics_nat.nat)
    (matita_arithmetics_nat.S n)
    (p:(pts.El pts.var matita_arithmetics_nat.nat) => div_aux n n p)
    m.

def le_mod_aux_m_m :
  p:(pts.El pts.var matita_arithmetics_nat.nat) ->
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.le n p)) ->
  pts.El pts.var (matita_arithmetics_nat.le (mod_aux p n m) m)
  :=
  p:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_arithmetics_nat.nat_ind
    (_x_365:(pts.El pts.var matita_arithmetics_nat.nat) =>
     pts.Prod
       pts.var
       pts.var
       matita_arithmetics_nat.nat
       (n:(pts.El pts.var matita_arithmetics_nat.nat) =>
        pts.Prod
          pts.var
          pts.var
          matita_arithmetics_nat.nat
          (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
           pts.Prod
             pts.var
             pts.var
             (matita_arithmetics_nat.le n _x_365)
             (__:(pts.El pts.var (matita_arithmetics_nat.le n _x_365)) =>
              matita_arithmetics_nat.le (mod_aux _x_365 n m) m))))
    (n:(pts.El pts.var matita_arithmetics_nat.nat) =>
     m:(pts.El pts.var matita_arithmetics_nat.nat) =>
     lenO:(pts.El pts.var (matita_arithmetics_nat.le n matita_arithmetics_nat.O)) =>
     matita_arithmetics_nat.le_n_O_elim
       n
       lenO
       (__:(pts.El pts.var matita_arithmetics_nat.nat) => matita_arithmetics_nat.le __ m)
       (matita_arithmetics_nat.le_O_n m))
    (q:(pts.El pts.var matita_arithmetics_nat.nat) =>
     Hind:(n:(pts.El pts.var matita_arithmetics_nat.nat) ->
           m:(pts.El pts.var matita_arithmetics_nat.nat) ->
           __:(pts.El pts.var (matita_arithmetics_nat.le n q)) ->
           pts.El pts.var (matita_arithmetics_nat.le (mod_aux q n m) m)) =>
     n:(pts.El pts.var matita_arithmetics_nat.nat) =>
     m:(pts.El pts.var matita_arithmetics_nat.nat) =>
     len:(pts.El pts.var (matita_arithmetics_nat.le n (matita_arithmetics_nat.S q))) =>
     matita_arithmetics_nat.leb_elim
       n
       m
       (__:(pts.El pts.var matita_basics_bool.bool) =>
        matita_arithmetics_nat.le
          (matita_basics_bool.match_bool
             pts.var
             (_0:(pts.El pts.var matita_basics_bool.bool) => matita_arithmetics_nat.nat)
             n
             (mod_aux q (matita_arithmetics_nat.minus n (matita_arithmetics_nat.S m)) m)
             __)
          m)
       (auto:(pts.El pts.var (matita_arithmetics_nat.le n m)) => auto)
       (notlenm:(pts.El pts.var (matita_basics_logic.Not (matita_arithmetics_nat.le n m))) =>
        Hind
          (matita_arithmetics_nat.minus n (matita_arithmetics_nat.S m))
          m
          (matita_arithmetics_nat.le_plus_to_minus
             n
             (matita_arithmetics_nat.S m)
             q
             (matita_arithmetics_nat.transitive_le
                n
                (matita_arithmetics_nat.S q)
                (matita_arithmetics_nat.plus q (matita_arithmetics_nat.S m))
                len
                (matita_basics_logic.eq_coerc
                   (matita_arithmetics_nat.le
                      (matita_arithmetics_nat.S q)
                      (matita_arithmetics_nat.plus (matita_arithmetics_nat.S q) m))
                   (matita_arithmetics_nat.le
                      (matita_arithmetics_nat.S q)
                      (matita_arithmetics_nat.plus q (matita_arithmetics_nat.S m)))
                   (matita_arithmetics_nat.le_plus_n_r m (matita_arithmetics_nat.S q))
                   (matita_basics_logic.rewrite_l
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.plus m (matita_arithmetics_nat.S q))
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         (pts.u pts.var)
                         (matita_arithmetics_nat.le (matita_arithmetics_nat.S q) __)
                         (matita_arithmetics_nat.le
                            (matita_arithmetics_nat.S q)
                            (matita_arithmetics_nat.plus q (matita_arithmetics_nat.S m))))
                      (matita_basics_logic.rewrite_r
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.plus q (matita_arithmetics_nat.S m))
                         (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq
                            (pts.u pts.var)
                            (matita_arithmetics_nat.le (matita_arithmetics_nat.S q) __)
                            (matita_arithmetics_nat.le
                               (matita_arithmetics_nat.S q)
                               (matita_arithmetics_nat.plus q (matita_arithmetics_nat.S m))))
                         (matita_basics_logic.refl
                            (pts.u pts.var)
                            (matita_arithmetics_nat.le
                               (matita_arithmetics_nat.S q)
                               (matita_arithmetics_nat.plus q (matita_arithmetics_nat.S m))))
                         (matita_arithmetics_nat.plus m (matita_arithmetics_nat.S q))
                         (matita_basics_logic.rewrite_l
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.S (matita_arithmetics_nat.plus m q))
                            (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                             matita_basics_logic.eq
                               matita_arithmetics_nat.nat
                               __
                               (matita_arithmetics_nat.plus q (matita_arithmetics_nat.S m)))
                            (matita_basics_logic.rewrite_l
                               matita_arithmetics_nat.nat
                               (matita_arithmetics_nat.plus q m)
                               (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                matita_basics_logic.eq
                                  matita_arithmetics_nat.nat
                                  (matita_arithmetics_nat.S __)
                                  (matita_arithmetics_nat.plus
                                     q
                                     (matita_arithmetics_nat.S m)))
                               (matita_arithmetics_nat.plus_n_Sm q m)
                               (matita_arithmetics_nat.plus m q)
                               (matita_arithmetics_nat.commutative_plus q m))
                            (matita_arithmetics_nat.plus m (matita_arithmetics_nat.S q))
                            (matita_arithmetics_nat.plus_n_Sm m q)))
                      (matita_arithmetics_nat.plus (matita_arithmetics_nat.S q) m)
                      (matita_arithmetics_nat.commutative_plus m (matita_arithmetics_nat.S q))))))))
    p.

def lt_mod_m_m :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) ->
  pts.El pts.var (matita_arithmetics_nat.lt (mod n m) m)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_arithmetics_nat.match_nat
    pts.var
    (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
     pts.Prod
       pts.var
       pts.var
       (matita_arithmetics_nat.lt matita_arithmetics_nat.O __)
       (__1:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O __)) =>
        matita_arithmetics_nat.lt (mod n __) __))
    (abs:(pts.El
            pts.var
            (matita_arithmetics_nat.lt matita_arithmetics_nat.O matita_arithmetics_nat.O)) =>
     matita_basics_logic.False_ind
       (_x_66:(pts.El pts.var matita_basics_logic.False) =>
        matita_arithmetics_nat.lt (mod n matita_arithmetics_nat.O) matita_arithmetics_nat.O)
       (matita_basics_logic.absurd
          (matita_arithmetics_nat.le
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)
             matita_arithmetics_nat.O)
          abs
          (matita_arithmetics_nat.not_le_Sn_O matita_arithmetics_nat.O)))
    (p:(pts.El pts.var matita_arithmetics_nat.nat) =>
     __:(pts.El
           pts.var
           (matita_arithmetics_nat.lt matita_arithmetics_nat.O (matita_arithmetics_nat.S p))) =>
     matita_arithmetics_nat.le_S_S
       (mod_aux n n p)
       p
       (le_mod_aux_m_m n n p (matita_arithmetics_nat.le_n n)))
    m.

def div_aux_mod_aux :
  p:(pts.El pts.var matita_arithmetics_nat.nat) ->
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       n
       (matita_arithmetics_nat.plus
          (matita_arithmetics_nat.times (div_aux p n m) (matita_arithmetics_nat.S m))
          (mod_aux p n m)))
  :=
  p:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_arithmetics_nat.nat_ind
    (_x_365:(pts.El pts.var matita_arithmetics_nat.nat) =>
     pts.Prod
       pts.var
       pts.var
       matita_arithmetics_nat.nat
       (n:(pts.El pts.var matita_arithmetics_nat.nat) =>
        pts.Prod
          pts.var
          pts.var
          matita_arithmetics_nat.nat
          (m:(pts.El pts.var matita_arithmetics_nat.nat) =>
           matita_basics_logic.eq
             matita_arithmetics_nat.nat
             n
             (matita_arithmetics_nat.plus
                (matita_arithmetics_nat.times (div_aux _x_365 n m) (matita_arithmetics_nat.S m))
                (mod_aux _x_365 n m)))))
    (n:(pts.El pts.var matita_arithmetics_nat.nat) =>
     m:(pts.El pts.var matita_arithmetics_nat.nat) =>
     matita_basics_logic.refl matita_arithmetics_nat.nat n)
    (q:(pts.El pts.var matita_arithmetics_nat.nat) =>
     Hind:(n:(pts.El pts.var matita_arithmetics_nat.nat) ->
           m:(pts.El pts.var matita_arithmetics_nat.nat) ->
           pts.El
             pts.var
             (matita_basics_logic.eq
                matita_arithmetics_nat.nat
                n
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.times (div_aux q n m) (matita_arithmetics_nat.S m))
                   (mod_aux q n m)))) =>
     n:(pts.El pts.var matita_arithmetics_nat.nat) =>
     m:(pts.El pts.var matita_arithmetics_nat.nat) =>
     matita_arithmetics_nat.leb_elim
       n
       m
       (__:(pts.El pts.var matita_basics_bool.bool) =>
        matita_basics_logic.eq
          matita_arithmetics_nat.nat
          n
          (matita_arithmetics_nat.plus
             (matita_arithmetics_nat.times
                (matita_basics_bool.match_bool
                   pts.var
                   (_0:(pts.El pts.var matita_basics_bool.bool) => matita_arithmetics_nat.nat)
                   matita_arithmetics_nat.O
                   (matita_arithmetics_nat.S
                      (div_aux
                         q
                         (matita_arithmetics_nat.minus n (matita_arithmetics_nat.S m))
                         m))
                   __)
                (matita_arithmetics_nat.S m))
             (matita_basics_bool.match_bool
                pts.var
                (_0:(pts.El pts.var matita_basics_bool.bool) => matita_arithmetics_nat.nat)
                n
                (mod_aux q (matita_arithmetics_nat.minus n (matita_arithmetics_nat.S m)) m)
                __)))
       (lenm:(pts.El pts.var (matita_arithmetics_nat.le n m)) =>
        matita_basics_logic.refl matita_arithmetics_nat.nat n)
       (lenm:(pts.El pts.var (matita_basics_logic.Not (matita_arithmetics_nat.le n m))) =>
        matita_basics_logic.eq_ind_r
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.plus
             m
             (matita_arithmetics_nat.plus
                (matita_arithmetics_nat.times
                   (div_aux q (matita_arithmetics_nat.minus n (matita_arithmetics_nat.S m)) m)
                   (matita_arithmetics_nat.S m))
                (mod_aux q (matita_arithmetics_nat.minus n (matita_arithmetics_nat.S m)) m)))
          (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
           __:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    matita_arithmetics_nat.nat
                    x
                    (matita_arithmetics_nat.plus
                       m
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times
                             (div_aux
                                q
                                (matita_arithmetics_nat.minus
                                   n
                                   (matita_arithmetics_nat.S m))
                                m)
                             (matita_arithmetics_nat.S m))
                          (mod_aux
                             q
                             (matita_arithmetics_nat.minus n (matita_arithmetics_nat.S m))
                             m))))) =>
           matita_basics_logic.eq matita_arithmetics_nat.nat n (matita_arithmetics_nat.S x))
          (matita_basics_logic.eq_ind
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.minus n (matita_arithmetics_nat.S m))
             (x_1:(pts.El pts.var matita_arithmetics_nat.nat) =>
              _x_2:(pts.El
                      pts.var
                      (matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.minus n (matita_arithmetics_nat.S m))
                         x_1)) =>
              matita_basics_logic.eq
                matita_arithmetics_nat.nat
                n
                (matita_arithmetics_nat.S (matita_arithmetics_nat.plus m x_1)))
             (matita_basics_logic.eq_coerc
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   n
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.minus n (matita_arithmetics_nat.S m))
                      (matita_arithmetics_nat.S m)))
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   n
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.plus
                         m
                         (matita_arithmetics_nat.minus n (matita_arithmetics_nat.S m)))))
                (matita_arithmetics_nat.plus_minus_m_m
                   n
                   (matita_arithmetics_nat.S m)
                   (matita_arithmetics_nat.not_le_to_lt n m lenm))
                (matita_basics_logic.rewrite_r
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.pred (matita_arithmetics_nat.minus n m))
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      (pts.u pts.var)
                      (matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         n
                         (matita_arithmetics_nat.plus __ (matita_arithmetics_nat.S m)))
                      (matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         n
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.plus
                               m
                               (matita_arithmetics_nat.minus n (matita_arithmetics_nat.S m))))))
                   (matita_basics_logic.rewrite_r
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.pred (matita_arithmetics_nat.minus n m))
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         (pts.u pts.var)
                         (matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            n
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.pred
                                  (matita_arithmetics_nat.minus n m))
                               (matita_arithmetics_nat.S m)))
                         (matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            n
                            (matita_arithmetics_nat.S (matita_arithmetics_nat.plus m __))))
                      (matita_basics_logic.rewrite_r
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.plus
                            m
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.pred
                                  (matita_arithmetics_nat.minus n m))))
                         (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq
                            (pts.u pts.var)
                            (matita_basics_logic.eq
                               matita_arithmetics_nat.nat
                               n
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.pred
                                     (matita_arithmetics_nat.minus n m))
                                  (matita_arithmetics_nat.S m)))
                            (matita_basics_logic.eq matita_arithmetics_nat.nat n __))
                         (matita_basics_logic.rewrite_r
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.plus
                               m
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.pred
                                     (matita_arithmetics_nat.minus n m))))
                            (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                             matita_basics_logic.eq
                               (pts.u pts.var)
                               (matita_basics_logic.eq matita_arithmetics_nat.nat n __)
                               (matita_basics_logic.eq
                                  matita_arithmetics_nat.nat
                                  n
                                  (matita_arithmetics_nat.plus
                                     m
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.pred
                                           (matita_arithmetics_nat.minus n m))))))
                            (matita_basics_logic.refl
                               (pts.u pts.var)
                               (matita_basics_logic.eq
                                  matita_arithmetics_nat.nat
                                  n
                                  (matita_arithmetics_nat.plus
                                     m
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.pred
                                           (matita_arithmetics_nat.minus n m))))))
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.pred
                                  (matita_arithmetics_nat.minus n m))
                               (matita_arithmetics_nat.S m))
                            (matita_basics_logic.rewrite_l
                               matita_arithmetics_nat.nat
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.pred
                                        (matita_arithmetics_nat.minus n m))
                                     m))
                               (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                matita_basics_logic.eq
                                  matita_arithmetics_nat.nat
                                  __
                                  (matita_arithmetics_nat.plus
                                     m
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.pred
                                           (matita_arithmetics_nat.minus n m)))))
                               (matita_basics_logic.rewrite_l
                                  matita_arithmetics_nat.nat
                                  (matita_arithmetics_nat.plus
                                     m
                                     (matita_arithmetics_nat.pred
                                        (matita_arithmetics_nat.minus n m)))
                                  (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                   matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     (matita_arithmetics_nat.S __)
                                     (matita_arithmetics_nat.plus
                                        m
                                        (matita_arithmetics_nat.S
                                           (matita_arithmetics_nat.pred
                                              (matita_arithmetics_nat.minus n m)))))
                                  (matita_arithmetics_nat.plus_n_Sm
                                     m
                                     (matita_arithmetics_nat.pred
                                        (matita_arithmetics_nat.minus n m)))
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.pred
                                        (matita_arithmetics_nat.minus n m))
                                     m)
                                  (matita_arithmetics_nat.commutative_plus
                                     m
                                     (matita_arithmetics_nat.pred
                                        (matita_arithmetics_nat.minus n m))))
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.pred
                                     (matita_arithmetics_nat.minus n m))
                                  (matita_arithmetics_nat.S m))
                               (matita_arithmetics_nat.plus_n_Sm
                                  (matita_arithmetics_nat.pred
                                     (matita_arithmetics_nat.minus n m))
                                  m)))
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.plus
                               m
                               (matita_arithmetics_nat.pred
                                  (matita_arithmetics_nat.minus n m))))
                         (matita_arithmetics_nat.plus_n_Sm
                            m
                            (matita_arithmetics_nat.pred (matita_arithmetics_nat.minus n m))))
                      (matita_arithmetics_nat.minus n (matita_arithmetics_nat.S m))
                      (matita_arithmetics_nat.eq_minus_S_pred n m))
                   (matita_arithmetics_nat.minus n (matita_arithmetics_nat.S m))
                   (matita_arithmetics_nat.eq_minus_S_pred n m)))
             (matita_arithmetics_nat.plus
                (matita_arithmetics_nat.times
                   (div_aux q (matita_arithmetics_nat.minus n (matita_arithmetics_nat.S m)) m)
                   (matita_arithmetics_nat.S m))
                (mod_aux q (matita_arithmetics_nat.minus n (matita_arithmetics_nat.S m)) m))
             (Hind (matita_arithmetics_nat.minus n (matita_arithmetics_nat.S m)) m))
          (matita_arithmetics_nat.plus
             (matita_arithmetics_nat.plus
                m
                (matita_arithmetics_nat.times
                   (div_aux q (matita_arithmetics_nat.minus n (matita_arithmetics_nat.S m)) m)
                   (matita_arithmetics_nat.S m)))
             (mod_aux q (matita_arithmetics_nat.minus n (matita_arithmetics_nat.S m)) m))
          (matita_arithmetics_nat.associative_plus
             m
             (matita_arithmetics_nat.times
                (div_aux q (matita_arithmetics_nat.minus n (matita_arithmetics_nat.S m)) m)
                (matita_arithmetics_nat.S m))
             (mod_aux q (matita_arithmetics_nat.minus n (matita_arithmetics_nat.S m)) m))))
    p.

def div_mod :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       n
       (matita_arithmetics_nat.plus (matita_arithmetics_nat.times (div n m) m) (mod n m)))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_arithmetics_nat.match_nat
    pts.var
    (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
     matita_basics_logic.eq
       matita_arithmetics_nat.nat
       n
       (matita_arithmetics_nat.plus (matita_arithmetics_nat.times (div n __) __) (mod n __)))
    (matita_basics_logic.rewrite_l
       matita_arithmetics_nat.nat
       matita_arithmetics_nat.O
       (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
        matita_basics_logic.eq matita_arithmetics_nat.nat n (matita_arithmetics_nat.plus __ n))
       (matita_basics_logic.rewrite_r
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.plus n matita_arithmetics_nat.O)
          (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
           matita_basics_logic.eq matita_arithmetics_nat.nat n __)
          (matita_basics_logic.rewrite_l
             matita_arithmetics_nat.nat
             n
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq matita_arithmetics_nat.nat n __)
             (matita_basics_logic.refl matita_arithmetics_nat.nat n)
             (matita_arithmetics_nat.plus n matita_arithmetics_nat.O)
             (matita_arithmetics_nat.plus_n_O n))
          (matita_arithmetics_nat.plus matita_arithmetics_nat.O n)
          (matita_arithmetics_nat.commutative_plus matita_arithmetics_nat.O n))
       (matita_arithmetics_nat.times n matita_arithmetics_nat.O)
       (matita_arithmetics_nat.times_n_O n))
    (auto:(pts.El pts.var matita_arithmetics_nat.nat) =>
     matita_basics_logic.rewrite_r
       matita_arithmetics_nat.nat
       (matita_arithmetics_nat.plus
          (matita_arithmetics_nat.times (div_aux n n auto) (matita_arithmetics_nat.S auto))
          (mod_aux n n auto))
       (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
        matita_basics_logic.eq
          matita_arithmetics_nat.nat
          __
          (matita_arithmetics_nat.plus
             (matita_arithmetics_nat.times (div_aux n n auto) (matita_arithmetics_nat.S auto))
             (mod_aux n n auto)))
       (matita_basics_logic.refl
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.plus
             (matita_arithmetics_nat.times (div_aux n n auto) (matita_arithmetics_nat.S auto))
             (mod_aux n n auto)))
       n
       (div_aux_mod_aux n n auto))
    m.

def eq_times_div_minus_mod :
  a:(pts.El pts.var matita_arithmetics_nat.nat) ->
  b:(pts.El pts.var matita_arithmetics_nat.nat) ->
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (matita_arithmetics_nat.times (div a b) b)
       (matita_arithmetics_nat.minus a (mod a b)))
  :=
  a:(pts.El pts.var matita_arithmetics_nat.nat) =>
  b:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_basics_logic.eq_coerc
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (matita_arithmetics_nat.times b (div a b))
       (matita_arithmetics_nat.minus
          (matita_arithmetics_nat.plus (matita_arithmetics_nat.times b (div a b)) (mod a b))
          (mod a b)))
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (matita_arithmetics_nat.times (div a b) b)
       (matita_arithmetics_nat.minus a (mod a b)))
    (matita_arithmetics_nat.minus_plus_m_m (matita_arithmetics_nat.times b (div a b)) (mod a b))
    (matita_basics_logic.rewrite_r
       matita_arithmetics_nat.nat
       (matita_arithmetics_nat.plus (mod a b) (matita_arithmetics_nat.times b (div a b)))
       (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
        matita_basics_logic.eq
          (pts.u pts.var)
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.times b (div a b))
             (matita_arithmetics_nat.minus __ (mod a b)))
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.times (div a b) b)
             (matita_arithmetics_nat.minus a (mod a b))))
       (matita_basics_logic.rewrite_r
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.times b (div a b))
          (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
           matita_basics_logic.eq
             (pts.u pts.var)
             (matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.times b (div a b))
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.plus
                      (mod a b)
                      (matita_arithmetics_nat.times b (div a b)))
                   (mod a b)))
             (matita_basics_logic.eq
                matita_arithmetics_nat.nat
                __
                (matita_arithmetics_nat.minus a (mod a b))))
          (matita_basics_logic.rewrite_l
             matita_arithmetics_nat.nat
             a
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq
                (pts.u pts.var)
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.times b (div a b))
                   (matita_arithmetics_nat.minus __ (mod a b)))
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.times b (div a b))
                   (matita_arithmetics_nat.minus a (mod a b))))
             (matita_basics_logic.refl
                (pts.u pts.var)
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.times b (div a b))
                   (matita_arithmetics_nat.minus a (mod a b))))
             (matita_arithmetics_nat.plus (mod a b) (matita_arithmetics_nat.times b (div a b)))
             (matita_basics_logic.rewrite_l
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.plus (matita_arithmetics_nat.times b (div a b)) (mod a b))
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq matita_arithmetics_nat.nat a __)
                (matita_basics_logic.rewrite_l
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.times (div a b) b)
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      a
                      (matita_arithmetics_nat.plus __ (mod a b)))
                   (div_mod a b)
                   (matita_arithmetics_nat.times b (div a b))
                   (matita_arithmetics_nat.commutative_times (div a b) b))
                (matita_arithmetics_nat.plus (mod a b) (matita_arithmetics_nat.times b (div a b)))
                (matita_arithmetics_nat.commutative_plus
                   (matita_arithmetics_nat.times b (div a b))
                   (mod a b))))
          (matita_arithmetics_nat.times (div a b) b)
          (matita_arithmetics_nat.commutative_times (div a b) b))
       (matita_arithmetics_nat.plus (matita_arithmetics_nat.times b (div a b)) (mod a b))
       (matita_arithmetics_nat.commutative_plus (matita_arithmetics_nat.times b (div a b)) (mod a b))).

div_mod_spec :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _r:(pts.El pts.var matita_arithmetics_nat.nat) -> pts.U pts.var.

div_mod_spec_intro :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt r m)) ->
  __1:(pts.El
         pts.var
         (matita_basics_logic.eq
            matita_arithmetics_nat.nat
            n
            (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q m) r))) ->
  pts.El pts.var (div_mod_spec n m q r).

def match_div_mod_spec :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  return_sort:pts.Lvl ->
  return_type:(z:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.U return_sort) ->
  case_div_mod_spec_intro:(__:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) ->
                           __1:(pts.El
                                  pts.var
                                  (matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     _n
                                     (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) ->
                           pts.El return_sort (return_type (div_mod_spec_intro _n _m _q _r __ __1))) ->
  z:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.El return_sort (return_type z).

[__1, __, case_div_mod_spec_intro, return_type, return_sort, _r, _q, _m, _n]
  match_div_mod_spec _n _m _q _r return_sort return_type case_div_mod_spec_intro (div_mod_spec_intro _n _m _q _r __ __1)
  -->
  case_div_mod_spec_intro __ __1.

def filter_div_mod_spec :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  return_sort:pts.Lvl ->
  return_type:(z:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.U return_sort) ->
  return:(z:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.El return_sort (return_type z)) ->
  z:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.El return_sort (return_type z).

[__1, __, return, return_type, return_sort, r, q, m, n]
  filter_div_mod_spec n m q r return_sort return_type return (div_mod_spec_intro n m q r __ __1)
  -->
  return (div_mod_spec_intro n m q r __ __1).

def div_mod_spec_ind :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Q_:(_x_809:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.U pts.var) ->
  _H_div_mod_spec_intro:(x_811:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) ->
                         x_810:(pts.El
                                  pts.var
                                  (matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     _n
                                     (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) ->
                         pts.El pts.var (Q_ (div_mod_spec_intro _n _m _q _r x_811 x_810))) ->
  x_809:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.El pts.var (Q_ x_809).

def div_mod_spec_ind_body :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Q_:(_x_809:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.U pts.var) ->
  _H_div_mod_spec_intro:(x_811:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) ->
                         x_810:(pts.El
                                  pts.var
                                  (matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     _n
                                     (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) ->
                         pts.El pts.var (Q_ (div_mod_spec_intro _n _m _q _r x_811 x_810))) ->
  x_809:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.El pts.var (Q_ x_809).

[x_809, _H_div_mod_spec_intro, Q_, _r, _q, _m, _n]
  div_mod_spec_ind _n _m _q _r Q_ _H_div_mod_spec_intro x_809
  -->
  filter_div_mod_spec
    _n
    _m
    _q
    _r
    pts.var
    (x_809:(pts.El pts.var (div_mod_spec _n _m _q _r)) => Q_ x_809)
    (div_mod_spec_ind_body _n _m _q _r Q_ _H_div_mod_spec_intro)
    x_809.

[x_809, _H_div_mod_spec_intro, Q_, _r, _q, _m, _n]
  div_mod_spec_ind_body _n _m _q _r Q_ _H_div_mod_spec_intro x_809
  -->
  match_div_mod_spec
    _n
    _m
    _q
    _r
    pts.var
    Q_
    (x_811:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) =>
     x_810:(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 _n
                 (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) =>
     _H_div_mod_spec_intro x_811 x_810)
    x_809.

def div_mod_spec_rect_Type4 :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Q_:(_x_813:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.U pts.var) ->
  _H_div_mod_spec_intro:(x_815:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) ->
                         x_814:(pts.El
                                  pts.var
                                  (matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     _n
                                     (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) ->
                         pts.El pts.var (Q_ (div_mod_spec_intro _n _m _q _r x_815 x_814))) ->
  x_813:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.El pts.var (Q_ x_813).

def div_mod_spec_rect_Type4_body :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Q_:(_x_813:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.U pts.var) ->
  _H_div_mod_spec_intro:(x_815:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) ->
                         x_814:(pts.El
                                  pts.var
                                  (matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     _n
                                     (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) ->
                         pts.El pts.var (Q_ (div_mod_spec_intro _n _m _q _r x_815 x_814))) ->
  x_813:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.El pts.var (Q_ x_813).

[x_813, _H_div_mod_spec_intro, Q_, _r, _q, _m, _n]
  div_mod_spec_rect_Type4 _n _m _q _r Q_ _H_div_mod_spec_intro x_813
  -->
  filter_div_mod_spec
    _n
    _m
    _q
    _r
    pts.var
    (x_813:(pts.El pts.var (div_mod_spec _n _m _q _r)) => Q_ x_813)
    (div_mod_spec_rect_Type4_body _n _m _q _r Q_ _H_div_mod_spec_intro)
    x_813.

[x_813, _H_div_mod_spec_intro, Q_, _r, _q, _m, _n]
  div_mod_spec_rect_Type4_body _n _m _q _r Q_ _H_div_mod_spec_intro x_813
  -->
  match_div_mod_spec
    _n
    _m
    _q
    _r
    pts.var
    Q_
    (x_815:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) =>
     x_814:(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 _n
                 (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) =>
     _H_div_mod_spec_intro x_815 x_814)
    x_813.

def div_mod_spec_rect_Type5 :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Q_:(_x_817:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.U pts.var) ->
  _H_div_mod_spec_intro:(x_819:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) ->
                         x_818:(pts.El
                                  pts.var
                                  (matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     _n
                                     (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) ->
                         pts.El pts.var (Q_ (div_mod_spec_intro _n _m _q _r x_819 x_818))) ->
  x_817:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.El pts.var (Q_ x_817).

def div_mod_spec_rect_Type5_body :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Q_:(_x_817:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.U pts.var) ->
  _H_div_mod_spec_intro:(x_819:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) ->
                         x_818:(pts.El
                                  pts.var
                                  (matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     _n
                                     (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) ->
                         pts.El pts.var (Q_ (div_mod_spec_intro _n _m _q _r x_819 x_818))) ->
  x_817:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.El pts.var (Q_ x_817).

[x_817, _H_div_mod_spec_intro, Q_, _r, _q, _m, _n]
  div_mod_spec_rect_Type5 _n _m _q _r Q_ _H_div_mod_spec_intro x_817
  -->
  filter_div_mod_spec
    _n
    _m
    _q
    _r
    pts.var
    (x_817:(pts.El pts.var (div_mod_spec _n _m _q _r)) => Q_ x_817)
    (div_mod_spec_rect_Type5_body _n _m _q _r Q_ _H_div_mod_spec_intro)
    x_817.

[x_817, _H_div_mod_spec_intro, Q_, _r, _q, _m, _n]
  div_mod_spec_rect_Type5_body _n _m _q _r Q_ _H_div_mod_spec_intro x_817
  -->
  match_div_mod_spec
    _n
    _m
    _q
    _r
    pts.var
    Q_
    (x_819:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) =>
     x_818:(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 _n
                 (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) =>
     _H_div_mod_spec_intro x_819 x_818)
    x_817.

def div_mod_spec_rect_Type3 :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Q_:(_x_821:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.U pts.var) ->
  _H_div_mod_spec_intro:(x_823:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) ->
                         x_822:(pts.El
                                  pts.var
                                  (matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     _n
                                     (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) ->
                         pts.El pts.var (Q_ (div_mod_spec_intro _n _m _q _r x_823 x_822))) ->
  x_821:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.El pts.var (Q_ x_821).

def div_mod_spec_rect_Type3_body :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Q_:(_x_821:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.U pts.var) ->
  _H_div_mod_spec_intro:(x_823:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) ->
                         x_822:(pts.El
                                  pts.var
                                  (matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     _n
                                     (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) ->
                         pts.El pts.var (Q_ (div_mod_spec_intro _n _m _q _r x_823 x_822))) ->
  x_821:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.El pts.var (Q_ x_821).

[x_821, _H_div_mod_spec_intro, Q_, _r, _q, _m, _n]
  div_mod_spec_rect_Type3 _n _m _q _r Q_ _H_div_mod_spec_intro x_821
  -->
  filter_div_mod_spec
    _n
    _m
    _q
    _r
    pts.var
    (x_821:(pts.El pts.var (div_mod_spec _n _m _q _r)) => Q_ x_821)
    (div_mod_spec_rect_Type3_body _n _m _q _r Q_ _H_div_mod_spec_intro)
    x_821.

[x_821, _H_div_mod_spec_intro, Q_, _r, _q, _m, _n]
  div_mod_spec_rect_Type3_body _n _m _q _r Q_ _H_div_mod_spec_intro x_821
  -->
  match_div_mod_spec
    _n
    _m
    _q
    _r
    pts.var
    Q_
    (x_823:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) =>
     x_822:(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 _n
                 (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) =>
     _H_div_mod_spec_intro x_823 x_822)
    x_821.

def div_mod_spec_rect_Type2 :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Q_:(_x_825:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.U pts.var) ->
  _H_div_mod_spec_intro:(x_827:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) ->
                         x_826:(pts.El
                                  pts.var
                                  (matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     _n
                                     (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) ->
                         pts.El pts.var (Q_ (div_mod_spec_intro _n _m _q _r x_827 x_826))) ->
  x_825:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.El pts.var (Q_ x_825).

def div_mod_spec_rect_Type2_body :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Q_:(_x_825:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.U pts.var) ->
  _H_div_mod_spec_intro:(x_827:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) ->
                         x_826:(pts.El
                                  pts.var
                                  (matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     _n
                                     (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) ->
                         pts.El pts.var (Q_ (div_mod_spec_intro _n _m _q _r x_827 x_826))) ->
  x_825:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.El pts.var (Q_ x_825).

[x_825, _H_div_mod_spec_intro, Q_, _r, _q, _m, _n]
  div_mod_spec_rect_Type2 _n _m _q _r Q_ _H_div_mod_spec_intro x_825
  -->
  filter_div_mod_spec
    _n
    _m
    _q
    _r
    pts.var
    (x_825:(pts.El pts.var (div_mod_spec _n _m _q _r)) => Q_ x_825)
    (div_mod_spec_rect_Type2_body _n _m _q _r Q_ _H_div_mod_spec_intro)
    x_825.

[x_825, _H_div_mod_spec_intro, Q_, _r, _q, _m, _n]
  div_mod_spec_rect_Type2_body _n _m _q _r Q_ _H_div_mod_spec_intro x_825
  -->
  match_div_mod_spec
    _n
    _m
    _q
    _r
    pts.var
    Q_
    (x_827:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) =>
     x_826:(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 _n
                 (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) =>
     _H_div_mod_spec_intro x_827 x_826)
    x_825.

def div_mod_spec_rect_Type1 :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Q_:(_x_829:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.U pts.var) ->
  _H_div_mod_spec_intro:(x_831:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) ->
                         x_830:(pts.El
                                  pts.var
                                  (matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     _n
                                     (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) ->
                         pts.El pts.var (Q_ (div_mod_spec_intro _n _m _q _r x_831 x_830))) ->
  x_829:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.El pts.var (Q_ x_829).

def div_mod_spec_rect_Type1_body :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Q_:(_x_829:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.U pts.var) ->
  _H_div_mod_spec_intro:(x_831:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) ->
                         x_830:(pts.El
                                  pts.var
                                  (matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     _n
                                     (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) ->
                         pts.El pts.var (Q_ (div_mod_spec_intro _n _m _q _r x_831 x_830))) ->
  x_829:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.El pts.var (Q_ x_829).

[x_829, _H_div_mod_spec_intro, Q_, _r, _q, _m, _n]
  div_mod_spec_rect_Type1 _n _m _q _r Q_ _H_div_mod_spec_intro x_829
  -->
  filter_div_mod_spec
    _n
    _m
    _q
    _r
    pts.var
    (x_829:(pts.El pts.var (div_mod_spec _n _m _q _r)) => Q_ x_829)
    (div_mod_spec_rect_Type1_body _n _m _q _r Q_ _H_div_mod_spec_intro)
    x_829.

[x_829, _H_div_mod_spec_intro, Q_, _r, _q, _m, _n]
  div_mod_spec_rect_Type1_body _n _m _q _r Q_ _H_div_mod_spec_intro x_829
  -->
  match_div_mod_spec
    _n
    _m
    _q
    _r
    pts.var
    Q_
    (x_831:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) =>
     x_830:(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 _n
                 (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) =>
     _H_div_mod_spec_intro x_831 x_830)
    x_829.

def div_mod_spec_rect_Type0 :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Q_:(_x_833:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.U pts.var) ->
  _H_div_mod_spec_intro:(x_835:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) ->
                         x_834:(pts.El
                                  pts.var
                                  (matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     _n
                                     (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) ->
                         pts.El pts.var (Q_ (div_mod_spec_intro _n _m _q _r x_835 x_834))) ->
  x_833:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.El pts.var (Q_ x_833).

def div_mod_spec_rect_Type0_body :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Q_:(_x_833:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.U pts.var) ->
  _H_div_mod_spec_intro:(x_835:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) ->
                         x_834:(pts.El
                                  pts.var
                                  (matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     _n
                                     (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) ->
                         pts.El pts.var (Q_ (div_mod_spec_intro _n _m _q _r x_835 x_834))) ->
  x_833:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.El pts.var (Q_ x_833).

[x_833, _H_div_mod_spec_intro, Q_, _r, _q, _m, _n]
  div_mod_spec_rect_Type0 _n _m _q _r Q_ _H_div_mod_spec_intro x_833
  -->
  filter_div_mod_spec
    _n
    _m
    _q
    _r
    pts.var
    (x_833:(pts.El pts.var (div_mod_spec _n _m _q _r)) => Q_ x_833)
    (div_mod_spec_rect_Type0_body _n _m _q _r Q_ _H_div_mod_spec_intro)
    x_833.

[x_833, _H_div_mod_spec_intro, Q_, _r, _q, _m, _n]
  div_mod_spec_rect_Type0_body _n _m _q _r Q_ _H_div_mod_spec_intro x_833
  -->
  match_div_mod_spec
    _n
    _m
    _q
    _r
    pts.var
    Q_
    (x_835:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) =>
     x_834:(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 _n
                 (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) =>
     _H_div_mod_spec_intro x_835 x_834)
    x_833.

def div_mod_spec_rect_CProp4 :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Q_:(_x_837:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.U pts.var) ->
  _H_div_mod_spec_intro:(x_839:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) ->
                         x_838:(pts.El
                                  pts.var
                                  (matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     _n
                                     (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) ->
                         pts.El pts.var (Q_ (div_mod_spec_intro _n _m _q _r x_839 x_838))) ->
  x_837:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.El pts.var (Q_ x_837).

def div_mod_spec_rect_CProp4_body :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Q_:(_x_837:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.U pts.var) ->
  _H_div_mod_spec_intro:(x_839:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) ->
                         x_838:(pts.El
                                  pts.var
                                  (matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     _n
                                     (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) ->
                         pts.El pts.var (Q_ (div_mod_spec_intro _n _m _q _r x_839 x_838))) ->
  x_837:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.El pts.var (Q_ x_837).

[x_837, _H_div_mod_spec_intro, Q_, _r, _q, _m, _n]
  div_mod_spec_rect_CProp4 _n _m _q _r Q_ _H_div_mod_spec_intro x_837
  -->
  filter_div_mod_spec
    _n
    _m
    _q
    _r
    pts.var
    (x_837:(pts.El pts.var (div_mod_spec _n _m _q _r)) => Q_ x_837)
    (div_mod_spec_rect_CProp4_body _n _m _q _r Q_ _H_div_mod_spec_intro)
    x_837.

[x_837, _H_div_mod_spec_intro, Q_, _r, _q, _m, _n]
  div_mod_spec_rect_CProp4_body _n _m _q _r Q_ _H_div_mod_spec_intro x_837
  -->
  match_div_mod_spec
    _n
    _m
    _q
    _r
    pts.var
    Q_
    (x_839:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) =>
     x_838:(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 _n
                 (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) =>
     _H_div_mod_spec_intro x_839 x_838)
    x_837.

def div_mod_spec_rect_CProp5 :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Q_:(_x_841:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.U pts.var) ->
  _H_div_mod_spec_intro:(x_843:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) ->
                         x_842:(pts.El
                                  pts.var
                                  (matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     _n
                                     (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) ->
                         pts.El pts.var (Q_ (div_mod_spec_intro _n _m _q _r x_843 x_842))) ->
  x_841:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.El pts.var (Q_ x_841).

def div_mod_spec_rect_CProp5_body :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Q_:(_x_841:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.U pts.var) ->
  _H_div_mod_spec_intro:(x_843:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) ->
                         x_842:(pts.El
                                  pts.var
                                  (matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     _n
                                     (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) ->
                         pts.El pts.var (Q_ (div_mod_spec_intro _n _m _q _r x_843 x_842))) ->
  x_841:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.El pts.var (Q_ x_841).

[x_841, _H_div_mod_spec_intro, Q_, _r, _q, _m, _n]
  div_mod_spec_rect_CProp5 _n _m _q _r Q_ _H_div_mod_spec_intro x_841
  -->
  filter_div_mod_spec
    _n
    _m
    _q
    _r
    pts.var
    (x_841:(pts.El pts.var (div_mod_spec _n _m _q _r)) => Q_ x_841)
    (div_mod_spec_rect_CProp5_body _n _m _q _r Q_ _H_div_mod_spec_intro)
    x_841.

[x_841, _H_div_mod_spec_intro, Q_, _r, _q, _m, _n]
  div_mod_spec_rect_CProp5_body _n _m _q _r Q_ _H_div_mod_spec_intro x_841
  -->
  match_div_mod_spec
    _n
    _m
    _q
    _r
    pts.var
    Q_
    (x_843:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) =>
     x_842:(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 _n
                 (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) =>
     _H_div_mod_spec_intro x_843 x_842)
    x_841.

def div_mod_spec_rect_CProp3 :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Q_:(_x_845:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.U pts.var) ->
  _H_div_mod_spec_intro:(x_847:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) ->
                         x_846:(pts.El
                                  pts.var
                                  (matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     _n
                                     (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) ->
                         pts.El pts.var (Q_ (div_mod_spec_intro _n _m _q _r x_847 x_846))) ->
  x_845:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.El pts.var (Q_ x_845).

def div_mod_spec_rect_CProp3_body :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Q_:(_x_845:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.U pts.var) ->
  _H_div_mod_spec_intro:(x_847:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) ->
                         x_846:(pts.El
                                  pts.var
                                  (matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     _n
                                     (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) ->
                         pts.El pts.var (Q_ (div_mod_spec_intro _n _m _q _r x_847 x_846))) ->
  x_845:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.El pts.var (Q_ x_845).

[x_845, _H_div_mod_spec_intro, Q_, _r, _q, _m, _n]
  div_mod_spec_rect_CProp3 _n _m _q _r Q_ _H_div_mod_spec_intro x_845
  -->
  filter_div_mod_spec
    _n
    _m
    _q
    _r
    pts.var
    (x_845:(pts.El pts.var (div_mod_spec _n _m _q _r)) => Q_ x_845)
    (div_mod_spec_rect_CProp3_body _n _m _q _r Q_ _H_div_mod_spec_intro)
    x_845.

[x_845, _H_div_mod_spec_intro, Q_, _r, _q, _m, _n]
  div_mod_spec_rect_CProp3_body _n _m _q _r Q_ _H_div_mod_spec_intro x_845
  -->
  match_div_mod_spec
    _n
    _m
    _q
    _r
    pts.var
    Q_
    (x_847:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) =>
     x_846:(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 _n
                 (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) =>
     _H_div_mod_spec_intro x_847 x_846)
    x_845.

def div_mod_spec_rect_CProp2 :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Q_:(_x_849:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.U pts.var) ->
  _H_div_mod_spec_intro:(x_851:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) ->
                         x_850:(pts.El
                                  pts.var
                                  (matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     _n
                                     (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) ->
                         pts.El pts.var (Q_ (div_mod_spec_intro _n _m _q _r x_851 x_850))) ->
  x_849:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.El pts.var (Q_ x_849).

def div_mod_spec_rect_CProp2_body :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Q_:(_x_849:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.U pts.var) ->
  _H_div_mod_spec_intro:(x_851:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) ->
                         x_850:(pts.El
                                  pts.var
                                  (matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     _n
                                     (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) ->
                         pts.El pts.var (Q_ (div_mod_spec_intro _n _m _q _r x_851 x_850))) ->
  x_849:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.El pts.var (Q_ x_849).

[x_849, _H_div_mod_spec_intro, Q_, _r, _q, _m, _n]
  div_mod_spec_rect_CProp2 _n _m _q _r Q_ _H_div_mod_spec_intro x_849
  -->
  filter_div_mod_spec
    _n
    _m
    _q
    _r
    pts.var
    (x_849:(pts.El pts.var (div_mod_spec _n _m _q _r)) => Q_ x_849)
    (div_mod_spec_rect_CProp2_body _n _m _q _r Q_ _H_div_mod_spec_intro)
    x_849.

[x_849, _H_div_mod_spec_intro, Q_, _r, _q, _m, _n]
  div_mod_spec_rect_CProp2_body _n _m _q _r Q_ _H_div_mod_spec_intro x_849
  -->
  match_div_mod_spec
    _n
    _m
    _q
    _r
    pts.var
    Q_
    (x_851:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) =>
     x_850:(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 _n
                 (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) =>
     _H_div_mod_spec_intro x_851 x_850)
    x_849.

def div_mod_spec_rect_CProp1 :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Q_:(_x_853:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.U pts.var) ->
  _H_div_mod_spec_intro:(x_855:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) ->
                         x_854:(pts.El
                                  pts.var
                                  (matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     _n
                                     (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) ->
                         pts.El pts.var (Q_ (div_mod_spec_intro _n _m _q _r x_855 x_854))) ->
  x_853:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.El pts.var (Q_ x_853).

def div_mod_spec_rect_CProp1_body :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Q_:(_x_853:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.U pts.var) ->
  _H_div_mod_spec_intro:(x_855:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) ->
                         x_854:(pts.El
                                  pts.var
                                  (matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     _n
                                     (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) ->
                         pts.El pts.var (Q_ (div_mod_spec_intro _n _m _q _r x_855 x_854))) ->
  x_853:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.El pts.var (Q_ x_853).

[x_853, _H_div_mod_spec_intro, Q_, _r, _q, _m, _n]
  div_mod_spec_rect_CProp1 _n _m _q _r Q_ _H_div_mod_spec_intro x_853
  -->
  filter_div_mod_spec
    _n
    _m
    _q
    _r
    pts.var
    (x_853:(pts.El pts.var (div_mod_spec _n _m _q _r)) => Q_ x_853)
    (div_mod_spec_rect_CProp1_body _n _m _q _r Q_ _H_div_mod_spec_intro)
    x_853.

[x_853, _H_div_mod_spec_intro, Q_, _r, _q, _m, _n]
  div_mod_spec_rect_CProp1_body _n _m _q _r Q_ _H_div_mod_spec_intro x_853
  -->
  match_div_mod_spec
    _n
    _m
    _q
    _r
    pts.var
    Q_
    (x_855:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) =>
     x_854:(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 _n
                 (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) =>
     _H_div_mod_spec_intro x_855 x_854)
    x_853.

def div_mod_spec_rect_CProp0 :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Q_:(_x_857:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.U pts.var) ->
  _H_div_mod_spec_intro:(x_859:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) ->
                         x_858:(pts.El
                                  pts.var
                                  (matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     _n
                                     (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) ->
                         pts.El pts.var (Q_ (div_mod_spec_intro _n _m _q _r x_859 x_858))) ->
  x_857:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.El pts.var (Q_ x_857).

def div_mod_spec_rect_CProp0_body :
  _n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Q_:(_x_857:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.U pts.var) ->
  _H_div_mod_spec_intro:(x_859:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) ->
                         x_858:(pts.El
                                  pts.var
                                  (matita_basics_logic.eq
                                     matita_arithmetics_nat.nat
                                     _n
                                     (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) ->
                         pts.El pts.var (Q_ (div_mod_spec_intro _n _m _q _r x_859 x_858))) ->
  x_857:(pts.El pts.var (div_mod_spec _n _m _q _r)) -> pts.El pts.var (Q_ x_857).

[x_857, _H_div_mod_spec_intro, Q_, _r, _q, _m, _n]
  div_mod_spec_rect_CProp0 _n _m _q _r Q_ _H_div_mod_spec_intro x_857
  -->
  filter_div_mod_spec
    _n
    _m
    _q
    _r
    pts.var
    (x_857:(pts.El pts.var (div_mod_spec _n _m _q _r)) => Q_ x_857)
    (div_mod_spec_rect_CProp0_body _n _m _q _r Q_ _H_div_mod_spec_intro)
    x_857.

[x_857, _H_div_mod_spec_intro, Q_, _r, _q, _m, _n]
  div_mod_spec_rect_CProp0_body _n _m _q _r Q_ _H_div_mod_spec_intro x_857
  -->
  match_div_mod_spec
    _n
    _m
    _q
    _r
    pts.var
    Q_
    (x_859:(pts.El pts.var (matita_arithmetics_nat.lt _r _m)) =>
     x_858:(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 _n
                 (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m) _r))) =>
     _H_div_mod_spec_intro x_859 x_858)
    x_857.

def div_mod_spec_inv_ind :
  x1:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x2:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x3:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x4:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Hterm:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) ->
  P:(_z1434:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) -> pts.U pts.var) ->
  _H1:(x_811:(pts.El pts.var (matita_arithmetics_nat.lt x4 x2)) ->
       x_810:(pts.El
                pts.var
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   x1
                   (matita_arithmetics_nat.plus (matita_arithmetics_nat.times x3 x2) x4))) ->
       _z1435:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    (div_mod_spec x1 x2 x3 x4)
                    Hterm
                    (div_mod_spec_intro x1 x2 x3 x4 x_811 x_810))) ->
       pts.El pts.var (P (div_mod_spec_intro x1 x2 x3 x4 x_811 x_810))) ->
  pts.El pts.var (P Hterm)
  :=
  x1:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x2:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x3:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x4:(pts.El pts.var matita_arithmetics_nat.nat) =>
  Hterm:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) =>
  P:(_z1434:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) -> pts.U pts.var) =>
  H1:(x_811:(pts.El pts.var (matita_arithmetics_nat.lt x4 x2)) ->
      x_810:(pts.El
               pts.var
               (matita_basics_logic.eq
                  matita_arithmetics_nat.nat
                  x1
                  (matita_arithmetics_nat.plus (matita_arithmetics_nat.times x3 x2) x4))) ->
      _z1435:(pts.El
                pts.var
                (matita_basics_logic.eq
                   (div_mod_spec x1 x2 x3 x4)
                   Hterm
                   (div_mod_spec_intro x1 x2 x3 x4 x_811 x_810))) ->
      pts.El pts.var (P (div_mod_spec_intro x1 x2 x3 x4 x_811 x_810))) =>
  div_mod_spec_ind
    x1
    x2
    x3
    x4
    (_x_809:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) =>
     pts.Prod
       pts.var
       pts.var
       (matita_basics_logic.eq (div_mod_spec x1 x2 x3 x4) Hterm _x_809)
       (_z1435:(pts.El pts.var (matita_basics_logic.eq (div_mod_spec x1 x2 x3 x4) Hterm _x_809)) =>
        P _x_809))
    H1
    Hterm
    (matita_basics_logic.refl (div_mod_spec x1 x2 x3 x4) Hterm).

def div_mod_spec_inv_rect_Type4 :
  x1:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x2:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x3:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x4:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Hterm:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) ->
  P:(_z1440:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) -> pts.U pts.var) ->
  _H1:(x_815:(pts.El pts.var (matita_arithmetics_nat.lt x4 x2)) ->
       x_814:(pts.El
                pts.var
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   x1
                   (matita_arithmetics_nat.plus (matita_arithmetics_nat.times x3 x2) x4))) ->
       _z1441:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    (div_mod_spec x1 x2 x3 x4)
                    Hterm
                    (div_mod_spec_intro x1 x2 x3 x4 x_815 x_814))) ->
       pts.El pts.var (P (div_mod_spec_intro x1 x2 x3 x4 x_815 x_814))) ->
  pts.El pts.var (P Hterm)
  :=
  x1:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x2:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x3:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x4:(pts.El pts.var matita_arithmetics_nat.nat) =>
  Hterm:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) =>
  P:(_z1440:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) -> pts.U pts.var) =>
  H1:(x_815:(pts.El pts.var (matita_arithmetics_nat.lt x4 x2)) ->
      x_814:(pts.El
               pts.var
               (matita_basics_logic.eq
                  matita_arithmetics_nat.nat
                  x1
                  (matita_arithmetics_nat.plus (matita_arithmetics_nat.times x3 x2) x4))) ->
      _z1441:(pts.El
                pts.var
                (matita_basics_logic.eq
                   (div_mod_spec x1 x2 x3 x4)
                   Hterm
                   (div_mod_spec_intro x1 x2 x3 x4 x_815 x_814))) ->
      pts.El pts.var (P (div_mod_spec_intro x1 x2 x3 x4 x_815 x_814))) =>
  div_mod_spec_rect_Type4
    x1
    x2
    x3
    x4
    (_x_813:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) =>
     pts.Prod
       pts.var
       pts.var
       (matita_basics_logic.eq (div_mod_spec x1 x2 x3 x4) Hterm _x_813)
       (_z1441:(pts.El pts.var (matita_basics_logic.eq (div_mod_spec x1 x2 x3 x4) Hterm _x_813)) =>
        P _x_813))
    H1
    Hterm
    (matita_basics_logic.refl (div_mod_spec x1 x2 x3 x4) Hterm).

def div_mod_spec_inv_rect_Type3 :
  x1:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x2:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x3:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x4:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Hterm:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) ->
  P:(_z1446:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) -> pts.U pts.var) ->
  _H1:(x_823:(pts.El pts.var (matita_arithmetics_nat.lt x4 x2)) ->
       x_822:(pts.El
                pts.var
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   x1
                   (matita_arithmetics_nat.plus (matita_arithmetics_nat.times x3 x2) x4))) ->
       _z1447:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    (div_mod_spec x1 x2 x3 x4)
                    Hterm
                    (div_mod_spec_intro x1 x2 x3 x4 x_823 x_822))) ->
       pts.El pts.var (P (div_mod_spec_intro x1 x2 x3 x4 x_823 x_822))) ->
  pts.El pts.var (P Hterm)
  :=
  x1:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x2:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x3:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x4:(pts.El pts.var matita_arithmetics_nat.nat) =>
  Hterm:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) =>
  P:(_z1446:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) -> pts.U pts.var) =>
  H1:(x_823:(pts.El pts.var (matita_arithmetics_nat.lt x4 x2)) ->
      x_822:(pts.El
               pts.var
               (matita_basics_logic.eq
                  matita_arithmetics_nat.nat
                  x1
                  (matita_arithmetics_nat.plus (matita_arithmetics_nat.times x3 x2) x4))) ->
      _z1447:(pts.El
                pts.var
                (matita_basics_logic.eq
                   (div_mod_spec x1 x2 x3 x4)
                   Hterm
                   (div_mod_spec_intro x1 x2 x3 x4 x_823 x_822))) ->
      pts.El pts.var (P (div_mod_spec_intro x1 x2 x3 x4 x_823 x_822))) =>
  div_mod_spec_rect_Type3
    x1
    x2
    x3
    x4
    (_x_821:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) =>
     pts.Prod
       pts.var
       pts.var
       (matita_basics_logic.eq (div_mod_spec x1 x2 x3 x4) Hterm _x_821)
       (_z1447:(pts.El pts.var (matita_basics_logic.eq (div_mod_spec x1 x2 x3 x4) Hterm _x_821)) =>
        P _x_821))
    H1
    Hterm
    (matita_basics_logic.refl (div_mod_spec x1 x2 x3 x4) Hterm).

def div_mod_spec_inv_rect_Type2 :
  x1:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x2:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x3:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x4:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Hterm:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) ->
  P:(_z1452:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) -> pts.U pts.var) ->
  _H1:(x_827:(pts.El pts.var (matita_arithmetics_nat.lt x4 x2)) ->
       x_826:(pts.El
                pts.var
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   x1
                   (matita_arithmetics_nat.plus (matita_arithmetics_nat.times x3 x2) x4))) ->
       _z1453:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    (div_mod_spec x1 x2 x3 x4)
                    Hterm
                    (div_mod_spec_intro x1 x2 x3 x4 x_827 x_826))) ->
       pts.El pts.var (P (div_mod_spec_intro x1 x2 x3 x4 x_827 x_826))) ->
  pts.El pts.var (P Hterm)
  :=
  x1:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x2:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x3:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x4:(pts.El pts.var matita_arithmetics_nat.nat) =>
  Hterm:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) =>
  P:(_z1452:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) -> pts.U pts.var) =>
  H1:(x_827:(pts.El pts.var (matita_arithmetics_nat.lt x4 x2)) ->
      x_826:(pts.El
               pts.var
               (matita_basics_logic.eq
                  matita_arithmetics_nat.nat
                  x1
                  (matita_arithmetics_nat.plus (matita_arithmetics_nat.times x3 x2) x4))) ->
      _z1453:(pts.El
                pts.var
                (matita_basics_logic.eq
                   (div_mod_spec x1 x2 x3 x4)
                   Hterm
                   (div_mod_spec_intro x1 x2 x3 x4 x_827 x_826))) ->
      pts.El pts.var (P (div_mod_spec_intro x1 x2 x3 x4 x_827 x_826))) =>
  div_mod_spec_rect_Type2
    x1
    x2
    x3
    x4
    (_x_825:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) =>
     pts.Prod
       pts.var
       pts.var
       (matita_basics_logic.eq (div_mod_spec x1 x2 x3 x4) Hterm _x_825)
       (_z1453:(pts.El pts.var (matita_basics_logic.eq (div_mod_spec x1 x2 x3 x4) Hterm _x_825)) =>
        P _x_825))
    H1
    Hterm
    (matita_basics_logic.refl (div_mod_spec x1 x2 x3 x4) Hterm).

def div_mod_spec_inv_rect_Type1 :
  x1:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x2:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x3:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x4:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Hterm:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) ->
  P:(_z1458:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) -> pts.U pts.var) ->
  _H1:(x_831:(pts.El pts.var (matita_arithmetics_nat.lt x4 x2)) ->
       x_830:(pts.El
                pts.var
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   x1
                   (matita_arithmetics_nat.plus (matita_arithmetics_nat.times x3 x2) x4))) ->
       _z1459:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    (div_mod_spec x1 x2 x3 x4)
                    Hterm
                    (div_mod_spec_intro x1 x2 x3 x4 x_831 x_830))) ->
       pts.El pts.var (P (div_mod_spec_intro x1 x2 x3 x4 x_831 x_830))) ->
  pts.El pts.var (P Hterm)
  :=
  x1:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x2:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x3:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x4:(pts.El pts.var matita_arithmetics_nat.nat) =>
  Hterm:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) =>
  P:(_z1458:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) -> pts.U pts.var) =>
  H1:(x_831:(pts.El pts.var (matita_arithmetics_nat.lt x4 x2)) ->
      x_830:(pts.El
               pts.var
               (matita_basics_logic.eq
                  matita_arithmetics_nat.nat
                  x1
                  (matita_arithmetics_nat.plus (matita_arithmetics_nat.times x3 x2) x4))) ->
      _z1459:(pts.El
                pts.var
                (matita_basics_logic.eq
                   (div_mod_spec x1 x2 x3 x4)
                   Hterm
                   (div_mod_spec_intro x1 x2 x3 x4 x_831 x_830))) ->
      pts.El pts.var (P (div_mod_spec_intro x1 x2 x3 x4 x_831 x_830))) =>
  div_mod_spec_rect_Type1
    x1
    x2
    x3
    x4
    (_x_829:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) =>
     pts.Prod
       pts.var
       pts.var
       (matita_basics_logic.eq (div_mod_spec x1 x2 x3 x4) Hterm _x_829)
       (_z1459:(pts.El pts.var (matita_basics_logic.eq (div_mod_spec x1 x2 x3 x4) Hterm _x_829)) =>
        P _x_829))
    H1
    Hterm
    (matita_basics_logic.refl (div_mod_spec x1 x2 x3 x4) Hterm).

def div_mod_spec_inv_rect_Type0 :
  x1:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x2:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x3:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x4:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Hterm:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) ->
  P:(_z1464:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) -> pts.U pts.var) ->
  _H1:(x_835:(pts.El pts.var (matita_arithmetics_nat.lt x4 x2)) ->
       x_834:(pts.El
                pts.var
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   x1
                   (matita_arithmetics_nat.plus (matita_arithmetics_nat.times x3 x2) x4))) ->
       _z1465:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    (div_mod_spec x1 x2 x3 x4)
                    Hterm
                    (div_mod_spec_intro x1 x2 x3 x4 x_835 x_834))) ->
       pts.El pts.var (P (div_mod_spec_intro x1 x2 x3 x4 x_835 x_834))) ->
  pts.El pts.var (P Hterm)
  :=
  x1:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x2:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x3:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x4:(pts.El pts.var matita_arithmetics_nat.nat) =>
  Hterm:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) =>
  P:(_z1464:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) -> pts.U pts.var) =>
  H1:(x_835:(pts.El pts.var (matita_arithmetics_nat.lt x4 x2)) ->
      x_834:(pts.El
               pts.var
               (matita_basics_logic.eq
                  matita_arithmetics_nat.nat
                  x1
                  (matita_arithmetics_nat.plus (matita_arithmetics_nat.times x3 x2) x4))) ->
      _z1465:(pts.El
                pts.var
                (matita_basics_logic.eq
                   (div_mod_spec x1 x2 x3 x4)
                   Hterm
                   (div_mod_spec_intro x1 x2 x3 x4 x_835 x_834))) ->
      pts.El pts.var (P (div_mod_spec_intro x1 x2 x3 x4 x_835 x_834))) =>
  div_mod_spec_rect_Type0
    x1
    x2
    x3
    x4
    (_x_833:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) =>
     pts.Prod
       pts.var
       pts.var
       (matita_basics_logic.eq (div_mod_spec x1 x2 x3 x4) Hterm _x_833)
       (_z1465:(pts.El pts.var (matita_basics_logic.eq (div_mod_spec x1 x2 x3 x4) Hterm _x_833)) =>
        P _x_833))
    H1
    Hterm
    (matita_basics_logic.refl (div_mod_spec x1 x2 x3 x4) Hterm).

def div_mod_spec_inv_rect_CProp4 :
  x1:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x2:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x3:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x4:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Hterm:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) ->
  P:(_z1470:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) -> pts.U pts.var) ->
  _H1:(x_839:(pts.El pts.var (matita_arithmetics_nat.lt x4 x2)) ->
       x_838:(pts.El
                pts.var
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   x1
                   (matita_arithmetics_nat.plus (matita_arithmetics_nat.times x3 x2) x4))) ->
       _z1471:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    (div_mod_spec x1 x2 x3 x4)
                    Hterm
                    (div_mod_spec_intro x1 x2 x3 x4 x_839 x_838))) ->
       pts.El pts.var (P (div_mod_spec_intro x1 x2 x3 x4 x_839 x_838))) ->
  pts.El pts.var (P Hterm)
  :=
  x1:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x2:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x3:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x4:(pts.El pts.var matita_arithmetics_nat.nat) =>
  Hterm:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) =>
  P:(_z1470:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) -> pts.U pts.var) =>
  H1:(x_839:(pts.El pts.var (matita_arithmetics_nat.lt x4 x2)) ->
      x_838:(pts.El
               pts.var
               (matita_basics_logic.eq
                  matita_arithmetics_nat.nat
                  x1
                  (matita_arithmetics_nat.plus (matita_arithmetics_nat.times x3 x2) x4))) ->
      _z1471:(pts.El
                pts.var
                (matita_basics_logic.eq
                   (div_mod_spec x1 x2 x3 x4)
                   Hterm
                   (div_mod_spec_intro x1 x2 x3 x4 x_839 x_838))) ->
      pts.El pts.var (P (div_mod_spec_intro x1 x2 x3 x4 x_839 x_838))) =>
  div_mod_spec_rect_CProp4
    x1
    x2
    x3
    x4
    (_x_837:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) =>
     pts.Prod
       pts.var
       pts.var
       (matita_basics_logic.eq (div_mod_spec x1 x2 x3 x4) Hterm _x_837)
       (_z1471:(pts.El pts.var (matita_basics_logic.eq (div_mod_spec x1 x2 x3 x4) Hterm _x_837)) =>
        P _x_837))
    H1
    Hterm
    (matita_basics_logic.refl (div_mod_spec x1 x2 x3 x4) Hterm).

def div_mod_spec_inv_rect_CProp3 :
  x1:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x2:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x3:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x4:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Hterm:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) ->
  P:(_z1476:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) -> pts.U pts.var) ->
  _H1:(x_847:(pts.El pts.var (matita_arithmetics_nat.lt x4 x2)) ->
       x_846:(pts.El
                pts.var
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   x1
                   (matita_arithmetics_nat.plus (matita_arithmetics_nat.times x3 x2) x4))) ->
       _z1477:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    (div_mod_spec x1 x2 x3 x4)
                    Hterm
                    (div_mod_spec_intro x1 x2 x3 x4 x_847 x_846))) ->
       pts.El pts.var (P (div_mod_spec_intro x1 x2 x3 x4 x_847 x_846))) ->
  pts.El pts.var (P Hterm)
  :=
  x1:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x2:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x3:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x4:(pts.El pts.var matita_arithmetics_nat.nat) =>
  Hterm:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) =>
  P:(_z1476:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) -> pts.U pts.var) =>
  H1:(x_847:(pts.El pts.var (matita_arithmetics_nat.lt x4 x2)) ->
      x_846:(pts.El
               pts.var
               (matita_basics_logic.eq
                  matita_arithmetics_nat.nat
                  x1
                  (matita_arithmetics_nat.plus (matita_arithmetics_nat.times x3 x2) x4))) ->
      _z1477:(pts.El
                pts.var
                (matita_basics_logic.eq
                   (div_mod_spec x1 x2 x3 x4)
                   Hterm
                   (div_mod_spec_intro x1 x2 x3 x4 x_847 x_846))) ->
      pts.El pts.var (P (div_mod_spec_intro x1 x2 x3 x4 x_847 x_846))) =>
  div_mod_spec_rect_CProp3
    x1
    x2
    x3
    x4
    (_x_845:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) =>
     pts.Prod
       pts.var
       pts.var
       (matita_basics_logic.eq (div_mod_spec x1 x2 x3 x4) Hterm _x_845)
       (_z1477:(pts.El pts.var (matita_basics_logic.eq (div_mod_spec x1 x2 x3 x4) Hterm _x_845)) =>
        P _x_845))
    H1
    Hterm
    (matita_basics_logic.refl (div_mod_spec x1 x2 x3 x4) Hterm).

def div_mod_spec_inv_rect_CProp2 :
  x1:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x2:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x3:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x4:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Hterm:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) ->
  P:(_z1482:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) -> pts.U pts.var) ->
  _H1:(x_851:(pts.El pts.var (matita_arithmetics_nat.lt x4 x2)) ->
       x_850:(pts.El
                pts.var
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   x1
                   (matita_arithmetics_nat.plus (matita_arithmetics_nat.times x3 x2) x4))) ->
       _z1483:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    (div_mod_spec x1 x2 x3 x4)
                    Hterm
                    (div_mod_spec_intro x1 x2 x3 x4 x_851 x_850))) ->
       pts.El pts.var (P (div_mod_spec_intro x1 x2 x3 x4 x_851 x_850))) ->
  pts.El pts.var (P Hterm)
  :=
  x1:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x2:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x3:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x4:(pts.El pts.var matita_arithmetics_nat.nat) =>
  Hterm:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) =>
  P:(_z1482:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) -> pts.U pts.var) =>
  H1:(x_851:(pts.El pts.var (matita_arithmetics_nat.lt x4 x2)) ->
      x_850:(pts.El
               pts.var
               (matita_basics_logic.eq
                  matita_arithmetics_nat.nat
                  x1
                  (matita_arithmetics_nat.plus (matita_arithmetics_nat.times x3 x2) x4))) ->
      _z1483:(pts.El
                pts.var
                (matita_basics_logic.eq
                   (div_mod_spec x1 x2 x3 x4)
                   Hterm
                   (div_mod_spec_intro x1 x2 x3 x4 x_851 x_850))) ->
      pts.El pts.var (P (div_mod_spec_intro x1 x2 x3 x4 x_851 x_850))) =>
  div_mod_spec_rect_CProp2
    x1
    x2
    x3
    x4
    (_x_849:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) =>
     pts.Prod
       pts.var
       pts.var
       (matita_basics_logic.eq (div_mod_spec x1 x2 x3 x4) Hterm _x_849)
       (_z1483:(pts.El pts.var (matita_basics_logic.eq (div_mod_spec x1 x2 x3 x4) Hterm _x_849)) =>
        P _x_849))
    H1
    Hterm
    (matita_basics_logic.refl (div_mod_spec x1 x2 x3 x4) Hterm).

def div_mod_spec_inv_rect_CProp1 :
  x1:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x2:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x3:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x4:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Hterm:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) ->
  P:(_z1488:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) -> pts.U pts.var) ->
  _H1:(x_855:(pts.El pts.var (matita_arithmetics_nat.lt x4 x2)) ->
       x_854:(pts.El
                pts.var
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   x1
                   (matita_arithmetics_nat.plus (matita_arithmetics_nat.times x3 x2) x4))) ->
       _z1489:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    (div_mod_spec x1 x2 x3 x4)
                    Hterm
                    (div_mod_spec_intro x1 x2 x3 x4 x_855 x_854))) ->
       pts.El pts.var (P (div_mod_spec_intro x1 x2 x3 x4 x_855 x_854))) ->
  pts.El pts.var (P Hterm)
  :=
  x1:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x2:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x3:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x4:(pts.El pts.var matita_arithmetics_nat.nat) =>
  Hterm:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) =>
  P:(_z1488:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) -> pts.U pts.var) =>
  H1:(x_855:(pts.El pts.var (matita_arithmetics_nat.lt x4 x2)) ->
      x_854:(pts.El
               pts.var
               (matita_basics_logic.eq
                  matita_arithmetics_nat.nat
                  x1
                  (matita_arithmetics_nat.plus (matita_arithmetics_nat.times x3 x2) x4))) ->
      _z1489:(pts.El
                pts.var
                (matita_basics_logic.eq
                   (div_mod_spec x1 x2 x3 x4)
                   Hterm
                   (div_mod_spec_intro x1 x2 x3 x4 x_855 x_854))) ->
      pts.El pts.var (P (div_mod_spec_intro x1 x2 x3 x4 x_855 x_854))) =>
  div_mod_spec_rect_CProp1
    x1
    x2
    x3
    x4
    (_x_853:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) =>
     pts.Prod
       pts.var
       pts.var
       (matita_basics_logic.eq (div_mod_spec x1 x2 x3 x4) Hterm _x_853)
       (_z1489:(pts.El pts.var (matita_basics_logic.eq (div_mod_spec x1 x2 x3 x4) Hterm _x_853)) =>
        P _x_853))
    H1
    Hterm
    (matita_basics_logic.refl (div_mod_spec x1 x2 x3 x4) Hterm).

def div_mod_spec_inv_rect_CProp0 :
  x1:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x2:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x3:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x4:(pts.El pts.var matita_arithmetics_nat.nat) ->
  Hterm:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) ->
  P:(_z1494:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) -> pts.U pts.var) ->
  _H1:(x_859:(pts.El pts.var (matita_arithmetics_nat.lt x4 x2)) ->
       x_858:(pts.El
                pts.var
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   x1
                   (matita_arithmetics_nat.plus (matita_arithmetics_nat.times x3 x2) x4))) ->
       _z1495:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    (div_mod_spec x1 x2 x3 x4)
                    Hterm
                    (div_mod_spec_intro x1 x2 x3 x4 x_859 x_858))) ->
       pts.El pts.var (P (div_mod_spec_intro x1 x2 x3 x4 x_859 x_858))) ->
  pts.El pts.var (P Hterm)
  :=
  x1:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x2:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x3:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x4:(pts.El pts.var matita_arithmetics_nat.nat) =>
  Hterm:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) =>
  P:(_z1494:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) -> pts.U pts.var) =>
  H1:(x_859:(pts.El pts.var (matita_arithmetics_nat.lt x4 x2)) ->
      x_858:(pts.El
               pts.var
               (matita_basics_logic.eq
                  matita_arithmetics_nat.nat
                  x1
                  (matita_arithmetics_nat.plus (matita_arithmetics_nat.times x3 x2) x4))) ->
      _z1495:(pts.El
                pts.var
                (matita_basics_logic.eq
                   (div_mod_spec x1 x2 x3 x4)
                   Hterm
                   (div_mod_spec_intro x1 x2 x3 x4 x_859 x_858))) ->
      pts.El pts.var (P (div_mod_spec_intro x1 x2 x3 x4 x_859 x_858))) =>
  div_mod_spec_rect_CProp0
    x1
    x2
    x3
    x4
    (_x_857:(pts.El pts.var (div_mod_spec x1 x2 x3 x4)) =>
     pts.Prod
       pts.var
       pts.var
       (matita_basics_logic.eq (div_mod_spec x1 x2 x3 x4) Hterm _x_857)
       (_z1495:(pts.El pts.var (matita_basics_logic.eq (div_mod_spec x1 x2 x3 x4) Hterm _x_857)) =>
        P _x_857))
    H1
    Hterm
    (matita_basics_logic.refl (div_mod_spec x1 x2 x3 x4) Hterm).

def div_mod_spec_discr :
  a1:(pts.El pts.var matita_arithmetics_nat.nat) ->
  a2:(pts.El pts.var matita_arithmetics_nat.nat) ->
  a3:(pts.El pts.var matita_arithmetics_nat.nat) ->
  a4:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x:(pts.El pts.var (div_mod_spec a1 a2 a3 a4)) ->
  y:(pts.El pts.var (div_mod_spec a1 a2 a3 a4)) ->
  _e:(pts.El pts.var (matita_basics_logic.eq (div_mod_spec a1 a2 a3 a4) x y)) ->
  pts.El
    pts.var
    (match_div_mod_spec
       a1
       a2
       a3
       a4
       pts.var
       (__:(pts.El pts.var (div_mod_spec a1 a2 a3 a4)) => pts.u pts.var)
       (t0:(pts.El pts.var (matita_arithmetics_nat.lt a4 a2)) =>
        t1:(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 a1
                 (matita_arithmetics_nat.plus (matita_arithmetics_nat.times a3 a2) a4))) =>
        match_div_mod_spec
          a1
          a2
          a3
          a4
          pts.var
          (__:(pts.El pts.var (div_mod_spec a1 a2 a3 a4)) => pts.u pts.var)
          (u0:(pts.El pts.var (matita_arithmetics_nat.lt a4 a2)) =>
           u1:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    matita_arithmetics_nat.nat
                    a1
                    (matita_arithmetics_nat.plus (matita_arithmetics_nat.times a3 a2) a4))) =>
           pts.Prod
             pts.var
             pts.var
             (pts.u pts.var)
             (P:(pts.U pts.var) =>
              pts.Prod
                pts.var
                pts.var
                (pts.Prod
                   pts.var
                   pts.var
                   (matita_basics_logic.eq
                      (matita_arithmetics_nat.lt a4 a2)
                      (matita_basics_logic.R0 (matita_arithmetics_nat.lt a4 a2) t0)
                      u0)
                   (e0:(pts.El
                          pts.var
                          (matita_basics_logic.eq
                             (matita_arithmetics_nat.lt a4 a2)
                             (matita_basics_logic.R0 (matita_arithmetics_nat.lt a4 a2) t0)
                             u0)) =>
                    pts.Prod
                      pts.var
                      pts.var
                      (matita_basics_logic.eq
                         (matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            a1
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.times a3 a2)
                               a4))
                         (matita_basics_logic.R1
                            (matita_arithmetics_nat.lt a4 a2)
                            t0
                            (x_19:(pts.El pts.var (matita_arithmetics_nat.lt a4 a2)) =>
                             _x_20:(pts.El
                                      pts.var
                                      (matita_basics_logic.eq
                                         (matita_arithmetics_nat.lt a4 a2)
                                         t0
                                         x_19)) =>
                             matita_basics_logic.eq
                               matita_arithmetics_nat.nat
                               a1
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.times a3 a2)
                                  a4))
                            t1
                            u0
                            e0)
                         u1)
                      (_e1:(pts.El
                              pts.var
                              (matita_basics_logic.eq
                                 (matita_basics_logic.eq
                                    matita_arithmetics_nat.nat
                                    a1
                                    (matita_arithmetics_nat.plus
                                       (matita_arithmetics_nat.times a3 a2)
                                       a4))
                                 (matita_basics_logic.R1
                                    (matita_arithmetics_nat.lt a4 a2)
                                    t0
                                    (x_19:(pts.El
                                             pts.var
                                             (matita_arithmetics_nat.lt a4 a2)) =>
                                     _x_20:(pts.El
                                              pts.var
                                              (matita_basics_logic.eq
                                                 (matita_arithmetics_nat.lt a4 a2)
                                                 t0
                                                 x_19)) =>
                                     matita_basics_logic.eq
                                       matita_arithmetics_nat.nat
                                       a1
                                       (matita_arithmetics_nat.plus
                                          (matita_arithmetics_nat.times a3 a2)
                                          a4))
                                    t1
                                    u0
                                    e0)
                                 u1)) =>
                       P)))
                (_z53:(e0:(pts.El
                             pts.var
                             (matita_basics_logic.eq
                                (matita_arithmetics_nat.lt a4 a2)
                                (matita_basics_logic.R0 (matita_arithmetics_nat.lt a4 a2) t0)
                                u0)) ->
                       _e1:(pts.El
                              pts.var
                              (matita_basics_logic.eq
                                 (matita_basics_logic.eq
                                    matita_arithmetics_nat.nat
                                    a1
                                    (matita_arithmetics_nat.plus
                                       (matita_arithmetics_nat.times a3 a2)
                                       a4))
                                 (matita_basics_logic.R1
                                    (matita_arithmetics_nat.lt a4 a2)
                                    t0
                                    (x_19:(pts.El pts.var (matita_arithmetics_nat.lt a4 a2)) =>
                                     _x_20:(pts.El
                                              pts.var
                                              (matita_basics_logic.eq
                                                 (matita_arithmetics_nat.lt a4 a2)
                                                 t0
                                                 x_19)) =>
                                     matita_basics_logic.eq
                                       matita_arithmetics_nat.nat
                                       a1
                                       (matita_arithmetics_nat.plus
                                          (matita_arithmetics_nat.times a3 a2)
                                          a4))
                                    t1
                                    u0
                                    e0)
                                 u1)) ->
                       pts.El pts.var P) =>
                 P)))
          y)
       x)
  :=
  a1:(pts.El pts.var matita_arithmetics_nat.nat) =>
  a2:(pts.El pts.var matita_arithmetics_nat.nat) =>
  a3:(pts.El pts.var matita_arithmetics_nat.nat) =>
  a4:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x:(pts.El pts.var (div_mod_spec a1 a2 a3 a4)) =>
  y:(pts.El pts.var (div_mod_spec a1 a2 a3 a4)) =>
  Deq:(pts.El pts.var (matita_basics_logic.eq (div_mod_spec a1 a2 a3 a4) x y)) =>
  matita_basics_logic.eq_rect_Type2
    (div_mod_spec a1 a2 a3 a4)
    x
    (x_13:(pts.El pts.var (div_mod_spec a1 a2 a3 a4)) =>
     _x_14:(pts.El pts.var (matita_basics_logic.eq (div_mod_spec a1 a2 a3 a4) x x_13)) =>
     match_div_mod_spec
       a1
       a2
       a3
       a4
       pts.var
       (__:(pts.El pts.var (div_mod_spec a1 a2 a3 a4)) => pts.u pts.var)
       (t0:(pts.El pts.var (matita_arithmetics_nat.lt a4 a2)) =>
        t1:(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 a1
                 (matita_arithmetics_nat.plus (matita_arithmetics_nat.times a3 a2) a4))) =>
        match_div_mod_spec
          a1
          a2
          a3
          a4
          pts.var
          (__:(pts.El pts.var (div_mod_spec a1 a2 a3 a4)) => pts.u pts.var)
          (u0:(pts.El pts.var (matita_arithmetics_nat.lt a4 a2)) =>
           u1:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    matita_arithmetics_nat.nat
                    a1
                    (matita_arithmetics_nat.plus (matita_arithmetics_nat.times a3 a2) a4))) =>
           pts.Prod
             pts.var
             pts.var
             (pts.u pts.var)
             (P:(pts.U pts.var) =>
              pts.Prod
                pts.var
                pts.var
                (pts.Prod
                   pts.var
                   pts.var
                   (matita_basics_logic.eq
                      (matita_arithmetics_nat.lt a4 a2)
                      (matita_basics_logic.R0 (matita_arithmetics_nat.lt a4 a2) t0)
                      u0)
                   (e0:(pts.El
                          pts.var
                          (matita_basics_logic.eq
                             (matita_arithmetics_nat.lt a4 a2)
                             (matita_basics_logic.R0 (matita_arithmetics_nat.lt a4 a2) t0)
                             u0)) =>
                    pts.Prod
                      pts.var
                      pts.var
                      (matita_basics_logic.eq
                         (matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            a1
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.times a3 a2)
                               a4))
                         (matita_basics_logic.R1
                            (matita_arithmetics_nat.lt a4 a2)
                            t0
                            (x_19:(pts.El pts.var (matita_arithmetics_nat.lt a4 a2)) =>
                             _x_20:(pts.El
                                      pts.var
                                      (matita_basics_logic.eq
                                         (matita_arithmetics_nat.lt a4 a2)
                                         t0
                                         x_19)) =>
                             matita_basics_logic.eq
                               matita_arithmetics_nat.nat
                               a1
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.times a3 a2)
                                  a4))
                            t1
                            u0
                            e0)
                         u1)
                      (_e1:(pts.El
                              pts.var
                              (matita_basics_logic.eq
                                 (matita_basics_logic.eq
                                    matita_arithmetics_nat.nat
                                    a1
                                    (matita_arithmetics_nat.plus
                                       (matita_arithmetics_nat.times a3 a2)
                                       a4))
                                 (matita_basics_logic.R1
                                    (matita_arithmetics_nat.lt a4 a2)
                                    t0
                                    (x_19:(pts.El
                                             pts.var
                                             (matita_arithmetics_nat.lt a4 a2)) =>
                                     _x_20:(pts.El
                                              pts.var
                                              (matita_basics_logic.eq
                                                 (matita_arithmetics_nat.lt a4 a2)
                                                 t0
                                                 x_19)) =>
                                     matita_basics_logic.eq
                                       matita_arithmetics_nat.nat
                                       a1
                                       (matita_arithmetics_nat.plus
                                          (matita_arithmetics_nat.times a3 a2)
                                          a4))
                                    t1
                                    u0
                                    e0)
                                 u1)) =>
                       P)))
                (_z53:(e0:(pts.El
                             pts.var
                             (matita_basics_logic.eq
                                (matita_arithmetics_nat.lt a4 a2)
                                (matita_basics_logic.R0 (matita_arithmetics_nat.lt a4 a2) t0)
                                u0)) ->
                       _e1:(pts.El
                              pts.var
                              (matita_basics_logic.eq
                                 (matita_basics_logic.eq
                                    matita_arithmetics_nat.nat
                                    a1
                                    (matita_arithmetics_nat.plus
                                       (matita_arithmetics_nat.times a3 a2)
                                       a4))
                                 (matita_basics_logic.R1
                                    (matita_arithmetics_nat.lt a4 a2)
                                    t0
                                    (x_19:(pts.El pts.var (matita_arithmetics_nat.lt a4 a2)) =>
                                     _x_20:(pts.El
                                              pts.var
                                              (matita_basics_logic.eq
                                                 (matita_arithmetics_nat.lt a4 a2)
                                                 t0
                                                 x_19)) =>
                                     matita_basics_logic.eq
                                       matita_arithmetics_nat.nat
                                       a1
                                       (matita_arithmetics_nat.plus
                                          (matita_arithmetics_nat.times a3 a2)
                                          a4))
                                    t1
                                    u0
                                    e0)
                                 u1)) ->
                       pts.El pts.var P) =>
                 P)))
          x_13)
       x)
    (match_div_mod_spec
       a1
       a2
       a3
       a4
       pts.var
       (__:(pts.El pts.var (div_mod_spec a1 a2 a3 a4)) =>
        match_div_mod_spec
          a1
          a2
          a3
          a4
          pts.var
          (_0:(pts.El pts.var (div_mod_spec a1 a2 a3 a4)) => pts.u pts.var)
          (t0:(pts.El pts.var (matita_arithmetics_nat.lt a4 a2)) =>
           t1:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    matita_arithmetics_nat.nat
                    a1
                    (matita_arithmetics_nat.plus (matita_arithmetics_nat.times a3 a2) a4))) =>
           match_div_mod_spec
             a1
             a2
             a3
             a4
             pts.var
             (_0:(pts.El pts.var (div_mod_spec a1 a2 a3 a4)) => pts.u pts.var)
             (u0:(pts.El pts.var (matita_arithmetics_nat.lt a4 a2)) =>
              u1:(pts.El
                    pts.var
                    (matita_basics_logic.eq
                       matita_arithmetics_nat.nat
                       a1
                       (matita_arithmetics_nat.plus (matita_arithmetics_nat.times a3 a2) a4))) =>
              pts.Prod
                pts.var
                pts.var
                (pts.u pts.var)
                (P:(pts.U pts.var) =>
                 pts.Prod
                   pts.var
                   pts.var
                   (pts.Prod
                      pts.var
                      pts.var
                      (matita_basics_logic.eq
                         (matita_arithmetics_nat.lt a4 a2)
                         (matita_basics_logic.R0 (matita_arithmetics_nat.lt a4 a2) t0)
                         u0)
                      (e0:(pts.El
                             pts.var
                             (matita_basics_logic.eq
                                (matita_arithmetics_nat.lt a4 a2)
                                (matita_basics_logic.R0
                                   (matita_arithmetics_nat.lt a4 a2)
                                   t0)
                                u0)) =>
                       pts.Prod
                         pts.var
                         pts.var
                         (matita_basics_logic.eq
                            (matita_basics_logic.eq
                               matita_arithmetics_nat.nat
                               a1
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.times a3 a2)
                                  a4))
                            (matita_basics_logic.R1
                               (matita_arithmetics_nat.lt a4 a2)
                               t0
                               (x_19:(pts.El pts.var (matita_arithmetics_nat.lt a4 a2)) =>
                                _x_20:(pts.El
                                         pts.var
                                         (matita_basics_logic.eq
                                            (matita_arithmetics_nat.lt a4 a2)
                                            t0
                                            x_19)) =>
                                matita_basics_logic.eq
                                  matita_arithmetics_nat.nat
                                  a1
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.times a3 a2)
                                     a4))
                               t1
                               u0
                               e0)
                            u1)
                         (_e1:(pts.El
                                 pts.var
                                 (matita_basics_logic.eq
                                    (matita_basics_logic.eq
                                       matita_arithmetics_nat.nat
                                       a1
                                       (matita_arithmetics_nat.plus
                                          (matita_arithmetics_nat.times a3 a2)
                                          a4))
                                    (matita_basics_logic.R1
                                       (matita_arithmetics_nat.lt a4 a2)
                                       t0
                                       (x_19:(pts.El
                                                pts.var
                                                (matita_arithmetics_nat.lt a4 a2)) =>
                                        _x_20:(pts.El
                                                 pts.var
                                                 (matita_basics_logic.eq
                                                    (matita_arithmetics_nat.lt
                                                       a4
                                                       a2)
                                                    t0
                                                    x_19)) =>
                                        matita_basics_logic.eq
                                          matita_arithmetics_nat.nat
                                          a1
                                          (matita_arithmetics_nat.plus
                                             (matita_arithmetics_nat.times a3 a2)
                                             a4))
                                       t1
                                       u0
                                       e0)
                                    u1)) =>
                          P)))
                   (_z53:(e0:(pts.El
                                pts.var
                                (matita_basics_logic.eq
                                   (matita_arithmetics_nat.lt a4 a2)
                                   (matita_basics_logic.R0
                                      (matita_arithmetics_nat.lt a4 a2)
                                      t0)
                                   u0)) ->
                          _e1:(pts.El
                                 pts.var
                                 (matita_basics_logic.eq
                                    (matita_basics_logic.eq
                                       matita_arithmetics_nat.nat
                                       a1
                                       (matita_arithmetics_nat.plus
                                          (matita_arithmetics_nat.times a3 a2)
                                          a4))
                                    (matita_basics_logic.R1
                                       (matita_arithmetics_nat.lt a4 a2)
                                       t0
                                       (x_19:(pts.El
                                                pts.var
                                                (matita_arithmetics_nat.lt a4 a2)) =>
                                        _x_20:(pts.El
                                                 pts.var
                                                 (matita_basics_logic.eq
                                                    (matita_arithmetics_nat.lt a4 a2)
                                                    t0
                                                    x_19)) =>
                                        matita_basics_logic.eq
                                          matita_arithmetics_nat.nat
                                          a1
                                          (matita_arithmetics_nat.plus
                                             (matita_arithmetics_nat.times a3 a2)
                                             a4))
                                       t1
                                       u0
                                       e0)
                                    u1)) ->
                          pts.El pts.var P) =>
                    P)))
             __)
          __)
       (a0:(pts.El pts.var (matita_arithmetics_nat.lt a4 a2)) =>
        a10:(pts.El
               pts.var
               (matita_basics_logic.eq
                  matita_arithmetics_nat.nat
                  a1
                  (matita_arithmetics_nat.plus (matita_arithmetics_nat.times a3 a2) a4))) =>
        P:(pts.U pts.var) =>
        DH:(e0:(pts.El
                  pts.var
                  (matita_basics_logic.eq
                     (matita_arithmetics_nat.lt a4 a2)
                     (matita_basics_logic.R0 (matita_arithmetics_nat.lt a4 a2) a0)
                     a0)) ->
            _e1:(pts.El
                   pts.var
                   (matita_basics_logic.eq
                      (matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         a1
                         (matita_arithmetics_nat.plus (matita_arithmetics_nat.times a3 a2) a4))
                      (matita_basics_logic.R1
                         (matita_arithmetics_nat.lt a4 a2)
                         a0
                         (x_19:(pts.El pts.var (matita_arithmetics_nat.lt a4 a2)) =>
                          _x_20:(pts.El
                                   pts.var
                                   (matita_basics_logic.eq
                                      (matita_arithmetics_nat.lt a4 a2)
                                      a0
                                      x_19)) =>
                          matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            a1
                            (matita_arithmetics_nat.plus (matita_arithmetics_nat.times a3 a2) a4))
                         a10
                         a0
                         e0)
                      a10)) ->
            pts.El pts.var P) =>
        DH
          (matita_basics_logic.refl
             (matita_arithmetics_nat.lt a4 a2)
             (matita_basics_logic.R0 (matita_arithmetics_nat.lt a4 a2) a0))
          (matita_basics_logic.refl
             (matita_basics_logic.eq
                matita_arithmetics_nat.nat
                a1
                (matita_arithmetics_nat.plus (matita_arithmetics_nat.times a3 a2) a4))
             (matita_basics_logic.R1
                (matita_arithmetics_nat.lt a4 a2)
                a0
                (x_19:(pts.El pts.var (matita_arithmetics_nat.lt a4 a2)) =>
                 _x_20:(pts.El
                          pts.var
                          (matita_basics_logic.eq (matita_arithmetics_nat.lt a4 a2) a0 x_19)) =>
                 matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   a1
                   (matita_arithmetics_nat.plus (matita_arithmetics_nat.times a3 a2) a4))
                a10
                a0
                (matita_basics_logic.refl
                   (matita_arithmetics_nat.lt a4 a2)
                   (matita_basics_logic.R0 (matita_arithmetics_nat.lt a4 a2) a0)))))
       x)
    y
    Deq.

def div_mod_spec_to_not_eq_O :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (div_mod_spec n m q r)) ->
  pts.El
    pts.var
    (matita_basics_logic.Not
       (matita_basics_logic.eq matita_arithmetics_nat.nat m matita_arithmetics_nat.O))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  q:(pts.El pts.var matita_arithmetics_nat.nat) =>
  r:(pts.El pts.var matita_arithmetics_nat.nat) =>
  _clearme:(pts.El pts.var (div_mod_spec n m q r)) =>
  match_div_mod_spec
    n
    m
    q
    r
    pts.var
    (__:(pts.El pts.var (div_mod_spec n m q r)) =>
     matita_basics_logic.Not
       (matita_basics_logic.eq matita_arithmetics_nat.nat m matita_arithmetics_nat.O))
    (auto:(pts.El pts.var (matita_arithmetics_nat.lt r m)) =>
     auto':(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 n
                 (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q m) r))) =>
     matita_basics_logic.not_to_not
       (matita_basics_logic.eq matita_arithmetics_nat.nat m matita_arithmetics_nat.O)
       (matita_arithmetics_nat.le (matita_arithmetics_nat.S n) matita_arithmetics_nat.O)
       (auto'':(pts.El
                  pts.var
                  (matita_basics_logic.eq matita_arithmetics_nat.nat m matita_arithmetics_nat.O)) =>
        matita_basics_logic.eq_coerc
          (matita_arithmetics_nat.le (matita_arithmetics_nat.S r) m)
          (matita_arithmetics_nat.le (matita_arithmetics_nat.S n) matita_arithmetics_nat.O)
          auto
          (matita_basics_logic.rewrite_l
             matita_arithmetics_nat.nat
             n
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq
                (pts.u pts.var)
                (matita_arithmetics_nat.le (matita_arithmetics_nat.S __) m)
                (matita_arithmetics_nat.le (matita_arithmetics_nat.S n) matita_arithmetics_nat.O))
             (matita_basics_logic.rewrite_l
                matita_arithmetics_nat.nat
                m
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   (pts.u pts.var)
                   (matita_arithmetics_nat.le (matita_arithmetics_nat.S n) m)
                   (matita_arithmetics_nat.le (matita_arithmetics_nat.S n) __))
                (matita_basics_logic.refl
                   (pts.u pts.var)
                   (matita_arithmetics_nat.le (matita_arithmetics_nat.S n) m))
                matita_arithmetics_nat.O
                auto'')
             r
             (matita_basics_logic.rewrite_r
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.plus m r)
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq matita_arithmetics_nat.nat n __)
                (matita_basics_logic.rewrite_r
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.times m q)
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      n
                      (matita_arithmetics_nat.plus __ r))
                   (matita_basics_logic.rewrite_l
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.times q m)
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         n
                         (matita_arithmetics_nat.plus __ r))
                      auto'
                      (matita_arithmetics_nat.times m q)
                      (matita_arithmetics_nat.commutative_times q m))
                   m
                   (matita_basics_logic.rewrite_r
                      matita_arithmetics_nat.nat
                      matita_arithmetics_nat.O
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         m
                         (matita_arithmetics_nat.times __ q))
                      (matita_basics_logic.rewrite_r
                         matita_arithmetics_nat.nat
                         matita_arithmetics_nat.O
                         (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            __
                            (matita_arithmetics_nat.times matita_arithmetics_nat.O q))
                         (matita_arithmetics_nat.times_O_n q)
                         m
                         auto'')
                      m
                      auto''))
                r
                (matita_basics_logic.rewrite_r
                   matita_arithmetics_nat.nat
                   matita_arithmetics_nat.O
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      r
                      (matita_arithmetics_nat.plus __ r))
                   (matita_arithmetics_nat.plus_O_n r)
                   m
                   auto''))))
       (matita_arithmetics_nat.not_le_Sn_O n))
    _clearme.

def div_mod_spec_div_mod :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) ->
  pts.El pts.var (div_mod_spec n m (div n m) (mod n m))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posm:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) =>
  div_mod_spec_intro
    n
    m
    (div n m)
    (mod n m)
    (lt_mod_m_m n m posm)
    (matita_basics_logic.rewrite_r
       matita_arithmetics_nat.nat
       (matita_arithmetics_nat.times m (div n m))
       (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
        matita_basics_logic.eq
          matita_arithmetics_nat.nat
          n
          (matita_arithmetics_nat.plus __ (mod n m)))
       (matita_basics_logic.rewrite_r
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.plus (mod n m) (matita_arithmetics_nat.times m (div n m)))
          (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
           matita_basics_logic.eq matita_arithmetics_nat.nat n __)
          (matita_basics_logic.rewrite_l
             matita_arithmetics_nat.nat
             n
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq matita_arithmetics_nat.nat n __)
             (matita_basics_logic.refl matita_arithmetics_nat.nat n)
             (matita_arithmetics_nat.plus (mod n m) (matita_arithmetics_nat.times m (div n m)))
             (matita_basics_logic.rewrite_l
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.plus (matita_arithmetics_nat.times m (div n m)) (mod n m))
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq matita_arithmetics_nat.nat n __)
                (matita_basics_logic.rewrite_l
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.times (div n m) m)
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      n
                      (matita_arithmetics_nat.plus __ (mod n m)))
                   (div_mod n m)
                   (matita_arithmetics_nat.times m (div n m))
                   (matita_arithmetics_nat.commutative_times (div n m) m))
                (matita_arithmetics_nat.plus (mod n m) (matita_arithmetics_nat.times m (div n m)))
                (matita_arithmetics_nat.commutative_plus
                   (matita_arithmetics_nat.times m (div n m))
                   (mod n m))))
          (matita_arithmetics_nat.plus (matita_arithmetics_nat.times m (div n m)) (mod n m))
          (matita_arithmetics_nat.commutative_plus
             (matita_arithmetics_nat.times m (div n m))
             (mod n m)))
       (matita_arithmetics_nat.times (div n m) m)
       (matita_arithmetics_nat.commutative_times (div n m) m)).

def let_clause_1078 :
  a:(pts.El pts.var matita_arithmetics_nat.nat) ->
  b:(pts.El pts.var matita_arithmetics_nat.nat) ->
  q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  q1:(pts.El pts.var matita_arithmetics_nat.nat) ->
  r1:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _clearme:(pts.El pts.var (div_mod_spec a b q r)) ->
  ltrb:(pts.El pts.var (matita_arithmetics_nat.lt r b)) ->
  spec:(pts.El
          pts.var
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             a
             (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q b) r))) ->
  _clearme0:(pts.El pts.var (div_mod_spec a b q1 r1)) ->
  ltr1b:(pts.El pts.var (matita_arithmetics_nat.lt r1 b)) ->
  spec1:(pts.El
           pts.var
           (matita_basics_logic.eq
              matita_arithmetics_nat.nat
              a
              (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q1 b) r1))) ->
  leqq1:(pts.El pts.var (matita_arithmetics_nat.le q q1)) ->
  ltqq1:(pts.El pts.var (matita_arithmetics_nat.lt q q1)) ->
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       a
       (matita_arithmetics_nat.plus r (matita_arithmetics_nat.times b q)))
  :=
  a:(pts.El pts.var matita_arithmetics_nat.nat) =>
  b:(pts.El pts.var matita_arithmetics_nat.nat) =>
  q:(pts.El pts.var matita_arithmetics_nat.nat) =>
  r:(pts.El pts.var matita_arithmetics_nat.nat) =>
  q1:(pts.El pts.var matita_arithmetics_nat.nat) =>
  r1:(pts.El pts.var matita_arithmetics_nat.nat) =>
  _clearme:(pts.El pts.var (div_mod_spec a b q r)) =>
  ltrb:(pts.El pts.var (matita_arithmetics_nat.lt r b)) =>
  spec:(pts.El
          pts.var
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             a
             (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q b) r))) =>
  _clearme0:(pts.El pts.var (div_mod_spec a b q1 r1)) =>
  ltr1b:(pts.El pts.var (matita_arithmetics_nat.lt r1 b)) =>
  spec1:(pts.El
           pts.var
           (matita_basics_logic.eq
              matita_arithmetics_nat.nat
              a
              (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q1 b) r1))) =>
  leqq1:(pts.El pts.var (matita_arithmetics_nat.le q q1)) =>
  ltqq1:(pts.El pts.var (matita_arithmetics_nat.lt q q1)) =>
  matita_basics_logic.rewrite_l
    matita_arithmetics_nat.nat
    (matita_arithmetics_nat.plus (matita_arithmetics_nat.times b q) r)
    (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
     matita_basics_logic.eq matita_arithmetics_nat.nat a __)
    (matita_basics_logic.rewrite_l
       matita_arithmetics_nat.nat
       (matita_arithmetics_nat.times q b)
       (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
        matita_basics_logic.eq matita_arithmetics_nat.nat a (matita_arithmetics_nat.plus __ r))
       spec
       (matita_arithmetics_nat.times b q)
       (matita_arithmetics_nat.commutative_times q b))
    (matita_arithmetics_nat.plus r (matita_arithmetics_nat.times b q))
    (matita_arithmetics_nat.commutative_plus (matita_arithmetics_nat.times b q) r).

def let_clause_1062 :
  a:(pts.El pts.var matita_arithmetics_nat.nat) ->
  b:(pts.El pts.var matita_arithmetics_nat.nat) ->
  q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  q1:(pts.El pts.var matita_arithmetics_nat.nat) ->
  r1:(pts.El pts.var matita_arithmetics_nat.nat) ->
  _clearme:(pts.El pts.var (div_mod_spec a b q r)) ->
  ltrb:(pts.El pts.var (matita_arithmetics_nat.lt r b)) ->
  spec:(pts.El
          pts.var
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             a
             (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q b) r))) ->
  _clearme0:(pts.El pts.var (div_mod_spec a b q1 r1)) ->
  ltr1b:(pts.El pts.var (matita_arithmetics_nat.lt r1 b)) ->
  spec1:(pts.El
           pts.var
           (matita_basics_logic.eq
              matita_arithmetics_nat.nat
              a
              (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q1 b) r1))) ->
  leqq1:(pts.El pts.var (matita_basics_logic.Not (matita_arithmetics_nat.le q q1))) ->
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       a
       (matita_arithmetics_nat.plus r1 (matita_arithmetics_nat.times b q1)))
  :=
  a:(pts.El pts.var matita_arithmetics_nat.nat) =>
  b:(pts.El pts.var matita_arithmetics_nat.nat) =>
  q:(pts.El pts.var matita_arithmetics_nat.nat) =>
  r:(pts.El pts.var matita_arithmetics_nat.nat) =>
  q1:(pts.El pts.var matita_arithmetics_nat.nat) =>
  r1:(pts.El pts.var matita_arithmetics_nat.nat) =>
  _clearme:(pts.El pts.var (div_mod_spec a b q r)) =>
  ltrb:(pts.El pts.var (matita_arithmetics_nat.lt r b)) =>
  spec:(pts.El
          pts.var
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             a
             (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q b) r))) =>
  _clearme0:(pts.El pts.var (div_mod_spec a b q1 r1)) =>
  ltr1b:(pts.El pts.var (matita_arithmetics_nat.lt r1 b)) =>
  spec1:(pts.El
           pts.var
           (matita_basics_logic.eq
              matita_arithmetics_nat.nat
              a
              (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q1 b) r1))) =>
  leqq1:(pts.El pts.var (matita_basics_logic.Not (matita_arithmetics_nat.le q q1))) =>
  matita_basics_logic.rewrite_l
    matita_arithmetics_nat.nat
    (matita_arithmetics_nat.plus (matita_arithmetics_nat.times b q1) r1)
    (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
     matita_basics_logic.eq matita_arithmetics_nat.nat a __)
    (matita_basics_logic.rewrite_l
       matita_arithmetics_nat.nat
       (matita_arithmetics_nat.times q1 b)
       (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
        matita_basics_logic.eq matita_arithmetics_nat.nat a (matita_arithmetics_nat.plus __ r1))
       spec1
       (matita_arithmetics_nat.times b q1)
       (matita_arithmetics_nat.commutative_times q1 b))
    (matita_arithmetics_nat.plus r1 (matita_arithmetics_nat.times b q1))
    (matita_arithmetics_nat.commutative_plus (matita_arithmetics_nat.times b q1) r1).

def div_mod_spec_to_eq :
  a:(pts.El pts.var matita_arithmetics_nat.nat) ->
  b:(pts.El pts.var matita_arithmetics_nat.nat) ->
  q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  q1:(pts.El pts.var matita_arithmetics_nat.nat) ->
  r1:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (div_mod_spec a b q r)) ->
  __1:(pts.El pts.var (div_mod_spec a b q1 r1)) ->
  pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat q q1)
  :=
  a:(pts.El pts.var matita_arithmetics_nat.nat) =>
  b:(pts.El pts.var matita_arithmetics_nat.nat) =>
  q:(pts.El pts.var matita_arithmetics_nat.nat) =>
  r:(pts.El pts.var matita_arithmetics_nat.nat) =>
  q1:(pts.El pts.var matita_arithmetics_nat.nat) =>
  r1:(pts.El pts.var matita_arithmetics_nat.nat) =>
  _clearme:(pts.El pts.var (div_mod_spec a b q r)) =>
  match_div_mod_spec
    a
    b
    q
    r
    pts.var
    (__:(pts.El pts.var (div_mod_spec a b q r)) =>
     pts.Prod
       pts.var
       pts.var
       (div_mod_spec a b q1 r1)
       (__1:(pts.El pts.var (div_mod_spec a b q1 r1)) =>
        matita_basics_logic.eq matita_arithmetics_nat.nat q q1))
    (ltrb:(pts.El pts.var (matita_arithmetics_nat.lt r b)) =>
     spec:(pts.El
             pts.var
             (matita_basics_logic.eq
                matita_arithmetics_nat.nat
                a
                (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q b) r))) =>
     _clearme0:(pts.El pts.var (div_mod_spec a b q1 r1)) =>
     match_div_mod_spec
       a
       b
       q1
       r1
       pts.var
       (__:(pts.El pts.var (div_mod_spec a b q1 r1)) =>
        matita_basics_logic.eq matita_arithmetics_nat.nat q q1)
       (ltr1b:(pts.El pts.var (matita_arithmetics_nat.lt r1 b)) =>
        spec1:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    matita_arithmetics_nat.nat
                    a
                    (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q1 b) r1))) =>
        matita_arithmetics_nat.leb_elim
          q
          q1
          (__:(pts.El pts.var matita_basics_bool.bool) =>
           matita_basics_logic.eq matita_arithmetics_nat.nat q q1)
          (leqq1:(pts.El pts.var (matita_arithmetics_nat.le q q1)) =>
           matita_basics_logic.Or_ind
             (matita_arithmetics_nat.lt q q1)
             (matita_basics_logic.eq matita_arithmetics_nat.nat q q1)
             (_x_170:(pts.El
                        pts.var
                        (matita_basics_logic.Or
                           (matita_arithmetics_nat.lt q q1)
                           (matita_basics_logic.eq matita_arithmetics_nat.nat q q1))) =>
              matita_basics_logic.eq matita_arithmetics_nat.nat q q1)
             (ltqq1:(pts.El pts.var (matita_arithmetics_nat.lt q q1)) =>
              matita_basics_logic.False_ind
                (_x_66:(pts.El pts.var matita_basics_logic.False) =>
                 matita_basics_logic.eq matita_arithmetics_nat.nat q q1)
                (matita_basics_logic.absurd
                   (matita_arithmetics_nat.le (matita_arithmetics_nat.S a) a)
                   (matita_arithmetics_nat.lt_to_le_to_lt
                      a
                      (matita_arithmetics_nat.times (matita_arithmetics_nat.S q) b)
                      a
                      (matita_basics_logic.eq_ind_r
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q b) r)
                         (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          __:(pts.El
                                pts.var
                                (matita_basics_logic.eq
                                   matita_arithmetics_nat.nat
                                   x
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times q b)
                                      r))) =>
                          matita_arithmetics_nat.lt
                            x
                            (matita_arithmetics_nat.times (matita_arithmetics_nat.S q) b))
                         (matita_basics_logic.eq_coerc
                            (matita_arithmetics_nat.lt
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.times q b)
                                  r)
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.times q b)
                                  b))
                            (matita_arithmetics_nat.lt
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.times q b)
                                  r)
                               (matita_arithmetics_nat.times (matita_arithmetics_nat.S q) b))
                            (matita_arithmetics_nat.monotonic_lt_plus_r
                               (matita_arithmetics_nat.times q b)
                               r
                               b
                               ltrb)
                            (matita_basics_logic.rewrite_r
                               matita_arithmetics_nat.nat
                               (matita_arithmetics_nat.times b q)
                               (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                matita_basics_logic.eq
                                  (pts.u pts.var)
                                  (matita_arithmetics_nat.lt
                                     (matita_arithmetics_nat.plus __ r)
                                     (matita_arithmetics_nat.plus __ b))
                                  (matita_arithmetics_nat.lt
                                     (matita_arithmetics_nat.plus __ r)
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_nat.S q)
                                        b)))
                               (matita_basics_logic.rewrite_r
                                  matita_arithmetics_nat.nat
                                  (matita_arithmetics_nat.plus
                                     r
                                     (matita_arithmetics_nat.times b q))
                                  (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                   matita_basics_logic.eq
                                     (pts.u pts.var)
                                     (matita_arithmetics_nat.lt
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times b q)
                                           r)
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times b q)
                                           b))
                                     (matita_arithmetics_nat.lt
                                        __
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_nat.S q)
                                           b)))
                                  (matita_basics_logic.rewrite_l
                                     matita_arithmetics_nat.nat
                                     a
                                     (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                      matita_basics_logic.eq
                                        (pts.u pts.var)
                                        (matita_arithmetics_nat.lt
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times b q)
                                              r)
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times b q)
                                              b))
                                        (matita_arithmetics_nat.lt
                                           __
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_nat.S q)
                                              b)))
                                     (matita_basics_logic.rewrite_r
                                        matita_arithmetics_nat.nat
                                        (matita_arithmetics_nat.times
                                           b
                                           (matita_arithmetics_nat.S q))
                                        (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                         matita_basics_logic.eq
                                           (pts.u pts.var)
                                           (matita_arithmetics_nat.lt
                                              (matita_arithmetics_nat.plus
                                                 (matita_arithmetics_nat.times b q)
                                                 r)
                                              (matita_arithmetics_nat.plus
                                                 (matita_arithmetics_nat.times b q)
                                                 b))
                                           (matita_arithmetics_nat.lt a __))
                                        (matita_basics_logic.rewrite_l
                                           matita_arithmetics_nat.nat
                                           (matita_arithmetics_nat.plus
                                              b
                                              (matita_arithmetics_nat.times b q))
                                           (__:(pts.El
                                                  pts.var
                                                  matita_arithmetics_nat.nat) =>
                                            matita_basics_logic.eq
                                              (pts.u pts.var)
                                              (matita_arithmetics_nat.lt
                                                 (matita_arithmetics_nat.plus
                                                    (matita_arithmetics_nat.times b q)
                                                    r)
                                                 (matita_arithmetics_nat.plus
                                                    (matita_arithmetics_nat.times b q)
                                                    b))
                                              (matita_arithmetics_nat.lt a __))
                                           (matita_basics_logic.rewrite_r
                                              matita_arithmetics_nat.nat
                                              (matita_arithmetics_nat.plus
                                                 r
                                                 (matita_arithmetics_nat.times b q))
                                              (__:(pts.El
                                                     pts.var
                                                     matita_arithmetics_nat.nat) =>
                                               matita_basics_logic.eq
                                                 (pts.u pts.var)
                                                 (matita_arithmetics_nat.lt
                                                    __
                                                    (matita_arithmetics_nat.plus
                                                       (matita_arithmetics_nat.times
                                                          b
                                                          q)
                                                       b))
                                                 (matita_arithmetics_nat.lt
                                                    a
                                                    (matita_arithmetics_nat.plus
                                                       b
                                                       (matita_arithmetics_nat.times
                                                          b
                                                          q))))
                                              (matita_basics_logic.rewrite_l
                                                 matita_arithmetics_nat.nat
                                                 a
                                                 (__:(pts.El
                                                        pts.var
                                                        matita_arithmetics_nat.nat) =>
                                                  matita_basics_logic.eq
                                                    (pts.u pts.var)
                                                    (matita_arithmetics_nat.lt
                                                       __
                                                       (matita_arithmetics_nat.plus
                                                          (matita_arithmetics_nat.times
                                                             b
                                                             q)
                                                          b))
                                                    (matita_arithmetics_nat.lt
                                                       a
                                                       (matita_arithmetics_nat.plus
                                                          b
                                                          (matita_arithmetics_nat.times
                                                             b
                                                             q))))
                                                 (matita_basics_logic.rewrite_r
                                                    matita_arithmetics_nat.nat
                                                    (matita_arithmetics_nat.plus
                                                       b
                                                       (matita_arithmetics_nat.times
                                                          b
                                                          q))
                                                    (__:(pts.El
                                                           pts.var
                                                           matita_arithmetics_nat.nat) =>
                                                     matita_basics_logic.eq
                                                       (pts.u pts.var)
                                                       (matita_arithmetics_nat.lt
                                                          a
                                                          __)
                                                       (matita_arithmetics_nat.lt
                                                          a
                                                          (matita_arithmetics_nat.plus
                                                             b
                                                             (matita_arithmetics_nat.times
                                                                b
                                                                q))))
                                                    (matita_basics_logic.refl
                                                       (pts.u pts.var)
                                                       (matita_arithmetics_nat.lt
                                                          a
                                                          (matita_arithmetics_nat.plus
                                                             b
                                                             (matita_arithmetics_nat.times
                                                                b
                                                                q))))
                                                    (matita_arithmetics_nat.plus
                                                       (matita_arithmetics_nat.times
                                                          b
                                                          q)
                                                       b)
                                                    (matita_arithmetics_nat.commutative_plus
                                                       (matita_arithmetics_nat.times
                                                          b
                                                          q)
                                                       b))
                                                 (matita_arithmetics_nat.plus
                                                    r
                                                    (matita_arithmetics_nat.times b q))
                                                 (let_clause_1078
                                                    a
                                                    b
                                                    q
                                                    r
                                                    q1
                                                    r1
                                                    _clearme
                                                    ltrb
                                                    spec
                                                    _clearme0
                                                    ltr1b
                                                    spec1
                                                    leqq1
                                                    ltqq1))
                                              (matita_arithmetics_nat.plus
                                                 (matita_arithmetics_nat.times b q)
                                                 r)
                                              (matita_arithmetics_nat.commutative_plus
                                                 (matita_arithmetics_nat.times b q)
                                                 r))
                                           (matita_arithmetics_nat.times
                                              b
                                              (matita_arithmetics_nat.S q))
                                           (matita_arithmetics_nat.times_n_Sm b q))
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_nat.S q)
                                           b)
                                        (matita_arithmetics_nat.commutative_times
                                           (matita_arithmetics_nat.S q)
                                           b))
                                     (matita_arithmetics_nat.plus
                                        r
                                        (matita_arithmetics_nat.times b q))
                                     (let_clause_1078
                                        a
                                        b
                                        q
                                        r
                                        q1
                                        r1
                                        _clearme
                                        ltrb
                                        spec
                                        _clearme0
                                        ltr1b
                                        spec1
                                        leqq1
                                        ltqq1))
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.times b q)
                                     r)
                                  (matita_arithmetics_nat.commutative_plus
                                     (matita_arithmetics_nat.times b q)
                                     r))
                               (matita_arithmetics_nat.times q b)
                               (matita_arithmetics_nat.commutative_times q b)))
                         a
                         spec)
                      (matita_arithmetics_nat.transitive_le
                         (matita_arithmetics_nat.times (matita_arithmetics_nat.S q) b)
                         (matita_arithmetics_nat.times q1 b)
                         a
                         (matita_basics_logic.eq_coerc
                            (matita_arithmetics_nat.le
                               (matita_arithmetics_nat.times b (matita_arithmetics_nat.S q))
                               (matita_arithmetics_nat.times b q1))
                            (matita_arithmetics_nat.le
                               (matita_arithmetics_nat.times (matita_arithmetics_nat.S q) b)
                               (matita_arithmetics_nat.times q1 b))
                            (matita_arithmetics_nat.monotonic_le_times_r
                               b
                               (matita_arithmetics_nat.S q)
                               q1
                               ltqq1)
                            (matita_basics_logic.rewrite_r
                               matita_arithmetics_nat.nat
                               (matita_arithmetics_nat.times b (matita_arithmetics_nat.S q))
                               (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                matita_basics_logic.eq
                                  (pts.u pts.var)
                                  (matita_arithmetics_nat.le
                                     (matita_arithmetics_nat.times
                                        b
                                        (matita_arithmetics_nat.S q))
                                     (matita_arithmetics_nat.times b q1))
                                  (matita_arithmetics_nat.le
                                     __
                                     (matita_arithmetics_nat.times q1 b)))
                               (matita_basics_logic.rewrite_l
                                  matita_arithmetics_nat.nat
                                  (matita_arithmetics_nat.plus
                                     b
                                     (matita_arithmetics_nat.times b q))
                                  (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                   matita_basics_logic.eq
                                     (pts.u pts.var)
                                     (matita_arithmetics_nat.le
                                        (matita_arithmetics_nat.times
                                           b
                                           (matita_arithmetics_nat.S q))
                                        (matita_arithmetics_nat.times b q1))
                                     (matita_arithmetics_nat.le
                                        __
                                        (matita_arithmetics_nat.times q1 b)))
                                  (matita_basics_logic.rewrite_r
                                     matita_arithmetics_nat.nat
                                     (matita_arithmetics_nat.times b q1)
                                     (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                      matita_basics_logic.eq
                                        (pts.u pts.var)
                                        (matita_arithmetics_nat.le
                                           (matita_arithmetics_nat.times
                                              b
                                              (matita_arithmetics_nat.S q))
                                           (matita_arithmetics_nat.times b q1))
                                        (matita_arithmetics_nat.le
                                           (matita_arithmetics_nat.plus
                                              b
                                              (matita_arithmetics_nat.times b q))
                                           __))
                                     (matita_basics_logic.rewrite_l
                                        matita_arithmetics_nat.nat
                                        (matita_arithmetics_nat.plus
                                           b
                                           (matita_arithmetics_nat.times b q))
                                        (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                         matita_basics_logic.eq
                                           (pts.u pts.var)
                                           (matita_arithmetics_nat.le
                                              __
                                              (matita_arithmetics_nat.times b q1))
                                           (matita_arithmetics_nat.le
                                              (matita_arithmetics_nat.plus
                                                 b
                                                 (matita_arithmetics_nat.times b q))
                                              (matita_arithmetics_nat.times b q1)))
                                        (matita_basics_logic.refl
                                           (pts.u pts.var)
                                           (matita_arithmetics_nat.le
                                              (matita_arithmetics_nat.plus
                                                 b
                                                 (matita_arithmetics_nat.times b q))
                                              (matita_arithmetics_nat.times b q1)))
                                        (matita_arithmetics_nat.times
                                           b
                                           (matita_arithmetics_nat.S q))
                                        (matita_arithmetics_nat.times_n_Sm b q))
                                     (matita_arithmetics_nat.times q1 b)
                                     (matita_arithmetics_nat.commutative_times q1 b))
                                  (matita_arithmetics_nat.times
                                     b
                                     (matita_arithmetics_nat.S q))
                                  (matita_arithmetics_nat.times_n_Sm b q))
                               (matita_arithmetics_nat.times (matita_arithmetics_nat.S q) b)
                               (matita_arithmetics_nat.commutative_times
                                  (matita_arithmetics_nat.S q)
                                  b)))
                         (matita_basics_logic.eq_coerc
                            (matita_arithmetics_nat.le
                               (matita_arithmetics_nat.times q1 b)
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.times q1 b)
                                  r1))
                            (matita_arithmetics_nat.le (matita_arithmetics_nat.times q1 b) a)
                            (matita_arithmetics_nat.le_plus_n_r
                               r1
                               (matita_arithmetics_nat.times q1 b))
                            (matita_basics_logic.rewrite_r
                               matita_arithmetics_nat.nat
                               (matita_arithmetics_nat.times b q1)
                               (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                matita_basics_logic.eq
                                  (pts.u pts.var)
                                  (matita_arithmetics_nat.le
                                     __
                                     (matita_arithmetics_nat.plus __ r1))
                                  (matita_arithmetics_nat.le __ a))
                               (matita_basics_logic.rewrite_r
                                  matita_arithmetics_nat.nat
                                  (matita_arithmetics_nat.plus
                                     r1
                                     (matita_arithmetics_nat.times b q1))
                                  (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                   matita_basics_logic.eq
                                     (pts.u pts.var)
                                     (matita_arithmetics_nat.le
                                        (matita_arithmetics_nat.times b q1)
                                        __)
                                     (matita_arithmetics_nat.le
                                        (matita_arithmetics_nat.times b q1)
                                        a))
                                  (matita_basics_logic.rewrite_l
                                     matita_arithmetics_nat.nat
                                     a
                                     (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                      matita_basics_logic.eq
                                        (pts.u pts.var)
                                        (matita_arithmetics_nat.le
                                           (matita_arithmetics_nat.times b q1)
                                           __)
                                        (matita_arithmetics_nat.le
                                           (matita_arithmetics_nat.times b q1)
                                           a))
                                     (matita_basics_logic.refl
                                        (pts.u pts.var)
                                        (matita_arithmetics_nat.le
                                           (matita_arithmetics_nat.times b q1)
                                           a))
                                     (matita_arithmetics_nat.plus
                                        r1
                                        (matita_arithmetics_nat.times b q1))
                                     (matita_basics_logic.rewrite_l
                                        matita_arithmetics_nat.nat
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times b q1)
                                           r1)
                                        (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                         matita_basics_logic.eq
                                           matita_arithmetics_nat.nat
                                           a
                                           __)
                                        (matita_basics_logic.rewrite_l
                                           matita_arithmetics_nat.nat
                                           (matita_arithmetics_nat.times q1 b)
                                           (__:(pts.El
                                                  pts.var
                                                  matita_arithmetics_nat.nat) =>
                                            matita_basics_logic.eq
                                              matita_arithmetics_nat.nat
                                              a
                                              (matita_arithmetics_nat.plus __ r1))
                                           spec1
                                           (matita_arithmetics_nat.times b q1)
                                           (matita_arithmetics_nat.commutative_times
                                              q1
                                              b))
                                        (matita_arithmetics_nat.plus
                                           r1
                                           (matita_arithmetics_nat.times b q1))
                                        (matita_arithmetics_nat.commutative_plus
                                           (matita_arithmetics_nat.times b q1)
                                           r1)))
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.times b q1)
                                     r1)
                                  (matita_arithmetics_nat.commutative_plus
                                     (matita_arithmetics_nat.times b q1)
                                     r1))
                               (matita_arithmetics_nat.times q1 b)
                               (matita_arithmetics_nat.commutative_times q1 b)))))
                   (matita_arithmetics_nat.not_le_Sn_n a)))
             (_x_172:(pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat q q1)) =>
              matita_basics_logic.rewrite_l
                matita_arithmetics_nat.nat
                q
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq matita_arithmetics_nat.nat q __)
                (matita_basics_logic.refl matita_arithmetics_nat.nat q)
                q1
                _x_172)
             (matita_arithmetics_nat.le_to_or_lt_eq q q1 leqq1))
          (leqq1:(pts.El pts.var (matita_basics_logic.Not (matita_arithmetics_nat.le q q1))) =>
           matita_basics_logic.False_ind
             (_x_66:(pts.El pts.var matita_basics_logic.False) =>
              matita_basics_logic.eq matita_arithmetics_nat.nat q q1)
             (matita_basics_logic.absurd
                (matita_arithmetics_nat.le (matita_arithmetics_nat.S a) a)
                (matita_arithmetics_nat.lt_to_le_to_lt
                   a
                   (matita_arithmetics_nat.times (matita_arithmetics_nat.S q1) b)
                   a
                   (matita_basics_logic.eq_ind_r
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q1 b) r1)
                      (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       __:(pts.El
                             pts.var
                             (matita_basics_logic.eq
                                matita_arithmetics_nat.nat
                                x
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times q1 b)
                                   r1))) =>
                       matita_arithmetics_nat.lt
                         x
                         (matita_arithmetics_nat.times (matita_arithmetics_nat.S q1) b))
                      (matita_basics_logic.eq_coerc
                         (matita_arithmetics_nat.lt
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.times q1 b)
                               r1)
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.times q1 b)
                               b))
                         (matita_arithmetics_nat.lt
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.times q1 b)
                               r1)
                            (matita_arithmetics_nat.times (matita_arithmetics_nat.S q1) b))
                         (matita_arithmetics_nat.monotonic_lt_plus_r
                            (matita_arithmetics_nat.times q1 b)
                            r1
                            b
                            ltr1b)
                         (matita_basics_logic.rewrite_r
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.times b q1)
                            (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                             matita_basics_logic.eq
                               (pts.u pts.var)
                               (matita_arithmetics_nat.lt
                                  (matita_arithmetics_nat.plus __ r1)
                                  (matita_arithmetics_nat.plus __ b))
                               (matita_arithmetics_nat.lt
                                  (matita_arithmetics_nat.plus __ r1)
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_nat.S q1)
                                     b)))
                            (matita_basics_logic.rewrite_r
                               matita_arithmetics_nat.nat
                               (matita_arithmetics_nat.plus
                                  r1
                                  (matita_arithmetics_nat.times b q1))
                               (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                matita_basics_logic.eq
                                  (pts.u pts.var)
                                  (matita_arithmetics_nat.lt
                                     (matita_arithmetics_nat.plus
                                        (matita_arithmetics_nat.times b q1)
                                        r1)
                                     (matita_arithmetics_nat.plus
                                        (matita_arithmetics_nat.times b q1)
                                        b))
                                  (matita_arithmetics_nat.lt
                                     __
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_nat.S q1)
                                        b)))
                               (matita_basics_logic.rewrite_l
                                  matita_arithmetics_nat.nat
                                  a
                                  (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                   matita_basics_logic.eq
                                     (pts.u pts.var)
                                     (matita_arithmetics_nat.lt
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times b q1)
                                           r1)
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times b q1)
                                           b))
                                     (matita_arithmetics_nat.lt
                                        __
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_nat.S q1)
                                           b)))
                                  (matita_basics_logic.rewrite_r
                                     matita_arithmetics_nat.nat
                                     (matita_arithmetics_nat.times
                                        b
                                        (matita_arithmetics_nat.S q1))
                                     (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                      matita_basics_logic.eq
                                        (pts.u pts.var)
                                        (matita_arithmetics_nat.lt
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times b q1)
                                              r1)
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times b q1)
                                              b))
                                        (matita_arithmetics_nat.lt a __))
                                     (matita_basics_logic.rewrite_l
                                        matita_arithmetics_nat.nat
                                        (matita_arithmetics_nat.plus
                                           b
                                           (matita_arithmetics_nat.times b q1))
                                        (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                         matita_basics_logic.eq
                                           (pts.u pts.var)
                                           (matita_arithmetics_nat.lt
                                              (matita_arithmetics_nat.plus
                                                 (matita_arithmetics_nat.times b q1)
                                                 r1)
                                              (matita_arithmetics_nat.plus
                                                 (matita_arithmetics_nat.times b q1)
                                                 b))
                                           (matita_arithmetics_nat.lt a __))
                                        (matita_basics_logic.rewrite_r
                                           matita_arithmetics_nat.nat
                                           (matita_arithmetics_nat.plus
                                              r1
                                              (matita_arithmetics_nat.times b q1))
                                           (__:(pts.El
                                                  pts.var
                                                  matita_arithmetics_nat.nat) =>
                                            matita_basics_logic.eq
                                              (pts.u pts.var)
                                              (matita_arithmetics_nat.lt
                                                 __
                                                 (matita_arithmetics_nat.plus
                                                    (matita_arithmetics_nat.times
                                                       b
                                                       q1)
                                                    b))
                                              (matita_arithmetics_nat.lt
                                                 a
                                                 (matita_arithmetics_nat.plus
                                                    b
                                                    (matita_arithmetics_nat.times
                                                       b
                                                       q1))))
                                           (matita_basics_logic.rewrite_l
                                              matita_arithmetics_nat.nat
                                              a
                                              (__:(pts.El
                                                     pts.var
                                                     matita_arithmetics_nat.nat) =>
                                               matita_basics_logic.eq
                                                 (pts.u pts.var)
                                                 (matita_arithmetics_nat.lt
                                                    __
                                                    (matita_arithmetics_nat.plus
                                                       (matita_arithmetics_nat.times
                                                          b
                                                          q1)
                                                       b))
                                                 (matita_arithmetics_nat.lt
                                                    a
                                                    (matita_arithmetics_nat.plus
                                                       b
                                                       (matita_arithmetics_nat.times
                                                          b
                                                          q1))))
                                              (matita_basics_logic.rewrite_r
                                                 matita_arithmetics_nat.nat
                                                 (matita_arithmetics_nat.plus
                                                    b
                                                    (matita_arithmetics_nat.times
                                                       b
                                                       q1))
                                                 (__:(pts.El
                                                        pts.var
                                                        matita_arithmetics_nat.nat) =>
                                                  matita_basics_logic.eq
                                                    (pts.u pts.var)
                                                    (matita_arithmetics_nat.lt a __)
                                                    (matita_arithmetics_nat.lt
                                                       a
                                                       (matita_arithmetics_nat.plus
                                                          b
                                                          (matita_arithmetics_nat.times
                                                             b
                                                             q1))))
                                                 (matita_basics_logic.refl
                                                    (pts.u pts.var)
                                                    (matita_arithmetics_nat.lt
                                                       a
                                                       (matita_arithmetics_nat.plus
                                                          b
                                                          (matita_arithmetics_nat.times
                                                             b
                                                             q1))))
                                                 (matita_arithmetics_nat.plus
                                                    (matita_arithmetics_nat.times
                                                       b
                                                       q1)
                                                    b)
                                                 (matita_arithmetics_nat.commutative_plus
                                                    (matita_arithmetics_nat.times
                                                       b
                                                       q1)
                                                    b))
                                              (matita_arithmetics_nat.plus
                                                 r1
                                                 (matita_arithmetics_nat.times b q1))
                                              (let_clause_1062
                                                 a
                                                 b
                                                 q
                                                 r
                                                 q1
                                                 r1
                                                 _clearme
                                                 ltrb
                                                 spec
                                                 _clearme0
                                                 ltr1b
                                                 spec1
                                                 leqq1))
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times b q1)
                                              r1)
                                           (matita_arithmetics_nat.commutative_plus
                                              (matita_arithmetics_nat.times b q1)
                                              r1))
                                        (matita_arithmetics_nat.times
                                           b
                                           (matita_arithmetics_nat.S q1))
                                        (matita_arithmetics_nat.times_n_Sm b q1))
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_nat.S q1)
                                        b)
                                     (matita_arithmetics_nat.commutative_times
                                        (matita_arithmetics_nat.S q1)
                                        b))
                                  (matita_arithmetics_nat.plus
                                     r1
                                     (matita_arithmetics_nat.times b q1))
                                  (let_clause_1062
                                     a
                                     b
                                     q
                                     r
                                     q1
                                     r1
                                     _clearme
                                     ltrb
                                     spec
                                     _clearme0
                                     ltr1b
                                     spec1
                                     leqq1))
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.times b q1)
                                  r1)
                               (matita_arithmetics_nat.commutative_plus
                                  (matita_arithmetics_nat.times b q1)
                                  r1))
                            (matita_arithmetics_nat.times q1 b)
                            (matita_arithmetics_nat.commutative_times q1 b)))
                      a
                      spec1)
                   (matita_arithmetics_nat.transitive_le
                      (matita_arithmetics_nat.times (matita_arithmetics_nat.S q1) b)
                      (matita_arithmetics_nat.times q b)
                      a
                      (matita_basics_logic.eq_coerc
                         (matita_arithmetics_nat.le
                            (matita_arithmetics_nat.times b (matita_arithmetics_nat.S q1))
                            (matita_arithmetics_nat.times b q))
                         (matita_arithmetics_nat.le
                            (matita_arithmetics_nat.times (matita_arithmetics_nat.S q1) b)
                            (matita_arithmetics_nat.times q b))
                         (matita_arithmetics_nat.monotonic_le_times_r
                            b
                            (matita_arithmetics_nat.S q1)
                            q
                            (matita_arithmetics_nat.not_le_to_lt q q1 leqq1))
                         (matita_basics_logic.rewrite_r
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.times b (matita_arithmetics_nat.S q1))
                            (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                             matita_basics_logic.eq
                               (pts.u pts.var)
                               (matita_arithmetics_nat.le
                                  (matita_arithmetics_nat.times
                                     b
                                     (matita_arithmetics_nat.S q1))
                                  (matita_arithmetics_nat.times b q))
                               (matita_arithmetics_nat.le
                                  __
                                  (matita_arithmetics_nat.times q b)))
                            (matita_basics_logic.rewrite_l
                               matita_arithmetics_nat.nat
                               (matita_arithmetics_nat.plus
                                  b
                                  (matita_arithmetics_nat.times b q1))
                               (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                matita_basics_logic.eq
                                  (pts.u pts.var)
                                  (matita_arithmetics_nat.le
                                     (matita_arithmetics_nat.times
                                        b
                                        (matita_arithmetics_nat.S q1))
                                     (matita_arithmetics_nat.times b q))
                                  (matita_arithmetics_nat.le
                                     __
                                     (matita_arithmetics_nat.times q b)))
                               (matita_basics_logic.rewrite_r
                                  matita_arithmetics_nat.nat
                                  (matita_arithmetics_nat.times b q)
                                  (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                   matita_basics_logic.eq
                                     (pts.u pts.var)
                                     (matita_arithmetics_nat.le
                                        (matita_arithmetics_nat.times
                                           b
                                           (matita_arithmetics_nat.S q1))
                                        (matita_arithmetics_nat.times b q))
                                     (matita_arithmetics_nat.le
                                        (matita_arithmetics_nat.plus
                                           b
                                           (matita_arithmetics_nat.times b q1))
                                        __))
                                  (matita_basics_logic.rewrite_l
                                     matita_arithmetics_nat.nat
                                     (matita_arithmetics_nat.plus
                                        b
                                        (matita_arithmetics_nat.times b q1))
                                     (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                      matita_basics_logic.eq
                                        (pts.u pts.var)
                                        (matita_arithmetics_nat.le
                                           __
                                           (matita_arithmetics_nat.times b q))
                                        (matita_arithmetics_nat.le
                                           (matita_arithmetics_nat.plus
                                              b
                                              (matita_arithmetics_nat.times b q1))
                                           (matita_arithmetics_nat.times b q)))
                                     (matita_basics_logic.refl
                                        (pts.u pts.var)
                                        (matita_arithmetics_nat.le
                                           (matita_arithmetics_nat.plus
                                              b
                                              (matita_arithmetics_nat.times b q1))
                                           (matita_arithmetics_nat.times b q)))
                                     (matita_arithmetics_nat.times
                                        b
                                        (matita_arithmetics_nat.S q1))
                                     (matita_arithmetics_nat.times_n_Sm b q1))
                                  (matita_arithmetics_nat.times q b)
                                  (matita_arithmetics_nat.commutative_times q b))
                               (matita_arithmetics_nat.times b (matita_arithmetics_nat.S q1))
                               (matita_arithmetics_nat.times_n_Sm b q1))
                            (matita_arithmetics_nat.times (matita_arithmetics_nat.S q1) b)
                            (matita_arithmetics_nat.commutative_times
                               (matita_arithmetics_nat.S q1)
                               b)))
                      (matita_basics_logic.eq_coerc
                         (matita_arithmetics_nat.le
                            (matita_arithmetics_nat.times q b)
                            (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q b) r))
                         (matita_arithmetics_nat.le (matita_arithmetics_nat.times q b) a)
                         (matita_arithmetics_nat.le_plus_n_r
                            r
                            (matita_arithmetics_nat.times q b))
                         (matita_basics_logic.rewrite_r
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.times b q)
                            (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                             matita_basics_logic.eq
                               (pts.u pts.var)
                               (matita_arithmetics_nat.le
                                  __
                                  (matita_arithmetics_nat.plus __ r))
                               (matita_arithmetics_nat.le __ a))
                            (matita_basics_logic.rewrite_r
                               matita_arithmetics_nat.nat
                               (matita_arithmetics_nat.plus
                                  r
                                  (matita_arithmetics_nat.times b q))
                               (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                matita_basics_logic.eq
                                  (pts.u pts.var)
                                  (matita_arithmetics_nat.le
                                     (matita_arithmetics_nat.times b q)
                                     __)
                                  (matita_arithmetics_nat.le
                                     (matita_arithmetics_nat.times b q)
                                     a))
                               (matita_basics_logic.rewrite_l
                                  matita_arithmetics_nat.nat
                                  a
                                  (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                   matita_basics_logic.eq
                                     (pts.u pts.var)
                                     (matita_arithmetics_nat.le
                                        (matita_arithmetics_nat.times b q)
                                        __)
                                     (matita_arithmetics_nat.le
                                        (matita_arithmetics_nat.times b q)
                                        a))
                                  (matita_basics_logic.refl
                                     (pts.u pts.var)
                                     (matita_arithmetics_nat.le
                                        (matita_arithmetics_nat.times b q)
                                        a))
                                  (matita_arithmetics_nat.plus
                                     r
                                     (matita_arithmetics_nat.times b q))
                                  (matita_basics_logic.rewrite_l
                                     matita_arithmetics_nat.nat
                                     (matita_arithmetics_nat.plus
                                        (matita_arithmetics_nat.times b q)
                                        r)
                                     (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                      matita_basics_logic.eq
                                        matita_arithmetics_nat.nat
                                        a
                                        __)
                                     (matita_basics_logic.rewrite_l
                                        matita_arithmetics_nat.nat
                                        (matita_arithmetics_nat.times q b)
                                        (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                         matita_basics_logic.eq
                                           matita_arithmetics_nat.nat
                                           a
                                           (matita_arithmetics_nat.plus __ r))
                                        spec
                                        (matita_arithmetics_nat.times b q)
                                        (matita_arithmetics_nat.commutative_times q b))
                                     (matita_arithmetics_nat.plus
                                        r
                                        (matita_arithmetics_nat.times b q))
                                     (matita_arithmetics_nat.commutative_plus
                                        (matita_arithmetics_nat.times b q)
                                        r)))
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.times b q)
                                  r)
                               (matita_arithmetics_nat.commutative_plus
                                  (matita_arithmetics_nat.times b q)
                                  r))
                            (matita_arithmetics_nat.times q b)
                            (matita_arithmetics_nat.commutative_times q b)))))
                (matita_arithmetics_nat.not_le_Sn_n a))))
       _clearme0)
    _clearme.

def div_mod_spec_to_eq2 :
  a:(pts.El pts.var matita_arithmetics_nat.nat) ->
  b:(pts.El pts.var matita_arithmetics_nat.nat) ->
  q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  q1:(pts.El pts.var matita_arithmetics_nat.nat) ->
  r1:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (div_mod_spec a b q r)) ->
  __1:(pts.El pts.var (div_mod_spec a b q1 r1)) ->
  pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat r r1)
  :=
  a:(pts.El pts.var matita_arithmetics_nat.nat) =>
  b:(pts.El pts.var matita_arithmetics_nat.nat) =>
  q:(pts.El pts.var matita_arithmetics_nat.nat) =>
  r:(pts.El pts.var matita_arithmetics_nat.nat) =>
  q1:(pts.El pts.var matita_arithmetics_nat.nat) =>
  r1:(pts.El pts.var matita_arithmetics_nat.nat) =>
  spec:(pts.El pts.var (div_mod_spec a b q r)) =>
  spec1:(pts.El pts.var (div_mod_spec a b q1 r1)) =>
  div_mod_spec_ind
    a
    b
    q
    r
    (_x_809:(pts.El pts.var (div_mod_spec a b q r)) =>
     matita_basics_logic.eq matita_arithmetics_nat.nat r r1)
    (__:(pts.El pts.var (matita_arithmetics_nat.lt r b)) =>
     eqa:(pts.El
            pts.var
            (matita_basics_logic.eq
               matita_arithmetics_nat.nat
               a
               (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q b) r))) =>
     div_mod_spec_ind
       a
       b
       q1
       r1
       (_x_809:(pts.El pts.var (div_mod_spec a b q1 r1)) =>
        matita_basics_logic.eq matita_arithmetics_nat.nat r r1)
       (_0:(pts.El pts.var (matita_arithmetics_nat.lt r1 b)) =>
        eqa1:(pts.El
                pts.var
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   a
                   (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q1 b) r1))) =>
        matita_arithmetics_nat.injective_plus_r
          (matita_arithmetics_nat.times q b)
          r
          r1
          (matita_basics_logic.rewrite_r
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.times b q)
             (__1:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.plus __1 r)
                (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q b) r1))
             (matita_basics_logic.rewrite_r
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.plus r (matita_arithmetics_nat.times b q))
                (__1:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   __1
                   (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q b) r1))
                (matita_basics_logic.rewrite_l
                   matita_arithmetics_nat.nat
                   a
                   (__1:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      __1
                      (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q b) r1))
                   (matita_basics_logic.rewrite_r
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.times b q)
                      (__1:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         a
                         (matita_arithmetics_nat.plus __1 r1))
                      (matita_basics_logic.rewrite_r
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.plus r1 (matita_arithmetics_nat.times b q))
                         (__1:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq matita_arithmetics_nat.nat a __1)
                         (matita_basics_logic.rewrite_l
                            matita_arithmetics_nat.nat
                            a
                            (__1:(pts.El pts.var matita_arithmetics_nat.nat) =>
                             matita_basics_logic.eq matita_arithmetics_nat.nat a __1)
                            (matita_basics_logic.refl matita_arithmetics_nat.nat a)
                            (matita_arithmetics_nat.plus
                               r1
                               (matita_arithmetics_nat.times b q))
                            (matita_basics_logic.rewrite_r
                               matita_arithmetics_nat.nat
                               q1
                               (__1:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                matita_basics_logic.eq
                                  matita_arithmetics_nat.nat
                                  a
                                  (matita_arithmetics_nat.plus
                                     r1
                                     (matita_arithmetics_nat.times b __1)))
                               (matita_basics_logic.rewrite_l
                                  matita_arithmetics_nat.nat
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.times b q1)
                                     r1)
                                  (__1:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                   matita_basics_logic.eq matita_arithmetics_nat.nat a __1)
                                  (matita_basics_logic.rewrite_l
                                     matita_arithmetics_nat.nat
                                     (matita_arithmetics_nat.times q1 b)
                                     (__1:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                      matita_basics_logic.eq
                                        matita_arithmetics_nat.nat
                                        a
                                        (matita_arithmetics_nat.plus __1 r1))
                                     eqa1
                                     (matita_arithmetics_nat.times b q1)
                                     (matita_arithmetics_nat.commutative_times q1 b))
                                  (matita_arithmetics_nat.plus
                                     r1
                                     (matita_arithmetics_nat.times b q1))
                                  (matita_arithmetics_nat.commutative_plus
                                     (matita_arithmetics_nat.times b q1)
                                     r1))
                               q
                               (div_mod_spec_to_eq a b q r q1 r1 spec spec1)))
                         (matita_arithmetics_nat.plus (matita_arithmetics_nat.times b q) r1)
                         (matita_arithmetics_nat.commutative_plus
                            (matita_arithmetics_nat.times b q)
                            r1))
                      (matita_arithmetics_nat.times q b)
                      (matita_arithmetics_nat.commutative_times q b))
                   (matita_arithmetics_nat.plus r (matita_arithmetics_nat.times b q))
                   (matita_basics_logic.rewrite_l
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.plus (matita_arithmetics_nat.times b q) r)
                      (__1:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq matita_arithmetics_nat.nat a __1)
                      (matita_basics_logic.rewrite_l
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.times q b)
                         (__1:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            a
                            (matita_arithmetics_nat.plus __1 r))
                         eqa
                         (matita_arithmetics_nat.times b q)
                         (matita_arithmetics_nat.commutative_times q b))
                      (matita_arithmetics_nat.plus r (matita_arithmetics_nat.times b q))
                      (matita_arithmetics_nat.commutative_plus
                         (matita_arithmetics_nat.times b q)
                         r)))
                (matita_arithmetics_nat.plus (matita_arithmetics_nat.times b q) r)
                (matita_arithmetics_nat.commutative_plus (matita_arithmetics_nat.times b q) r))
             (matita_arithmetics_nat.times q b)
             (matita_arithmetics_nat.commutative_times q b)))
       spec1)
    spec.

def div_plus_times :
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt r m)) ->
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (div (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q m) r) m)
       q)
  :=
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  q:(pts.El pts.var matita_arithmetics_nat.nat) =>
  r:(pts.El pts.var matita_arithmetics_nat.nat) =>
  ltrm:(pts.El pts.var (matita_arithmetics_nat.lt r m)) =>
  div_mod_spec_to_eq
    (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q m) r)
    m
    (div (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q m) r) m)
    (mod (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q m) r) m)
    q
    r
    (div_mod_spec_div_mod
       (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q m) r)
       m
       (matita_arithmetics_nat.ltn_to_ltO r m ltrm))
    (div_mod_spec_intro
       (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q m) r)
       m
       q
       r
       ltrm
       (matita_basics_logic.rewrite_r
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.times m q)
          (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
           matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.plus __ r)
             (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q m) r))
          (matita_basics_logic.rewrite_r
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.plus r (matita_arithmetics_nat.times m q))
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq
                matita_arithmetics_nat.nat
                __
                (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q m) r))
             (matita_basics_logic.rewrite_r
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.times m q)
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.plus r (matita_arithmetics_nat.times m q))
                   (matita_arithmetics_nat.plus __ r))
                (matita_basics_logic.rewrite_r
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.plus (matita_arithmetics_nat.times m q) r)
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      __
                      (matita_arithmetics_nat.plus (matita_arithmetics_nat.times m q) r))
                   (matita_basics_logic.refl
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.plus (matita_arithmetics_nat.times m q) r))
                   (matita_arithmetics_nat.plus r (matita_arithmetics_nat.times m q))
                   (matita_arithmetics_nat.commutative_plus r (matita_arithmetics_nat.times m q)))
                (matita_arithmetics_nat.times q m)
                (matita_arithmetics_nat.commutative_times q m))
             (matita_arithmetics_nat.plus (matita_arithmetics_nat.times m q) r)
             (matita_arithmetics_nat.commutative_plus (matita_arithmetics_nat.times m q) r))
          (matita_arithmetics_nat.times q m)
          (matita_arithmetics_nat.commutative_times q m))).

def mod_plus_times :
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  r:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt r m)) ->
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (mod (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q m) r) m)
       r)
  :=
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  q:(pts.El pts.var matita_arithmetics_nat.nat) =>
  r:(pts.El pts.var matita_arithmetics_nat.nat) =>
  ltrm:(pts.El pts.var (matita_arithmetics_nat.lt r m)) =>
  div_mod_spec_to_eq2
    (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q m) r)
    m
    (div (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q m) r) m)
    (mod (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q m) r) m)
    q
    r
    (div_mod_spec_div_mod
       (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q m) r)
       m
       (matita_arithmetics_nat.ltn_to_ltO r m ltrm))
    (div_mod_spec_intro
       (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q m) r)
       m
       q
       r
       ltrm
       (matita_basics_logic.rewrite_r
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.times m q)
          (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
           matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.plus __ r)
             (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q m) r))
          (matita_basics_logic.rewrite_r
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.plus r (matita_arithmetics_nat.times m q))
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq
                matita_arithmetics_nat.nat
                __
                (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q m) r))
             (matita_basics_logic.rewrite_r
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.plus r (matita_arithmetics_nat.times q m))
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.plus r (matita_arithmetics_nat.times m q))
                   __)
                (matita_basics_logic.rewrite_r
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.times q m)
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.plus r __)
                      (matita_arithmetics_nat.plus r (matita_arithmetics_nat.times q m)))
                   (matita_basics_logic.refl
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.plus r (matita_arithmetics_nat.times q m)))
                   (matita_arithmetics_nat.times m q)
                   (matita_arithmetics_nat.commutative_times m q))
                (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q m) r)
                (matita_arithmetics_nat.commutative_plus (matita_arithmetics_nat.times q m) r))
             (matita_arithmetics_nat.plus (matita_arithmetics_nat.times m q) r)
             (matita_arithmetics_nat.commutative_plus (matita_arithmetics_nat.times m q) r))
          (matita_arithmetics_nat.times q m)
          (matita_arithmetics_nat.commutative_times q m))).

def div_times :
  a:(pts.El pts.var matita_arithmetics_nat.nat) ->
  b:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O b)) ->
  pts.El
    pts.var
    (matita_basics_logic.eq matita_arithmetics_nat.nat (div (matita_arithmetics_nat.times a b) b) a)
  :=
  a:(pts.El pts.var matita_arithmetics_nat.nat) =>
  b:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posb:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O b)) =>
  div_mod_spec_to_eq
    (matita_arithmetics_nat.times a b)
    b
    (div (matita_arithmetics_nat.times a b) b)
    (mod (matita_arithmetics_nat.times a b) b)
    a
    matita_arithmetics_nat.O
    (div_mod_spec_div_mod (matita_arithmetics_nat.times a b) b posb)
    (div_mod_spec_intro
       (matita_arithmetics_nat.times a b)
       b
       a
       matita_arithmetics_nat.O
       posb
       (matita_basics_logic.rewrite_r
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.plus matita_arithmetics_nat.O (matita_arithmetics_nat.times a b))
          (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
           matita_basics_logic.eq matita_arithmetics_nat.nat (matita_arithmetics_nat.times a b) __)
          (matita_basics_logic.rewrite_l
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.times a b)
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.times a b)
                __)
             (matita_basics_logic.refl
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.times a b))
             (matita_arithmetics_nat.plus
                matita_arithmetics_nat.O
                (matita_arithmetics_nat.times a b))
             (matita_arithmetics_nat.plus_O_n (matita_arithmetics_nat.times a b)))
          (matita_arithmetics_nat.plus (matita_arithmetics_nat.times a b) matita_arithmetics_nat.O)
          (matita_arithmetics_nat.commutative_plus
             (matita_arithmetics_nat.times a b)
             matita_arithmetics_nat.O))).

def div_n_n :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) ->
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (div n n)
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  auto:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) =>
  matita_basics_logic.eq_coerc
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (div
          (matita_arithmetics_nat.plus
             (matita_arithmetics_nat.times (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)
             matita_arithmetics_nat.O)
          n)
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (div n n)
       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
    (div_plus_times
       n
       (matita_arithmetics_nat.S matita_arithmetics_nat.O)
       matita_arithmetics_nat.O
       auto)
    (matita_basics_logic.rewrite_l
       matita_arithmetics_nat.nat
       (matita_arithmetics_nat.times (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)
       (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
        matita_basics_logic.eq
          (pts.u pts.var)
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (div __ n)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O))
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (div n n)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
       (matita_basics_logic.rewrite_r
          matita_arithmetics_nat.nat
          n
          (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
           matita_basics_logic.eq
             (pts.u pts.var)
             (matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (div __ n)
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             (matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (div n n)
                (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
          (matita_basics_logic.refl
             (pts.u pts.var)
             (matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (div n n)
                (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
          (matita_arithmetics_nat.times (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)
          (matita_basics_logic.rewrite_r
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.times n (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.times
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                   n)
                __)
             (matita_arithmetics_nat.commutative_times
                (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                n)
             n
             (matita_arithmetics_nat.times_n_1 n)))
       (matita_arithmetics_nat.plus
          (matita_arithmetics_nat.times (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)
          matita_arithmetics_nat.O)
       (matita_arithmetics_nat.plus_n_O
          (matita_arithmetics_nat.times (matita_arithmetics_nat.S matita_arithmetics_nat.O) n))).

def eq_div_O :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt n m)) ->
  pts.El
    pts.var
    (matita_basics_logic.eq matita_arithmetics_nat.nat (div n m) matita_arithmetics_nat.O)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  ltnm:(pts.El pts.var (matita_arithmetics_nat.lt n m)) =>
  div_mod_spec_to_eq
    n
    m
    (div n m)
    (mod n m)
    matita_arithmetics_nat.O
    n
    (div_mod_spec_div_mod n m (matita_arithmetics_nat.ltn_to_ltO n m ltnm))
    (div_mod_spec_intro
       n
       m
       matita_arithmetics_nat.O
       n
       ltnm
       (matita_basics_logic.rewrite_r
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.times m matita_arithmetics_nat.O)
          (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
           matita_basics_logic.eq matita_arithmetics_nat.nat n (matita_arithmetics_nat.plus __ n))
          (matita_basics_logic.rewrite_l
             matita_arithmetics_nat.nat
             matita_arithmetics_nat.O
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq
                matita_arithmetics_nat.nat
                n
                (matita_arithmetics_nat.plus __ n))
             (matita_basics_logic.rewrite_r
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.plus n matita_arithmetics_nat.O)
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq matita_arithmetics_nat.nat n __)
                (matita_basics_logic.rewrite_l
                   matita_arithmetics_nat.nat
                   n
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq matita_arithmetics_nat.nat n __)
                   (matita_basics_logic.refl matita_arithmetics_nat.nat n)
                   (matita_arithmetics_nat.plus n matita_arithmetics_nat.O)
                   (matita_arithmetics_nat.plus_n_O n))
                (matita_arithmetics_nat.plus matita_arithmetics_nat.O n)
                (matita_arithmetics_nat.commutative_plus matita_arithmetics_nat.O n))
             (matita_arithmetics_nat.times m matita_arithmetics_nat.O)
             (matita_arithmetics_nat.times_n_O m))
          (matita_arithmetics_nat.times matita_arithmetics_nat.O m)
          (matita_arithmetics_nat.commutative_times matita_arithmetics_nat.O m))).

def mod_n_n :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) ->
  pts.El
    pts.var
    (matita_basics_logic.eq matita_arithmetics_nat.nat (mod n n) matita_arithmetics_nat.O)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) =>
  div_mod_spec_to_eq2
    n
    n
    (div n n)
    (mod n n)
    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
    matita_arithmetics_nat.O
    (div_mod_spec_div_mod n n posn)
    (div_mod_spec_intro
       n
       n
       (matita_arithmetics_nat.S matita_arithmetics_nat.O)
       matita_arithmetics_nat.O
       posn
       (matita_basics_logic.rewrite_r
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.times n (matita_arithmetics_nat.S matita_arithmetics_nat.O))
          (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
           matita_basics_logic.eq
             matita_arithmetics_nat.nat
             n
             (matita_arithmetics_nat.plus __ matita_arithmetics_nat.O))
          (matita_basics_logic.rewrite_l
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.plus
                n
                (matita_arithmetics_nat.times n matita_arithmetics_nat.O))
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq
                matita_arithmetics_nat.nat
                n
                (matita_arithmetics_nat.plus __ matita_arithmetics_nat.O))
             (matita_basics_logic.rewrite_l
                matita_arithmetics_nat.nat
                matita_arithmetics_nat.O
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   n
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.plus n __)
                      matita_arithmetics_nat.O))
                (matita_basics_logic.rewrite_l
                   matita_arithmetics_nat.nat
                   n
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      n
                      (matita_arithmetics_nat.plus __ matita_arithmetics_nat.O))
                   (matita_basics_logic.rewrite_l
                      matita_arithmetics_nat.nat
                      n
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq matita_arithmetics_nat.nat n __)
                      (matita_basics_logic.refl matita_arithmetics_nat.nat n)
                      (matita_arithmetics_nat.plus n matita_arithmetics_nat.O)
                      (matita_arithmetics_nat.plus_n_O n))
                   (matita_arithmetics_nat.plus n matita_arithmetics_nat.O)
                   (matita_arithmetics_nat.plus_n_O n))
                (matita_arithmetics_nat.times n matita_arithmetics_nat.O)
                (matita_arithmetics_nat.times_n_O n))
             (matita_arithmetics_nat.times n (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             (matita_arithmetics_nat.times_n_Sm n matita_arithmetics_nat.O))
          (matita_arithmetics_nat.times (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)
          (matita_arithmetics_nat.commutative_times
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)
             n))).

def mod_S :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) ->
  __1:(pts.El pts.var (matita_arithmetics_nat.lt (matita_arithmetics_nat.S (mod n m)) m)) ->
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (mod (matita_arithmetics_nat.S n) m)
       (matita_arithmetics_nat.S (mod n m)))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posm:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) =>
  H:(pts.El pts.var (matita_arithmetics_nat.lt (matita_arithmetics_nat.S (mod n m)) m)) =>
  div_mod_spec_to_eq2
    (matita_arithmetics_nat.S n)
    m
    (div (matita_arithmetics_nat.S n) m)
    (mod (matita_arithmetics_nat.S n) m)
    (div n m)
    (matita_arithmetics_nat.S (mod n m))
    (div_mod_spec_div_mod (matita_arithmetics_nat.S n) m posm)
    (div_mod_spec_intro
       (matita_arithmetics_nat.S n)
       m
       (div n m)
       (matita_arithmetics_nat.S (mod n m))
       H
       (matita_basics_logic.eq_coerc
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.S n)
             (matita_arithmetics_nat.S
                (matita_arithmetics_nat.plus (matita_arithmetics_nat.times m (div n m)) (mod n m))))
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.S n)
             (matita_arithmetics_nat.plus
                (matita_arithmetics_nat.times (div n m) m)
                (matita_arithmetics_nat.S (mod n m))))
          (matita_basics_logic.eq_f
             matita_arithmetics_nat.nat
             matita_arithmetics_nat.nat
             matita_arithmetics_nat.S
             n
             (matita_arithmetics_nat.plus (matita_arithmetics_nat.times m (div n m)) (mod n m))
             (matita_basics_logic.rewrite_r
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.plus (mod n m) (matita_arithmetics_nat.times m (div n m)))
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq matita_arithmetics_nat.nat n __)
                (matita_basics_logic.rewrite_l
                   matita_arithmetics_nat.nat
                   n
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq matita_arithmetics_nat.nat n __)
                   (matita_basics_logic.refl matita_arithmetics_nat.nat n)
                   (matita_arithmetics_nat.plus
                      (mod n m)
                      (matita_arithmetics_nat.times m (div n m)))
                   (matita_basics_logic.rewrite_l
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.times m (div n m))
                         (mod n m))
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq matita_arithmetics_nat.nat n __)
                      (matita_basics_logic.rewrite_l
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.times (div n m) m)
                         (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            n
                            (matita_arithmetics_nat.plus __ (mod n m)))
                         (div_mod n m)
                         (matita_arithmetics_nat.times m (div n m))
                         (matita_arithmetics_nat.commutative_times (div n m) m))
                      (matita_arithmetics_nat.plus
                         (mod n m)
                         (matita_arithmetics_nat.times m (div n m)))
                      (matita_arithmetics_nat.commutative_plus
                         (matita_arithmetics_nat.times m (div n m))
                         (mod n m))))
                (matita_arithmetics_nat.plus (matita_arithmetics_nat.times m (div n m)) (mod n m))
                (matita_arithmetics_nat.commutative_plus
                   (matita_arithmetics_nat.times m (div n m))
                   (mod n m))))
          (matita_basics_logic.rewrite_r
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.times m (div n m))
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq
                (pts.u pts.var)
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.S n)
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.times m (div n m))
                         (mod n m))))
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.S n)
                   (matita_arithmetics_nat.plus __ (matita_arithmetics_nat.S (mod n m)))))
             (matita_basics_logic.rewrite_r
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.times m (div n m))
                   (matita_arithmetics_nat.S (mod n m)))
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   (pts.u pts.var)
                   (matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.S n)
                      __)
                   (matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.S n)
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.times m (div n m))
                         (matita_arithmetics_nat.S (mod n m)))))
                (matita_basics_logic.refl
                   (pts.u pts.var)
                   (matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.S n)
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.times m (div n m))
                         (matita_arithmetics_nat.S (mod n m)))))
                (matita_arithmetics_nat.S
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times m (div n m))
                      (mod n m)))
                (matita_arithmetics_nat.plus_n_Sm
                   (matita_arithmetics_nat.times m (div n m))
                   (mod n m)))
             (matita_arithmetics_nat.times (div n m) m)
             (matita_arithmetics_nat.commutative_times (div n m) m)))).

def mod_O_n :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (mod matita_arithmetics_nat.O n)
       matita_arithmetics_nat.O)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_basics_logic.sym_eq
    matita_arithmetics_nat.nat
    matita_arithmetics_nat.O
    (mod matita_arithmetics_nat.O n)
    (matita_basics_logic.eq_coerc
       (matita_basics_logic.eq
          matita_arithmetics_nat.nat
          matita_arithmetics_nat.O
          (mod matita_arithmetics_nat.O n))
       (matita_basics_logic.eq
          matita_arithmetics_nat.nat
          matita_arithmetics_nat.O
          (mod matita_arithmetics_nat.O n))
       (matita_arithmetics_nat.le_n_O_to_eq
          (mod matita_arithmetics_nat.O n)
          (matita_basics_logic.eq_coerc
             (matita_arithmetics_nat.le
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.plus
                      (mod matita_arithmetics_nat.O n)
                      (matita_arithmetics_nat.times n (div matita_arithmetics_nat.O n)))
                   (matita_arithmetics_nat.plus
                      matita_arithmetics_nat.O
                      (matita_arithmetics_nat.times n (div matita_arithmetics_nat.O n))))
                (matita_arithmetics_nat.plus
                   (mod matita_arithmetics_nat.O n)
                   (matita_arithmetics_nat.times n (div matita_arithmetics_nat.O n))))
             (matita_arithmetics_nat.le (mod matita_arithmetics_nat.O n) matita_arithmetics_nat.O)
             (matita_arithmetics_nat.minus_le
                (matita_arithmetics_nat.plus
                   (mod matita_arithmetics_nat.O n)
                   (matita_arithmetics_nat.times n (div matita_arithmetics_nat.O n)))
                (matita_arithmetics_nat.plus
                   matita_arithmetics_nat.O
                   (matita_arithmetics_nat.times n (div matita_arithmetics_nat.O n))))
             (matita_basics_logic.rewrite_r
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.minus
                   (mod matita_arithmetics_nat.O n)
                   matita_arithmetics_nat.O)
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   (pts.u pts.var)
                   (matita_arithmetics_nat.le
                      __
                      (matita_arithmetics_nat.plus
                         (mod matita_arithmetics_nat.O n)
                         (matita_arithmetics_nat.times n (div matita_arithmetics_nat.O n))))
                   (matita_arithmetics_nat.le
                      (mod matita_arithmetics_nat.O n)
                      matita_arithmetics_nat.O))
                (matita_basics_logic.rewrite_l
                   matita_arithmetics_nat.nat
                   (mod matita_arithmetics_nat.O n)
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      (pts.u pts.var)
                      (matita_arithmetics_nat.le
                         __
                         (matita_arithmetics_nat.plus
                            (mod matita_arithmetics_nat.O n)
                            (matita_arithmetics_nat.times n (div matita_arithmetics_nat.O n))))
                      (matita_arithmetics_nat.le
                         (mod matita_arithmetics_nat.O n)
                         matita_arithmetics_nat.O))
                   (matita_basics_logic.rewrite_l
                      matita_arithmetics_nat.nat
                      matita_arithmetics_nat.O
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         (pts.u pts.var)
                         (matita_arithmetics_nat.le (mod matita_arithmetics_nat.O n) __)
                         (matita_arithmetics_nat.le
                            (mod matita_arithmetics_nat.O n)
                            matita_arithmetics_nat.O))
                      (matita_basics_logic.refl
                         (pts.u pts.var)
                         (matita_arithmetics_nat.le
                            (mod matita_arithmetics_nat.O n)
                            matita_arithmetics_nat.O))
                      (matita_arithmetics_nat.plus
                         (mod matita_arithmetics_nat.O n)
                         (matita_arithmetics_nat.times n (div matita_arithmetics_nat.O n)))
                      (matita_basics_logic.rewrite_l
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.times n (div matita_arithmetics_nat.O n))
                            (mod matita_arithmetics_nat.O n))
                         (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.O
                            __)
                         (matita_basics_logic.rewrite_l
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.times (div matita_arithmetics_nat.O n) n)
                            (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                             matita_basics_logic.eq
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.O
                               (matita_arithmetics_nat.plus
                                  __
                                  (mod matita_arithmetics_nat.O n)))
                            (div_mod matita_arithmetics_nat.O n)
                            (matita_arithmetics_nat.times n (div matita_arithmetics_nat.O n))
                            (matita_arithmetics_nat.commutative_times
                               (div matita_arithmetics_nat.O n)
                               n))
                         (matita_arithmetics_nat.plus
                            (mod matita_arithmetics_nat.O n)
                            (matita_arithmetics_nat.times n (div matita_arithmetics_nat.O n)))
                         (matita_arithmetics_nat.commutative_plus
                            (matita_arithmetics_nat.times n (div matita_arithmetics_nat.O n))
                            (mod matita_arithmetics_nat.O n))))
                   (matita_arithmetics_nat.minus
                      (mod matita_arithmetics_nat.O n)
                      matita_arithmetics_nat.O)
                   (matita_arithmetics_nat.minus_n_O (mod matita_arithmetics_nat.O n)))
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.plus
                      (mod matita_arithmetics_nat.O n)
                      (matita_arithmetics_nat.times n (div matita_arithmetics_nat.O n)))
                   (matita_arithmetics_nat.plus
                      matita_arithmetics_nat.O
                      (matita_arithmetics_nat.times n (div matita_arithmetics_nat.O n))))
                (matita_arithmetics_nat.minus_plus_plus_l
                   (mod matita_arithmetics_nat.O n)
                   matita_arithmetics_nat.O
                   (matita_arithmetics_nat.times n (div matita_arithmetics_nat.O n))))))
       (matita_basics_logic.refl
          (pts.u pts.var)
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             matita_arithmetics_nat.O
             (mod matita_arithmetics_nat.O n)))).

def lt_to_eq_mod :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt n m)) ->
  pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat (mod n m) n)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  ltnm:(pts.El pts.var (matita_arithmetics_nat.lt n m)) =>
  div_mod_spec_to_eq2
    n
    m
    (div n m)
    (mod n m)
    matita_arithmetics_nat.O
    n
    (div_mod_spec_div_mod n m (matita_arithmetics_nat.ltn_to_ltO n m ltnm))
    (div_mod_spec_intro
       n
       m
       matita_arithmetics_nat.O
       n
       ltnm
       (matita_basics_logic.rewrite_r
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.times m matita_arithmetics_nat.O)
          (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
           matita_basics_logic.eq matita_arithmetics_nat.nat n (matita_arithmetics_nat.plus __ n))
          (matita_basics_logic.rewrite_l
             matita_arithmetics_nat.nat
             matita_arithmetics_nat.O
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq
                matita_arithmetics_nat.nat
                n
                (matita_arithmetics_nat.plus __ n))
             (matita_basics_logic.rewrite_r
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.plus n matita_arithmetics_nat.O)
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq matita_arithmetics_nat.nat n __)
                (matita_basics_logic.rewrite_l
                   matita_arithmetics_nat.nat
                   n
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq matita_arithmetics_nat.nat n __)
                   (matita_basics_logic.refl matita_arithmetics_nat.nat n)
                   (matita_arithmetics_nat.plus n matita_arithmetics_nat.O)
                   (matita_arithmetics_nat.plus_n_O n))
                (matita_arithmetics_nat.plus matita_arithmetics_nat.O n)
                (matita_arithmetics_nat.commutative_plus matita_arithmetics_nat.O n))
             (matita_arithmetics_nat.times m matita_arithmetics_nat.O)
             (matita_arithmetics_nat.times_n_O m))
          (matita_arithmetics_nat.times matita_arithmetics_nat.O m)
          (matita_arithmetics_nat.commutative_times matita_arithmetics_nat.O m))).

def or_div_mod :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O q)) ->
  pts.El
    pts.var
    (matita_basics_logic.Or
       (matita_basics_logic.And
          (matita_basics_logic.eq matita_arithmetics_nat.nat (matita_arithmetics_nat.S (mod n q)) q)
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.S n)
             (matita_arithmetics_nat.times (matita_arithmetics_nat.S (div n q)) q)))
       (matita_basics_logic.And
          (matita_arithmetics_nat.lt (matita_arithmetics_nat.S (mod n q)) q)
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.S n)
             (matita_arithmetics_nat.plus
                (matita_arithmetics_nat.times (div n q) q)
                (matita_arithmetics_nat.S (mod n q))))))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  q:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posq:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O q)) =>
  matita_basics_logic.Or_ind
    (matita_arithmetics_nat.lt (matita_arithmetics_nat.S (mod n q)) q)
    (matita_basics_logic.eq matita_arithmetics_nat.nat (matita_arithmetics_nat.S (mod n q)) q)
    (_x_170:(pts.El
               pts.var
               (matita_basics_logic.Or
                  (matita_arithmetics_nat.lt (matita_arithmetics_nat.S (mod n q)) q)
                  (matita_basics_logic.eq
                     matita_arithmetics_nat.nat
                     (matita_arithmetics_nat.S (mod n q))
                     q))) =>
     matita_basics_logic.Or
       (matita_basics_logic.And
          (matita_basics_logic.eq matita_arithmetics_nat.nat (matita_arithmetics_nat.S (mod n q)) q)
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.S n)
             (matita_arithmetics_nat.times (matita_arithmetics_nat.S (div n q)) q)))
       (matita_basics_logic.And
          (matita_arithmetics_nat.lt (matita_arithmetics_nat.S (mod n q)) q)
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.S n)
             (matita_arithmetics_nat.plus
                (matita_arithmetics_nat.times (div n q) q)
                (matita_arithmetics_nat.S (mod n q))))))
    (H:(pts.El pts.var (matita_arithmetics_nat.lt (matita_arithmetics_nat.S (mod n q)) q)) =>
     matita_basics_logic.or_intror
       (matita_basics_logic.And
          (matita_basics_logic.eq matita_arithmetics_nat.nat (matita_arithmetics_nat.S (mod n q)) q)
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.S n)
             (matita_arithmetics_nat.times (matita_arithmetics_nat.S (div n q)) q)))
       (matita_basics_logic.And
          (matita_arithmetics_nat.lt (matita_arithmetics_nat.S (mod n q)) q)
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.S n)
             (matita_arithmetics_nat.plus
                (matita_arithmetics_nat.times (div n q) q)
                (matita_arithmetics_nat.S (mod n q)))))
       (matita_basics_logic.conj
          (matita_arithmetics_nat.lt (matita_arithmetics_nat.S (mod n q)) q)
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.S n)
             (matita_arithmetics_nat.plus
                (matita_arithmetics_nat.times (div n q) q)
                (matita_arithmetics_nat.S (mod n q))))
          H
          (matita_basics_logic.eq_coerc
             (matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.S n)
                (matita_arithmetics_nat.S
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times q (div n q))
                      (mod n q))))
             (matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.S n)
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.times (div n q) q)
                   (matita_arithmetics_nat.S (mod n q))))
             (matita_basics_logic.eq_f
                matita_arithmetics_nat.nat
                matita_arithmetics_nat.nat
                matita_arithmetics_nat.S
                n
                (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q (div n q)) (mod n q))
                (matita_basics_logic.rewrite_r
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.plus
                      (mod n q)
                      (matita_arithmetics_nat.times q (div n q)))
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq matita_arithmetics_nat.nat n __)
                   (matita_basics_logic.rewrite_l
                      matita_arithmetics_nat.nat
                      n
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq matita_arithmetics_nat.nat n __)
                      (matita_basics_logic.refl matita_arithmetics_nat.nat n)
                      (matita_arithmetics_nat.plus
                         (mod n q)
                         (matita_arithmetics_nat.times q (div n q)))
                      (matita_basics_logic.rewrite_l
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.times q (div n q))
                            (mod n q))
                         (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq matita_arithmetics_nat.nat n __)
                         (matita_basics_logic.rewrite_l
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.times (div n q) q)
                            (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                             matita_basics_logic.eq
                               matita_arithmetics_nat.nat
                               n
                               (matita_arithmetics_nat.plus __ (mod n q)))
                            (div_mod n q)
                            (matita_arithmetics_nat.times q (div n q))
                            (matita_arithmetics_nat.commutative_times (div n q) q))
                         (matita_arithmetics_nat.plus
                            (mod n q)
                            (matita_arithmetics_nat.times q (div n q)))
                         (matita_arithmetics_nat.commutative_plus
                            (matita_arithmetics_nat.times q (div n q))
                            (mod n q))))
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times q (div n q))
                      (mod n q))
                   (matita_arithmetics_nat.commutative_plus
                      (matita_arithmetics_nat.times q (div n q))
                      (mod n q))))
             (matita_basics_logic.rewrite_r
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.times q (div n q))
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   (pts.u pts.var)
                   (matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.S n)
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.times q (div n q))
                            (mod n q))))
                   (matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.S n)
                      (matita_arithmetics_nat.plus __ (matita_arithmetics_nat.S (mod n q)))))
                (matita_basics_logic.rewrite_r
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times q (div n q))
                      (matita_arithmetics_nat.S (mod n q)))
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      (pts.u pts.var)
                      (matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.S n)
                         __)
                      (matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.S n)
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.times q (div n q))
                            (matita_arithmetics_nat.S (mod n q)))))
                   (matita_basics_logic.refl
                      (pts.u pts.var)
                      (matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.S n)
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.times q (div n q))
                            (matita_arithmetics_nat.S (mod n q)))))
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.times q (div n q))
                         (mod n q)))
                   (matita_arithmetics_nat.plus_n_Sm
                      (matita_arithmetics_nat.times q (div n q))
                      (mod n q)))
                (matita_arithmetics_nat.times (div n q) q)
                (matita_arithmetics_nat.commutative_times (div n q) q)))))
    (H:(pts.El
          pts.var
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.S (mod n q))
             q)) =>
     matita_basics_logic.or_introl
       (matita_basics_logic.And
          (matita_basics_logic.eq matita_arithmetics_nat.nat (matita_arithmetics_nat.S (mod n q)) q)
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.S n)
             (matita_arithmetics_nat.times (matita_arithmetics_nat.S (div n q)) q)))
       (matita_basics_logic.And
          (matita_arithmetics_nat.lt (matita_arithmetics_nat.S (mod n q)) q)
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.S n)
             (matita_arithmetics_nat.plus
                (matita_arithmetics_nat.times (div n q) q)
                (matita_arithmetics_nat.S (mod n q)))))
       (matita_basics_logic.conj
          (matita_basics_logic.eq matita_arithmetics_nat.nat (matita_arithmetics_nat.S (mod n q)) q)
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.S n)
             (matita_arithmetics_nat.times (matita_arithmetics_nat.S (div n q)) q))
          (matita_basics_logic.rewrite_r
             matita_arithmetics_nat.nat
             q
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq matita_arithmetics_nat.nat __ q)
             (matita_basics_logic.refl matita_arithmetics_nat.nat q)
             (matita_arithmetics_nat.S (mod n q))
             H)
          (matita_basics_logic.rewrite_r
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.times q (matita_arithmetics_nat.S (div n q)))
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq matita_arithmetics_nat.nat (matita_arithmetics_nat.S n) __)
             (matita_basics_logic.rewrite_l
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.plus q (matita_arithmetics_nat.times q (div n q)))
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.S n)
                   __)
                (matita_basics_logic.eq_ind
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.S (mod n q))
                   (x_1:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    _x_2:(pts.El
                            pts.var
                            (matita_basics_logic.eq
                               matita_arithmetics_nat.nat
                               (matita_arithmetics_nat.S (mod n q))
                               x_1)) =>
                    matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.S n)
                      (matita_arithmetics_nat.plus
                         x_1
                         (matita_arithmetics_nat.times q (div n q))))
                   (matita_basics_logic.eq_f
                      matita_arithmetics_nat.nat
                      matita_arithmetics_nat.nat
                      matita_arithmetics_nat.S
                      n
                      (matita_arithmetics_nat.plus
                         (mod n q)
                         (matita_arithmetics_nat.times q (div n q)))
                      (matita_basics_logic.rewrite_l
                         matita_arithmetics_nat.nat
                         n
                         (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq matita_arithmetics_nat.nat n __)
                         (matita_basics_logic.refl matita_arithmetics_nat.nat n)
                         (matita_arithmetics_nat.plus
                            (mod n q)
                            (matita_arithmetics_nat.times q (div n q)))
                         (matita_basics_logic.rewrite_l
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.times q (div n q))
                               (mod n q))
                            (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                             matita_basics_logic.eq matita_arithmetics_nat.nat n __)
                            (matita_basics_logic.rewrite_l
                               matita_arithmetics_nat.nat
                               (matita_arithmetics_nat.times (div n q) q)
                               (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                matita_basics_logic.eq
                                  matita_arithmetics_nat.nat
                                  n
                                  (matita_arithmetics_nat.plus __ (mod n q)))
                               (div_mod n q)
                               (matita_arithmetics_nat.times q (div n q))
                               (matita_arithmetics_nat.commutative_times (div n q) q))
                            (matita_arithmetics_nat.plus
                               (mod n q)
                               (matita_arithmetics_nat.times q (div n q)))
                            (matita_arithmetics_nat.commutative_plus
                               (matita_arithmetics_nat.times q (div n q))
                               (mod n q)))))
                   q
                   H)
                (matita_arithmetics_nat.times q (matita_arithmetics_nat.S (div n q)))
                (matita_arithmetics_nat.times_n_Sm q (div n q)))
             (matita_arithmetics_nat.times (matita_arithmetics_nat.S (div n q)) q)
             (matita_arithmetics_nat.commutative_times (matita_arithmetics_nat.S (div n q)) q))))
    (matita_arithmetics_nat.le_to_or_lt_eq
       (matita_arithmetics_nat.S (mod n q))
       q
       (lt_mod_m_m n q posq)).

def injective_times_r :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) ->
  pts.El
    pts.var
    (matita_basics_relations.{|injective|}
       matita_arithmetics_nat.nat
       matita_arithmetics_nat.nat
       (m:(pts.El pts.var matita_arithmetics_nat.nat) => matita_arithmetics_nat.times n m))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) =>
  a:(pts.El pts.var matita_arithmetics_nat.nat) =>
  b:(pts.El pts.var matita_arithmetics_nat.nat) =>
  eqn:(pts.El
         pts.var
         (matita_basics_logic.eq
            matita_arithmetics_nat.nat
            (matita_arithmetics_nat.times n a)
            (matita_arithmetics_nat.times n b))) =>
  matita_basics_logic.eq_ind
    matita_arithmetics_nat.nat
    (div (matita_arithmetics_nat.times a n) n)
    (x_1:(pts.El pts.var matita_arithmetics_nat.nat) =>
     _x_2:(pts.El
             pts.var
             (matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (div (matita_arithmetics_nat.times a n) n)
                x_1)) =>
     matita_basics_logic.eq matita_arithmetics_nat.nat x_1 b)
    (matita_basics_logic.eq_ind
       matita_arithmetics_nat.nat
       (div (matita_arithmetics_nat.times b n) n)
       (x_1:(pts.El pts.var matita_arithmetics_nat.nat) =>
        _x_2:(pts.El
                pts.var
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   (div (matita_arithmetics_nat.times b n) n)
                   x_1)) =>
        matita_basics_logic.eq
          matita_arithmetics_nat.nat
          (div (matita_arithmetics_nat.times a n) n)
          x_1)
       (matita_basics_logic.rewrite_r
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.times n a)
          (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
           matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (div __ n)
             (div (matita_arithmetics_nat.times b n) n))
          (matita_basics_logic.rewrite_r
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.times n b)
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (div (matita_arithmetics_nat.times n a) n)
                (div __ n))
             (matita_basics_logic.rewrite_l
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.times n a)
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   (div (matita_arithmetics_nat.times n a) n)
                   (div __ n))
                (matita_basics_logic.refl
                   matita_arithmetics_nat.nat
                   (div (matita_arithmetics_nat.times n a) n))
                (matita_arithmetics_nat.times n b)
                eqn)
             (matita_arithmetics_nat.times b n)
             (matita_arithmetics_nat.commutative_times b n))
          (matita_arithmetics_nat.times a n)
          (matita_arithmetics_nat.commutative_times a n))
       b
       (div_times b n posn))
    a
    (div_times a n posn).

def injective_times_l :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) ->
  pts.El
    pts.var
    (matita_basics_relations.{|injective|}
       matita_arithmetics_nat.nat
       matita_arithmetics_nat.nat
       (m:(pts.El pts.var matita_arithmetics_nat.nat) => matita_arithmetics_nat.times m n))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  auto:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) =>
  x:(pts.El pts.var matita_arithmetics_nat.nat) =>
  y:(pts.El pts.var matita_arithmetics_nat.nat) =>
  auto':(pts.El
           pts.var
           (matita_basics_logic.eq
              matita_arithmetics_nat.nat
              (matita_arithmetics_nat.times x n)
              (matita_arithmetics_nat.times y n))) =>
  injective_times_r
    n
    auto
    x
    y
    (matita_basics_logic.rewrite_r
       matita_arithmetics_nat.nat
       (matita_arithmetics_nat.times n y)
       (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
        matita_basics_logic.eq matita_arithmetics_nat.nat __ (matita_arithmetics_nat.times n y))
       (matita_basics_logic.refl matita_arithmetics_nat.nat (matita_arithmetics_nat.times n y))
       (matita_arithmetics_nat.times n x)
       (matita_basics_logic.rewrite_l
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.times y n)
          (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
           matita_basics_logic.eq matita_arithmetics_nat.nat (matita_arithmetics_nat.times n x) __)
          (matita_basics_logic.rewrite_l
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.times x n)
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq
                matita_arithmetics_nat.nat
                __
                (matita_arithmetics_nat.times y n))
             auto'
             (matita_arithmetics_nat.times n x)
             (matita_arithmetics_nat.commutative_times x n))
          (matita_arithmetics_nat.times n y)
          (matita_arithmetics_nat.commutative_times y n))).

def lt_div_S :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) ->
  pts.El
    pts.var
    (matita_arithmetics_nat.lt
       n
       (matita_arithmetics_nat.times (matita_arithmetics_nat.S (div n m)) m))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posm:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) =>
  matita_basics_logic.eq_ind_r
    matita_arithmetics_nat.nat
    (matita_arithmetics_nat.plus (matita_arithmetics_nat.times (div n m) m) (mod n m))
    (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
     __:(pts.El
           pts.var
           (matita_basics_logic.eq
              matita_arithmetics_nat.nat
              x
              (matita_arithmetics_nat.plus (matita_arithmetics_nat.times (div n m) m) (mod n m)))) =>
     matita_arithmetics_nat.lt
       x
       (matita_arithmetics_nat.plus m (matita_arithmetics_nat.times (div n m) m)))
    (matita_basics_logic.eq_ind_r
       matita_arithmetics_nat.nat
       (matita_arithmetics_nat.plus (mod n m) (matita_arithmetics_nat.times (div n m) m))
       (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
        __:(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 x
                 (matita_arithmetics_nat.plus
                    (mod n m)
                    (matita_arithmetics_nat.times (div n m) m)))) =>
        matita_arithmetics_nat.lt
          x
          (matita_arithmetics_nat.plus m (matita_arithmetics_nat.times (div n m) m)))
       (matita_arithmetics_nat.monotonic_lt_plus_l
          (matita_arithmetics_nat.times (div n m) m)
          (mod n m)
          m
          (lt_mod_m_m n m posm))
       (matita_arithmetics_nat.plus (matita_arithmetics_nat.times (div n m) m) (mod n m))
       (matita_arithmetics_nat.commutative_plus (matita_arithmetics_nat.times (div n m) m) (mod n m)))
    n
    (div_mod n m).

def le_div :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) ->
  pts.El pts.var (matita_arithmetics_nat.le (div m n) m)
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) =>
  matita_basics_logic.eq_ind_r
    matita_arithmetics_nat.nat
    (matita_arithmetics_nat.plus (matita_arithmetics_nat.times (div m n) n) (mod m n))
    (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
     __:(pts.El
           pts.var
           (matita_basics_logic.eq
              matita_arithmetics_nat.nat
              x
              (matita_arithmetics_nat.plus (matita_arithmetics_nat.times (div m n) n) (mod m n)))) =>
     matita_arithmetics_nat.le (div m n) x)
    (matita_arithmetics_nat.transitive_le
       (div m n)
       (matita_arithmetics_nat.times (div m n) n)
       (matita_arithmetics_nat.plus (matita_arithmetics_nat.times (div m n) n) (mod m n))
       (matita_basics_logic.eq_coerc
          (matita_arithmetics_nat.le
             (matita_arithmetics_nat.times
                (div m n)
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             (matita_arithmetics_nat.times (div m n) n))
          (matita_arithmetics_nat.le (div m n) (matita_arithmetics_nat.times (div m n) n))
          (matita_arithmetics_nat.monotonic_le_times_r
             (div m n)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)
             n
             posn)
          (matita_basics_logic.rewrite_r
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.times n (div m n))
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq
                (pts.u pts.var)
                (matita_arithmetics_nat.le
                   (matita_arithmetics_nat.times
                      (div m n)
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   (matita_arithmetics_nat.times (div m n) n))
                (matita_arithmetics_nat.le (div m n) __))
             (matita_basics_logic.rewrite_l
                matita_arithmetics_nat.nat
                (div m n)
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   (pts.u pts.var)
                   (matita_arithmetics_nat.le __ (matita_arithmetics_nat.times (div m n) n))
                   (matita_arithmetics_nat.le
                      (div m n)
                      (matita_arithmetics_nat.times n (div m n))))
                (matita_basics_logic.rewrite_r
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.times n (div m n))
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      (pts.u pts.var)
                      (matita_arithmetics_nat.le (div m n) __)
                      (matita_arithmetics_nat.le
                         (div m n)
                         (matita_arithmetics_nat.times n (div m n))))
                   (matita_basics_logic.refl
                      (pts.u pts.var)
                      (matita_arithmetics_nat.le
                         (div m n)
                         (matita_arithmetics_nat.times n (div m n))))
                   (matita_arithmetics_nat.times (div m n) n)
                   (matita_arithmetics_nat.commutative_times (div m n) n))
                (matita_arithmetics_nat.times
                   (div m n)
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                (matita_arithmetics_nat.times_n_1 (div m n)))
             (matita_arithmetics_nat.times (div m n) n)
             (matita_arithmetics_nat.commutative_times (div m n) n)))
       (matita_arithmetics_nat.le_plus_n_r (mod m n) (matita_arithmetics_nat.times (div m n) n)))
    m
    (div_mod m n).

def le_plus_mod :
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O q)) ->
  pts.El
    pts.var
    (matita_arithmetics_nat.le
       (mod (matita_arithmetics_nat.plus m n) q)
       (matita_arithmetics_nat.plus (mod m q) (mod n q)))
  :=
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  q:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posq:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O q)) =>
  matita_basics_logic.Or_ind
    (matita_arithmetics_nat.le q (matita_arithmetics_nat.plus (mod m q) (mod n q)))
    (matita_basics_logic.Not
       (matita_arithmetics_nat.le q (matita_arithmetics_nat.plus (mod m q) (mod n q))))
    (_x_170:(pts.El
               pts.var
               (matita_basics_logic.Or
                  (matita_arithmetics_nat.le q (matita_arithmetics_nat.plus (mod m q) (mod n q)))
                  (matita_basics_logic.Not
                     (matita_arithmetics_nat.le
                        q
                        (matita_arithmetics_nat.plus (mod m q) (mod n q)))))) =>
     matita_arithmetics_nat.le
       (mod (matita_arithmetics_nat.plus m n) q)
       (matita_arithmetics_nat.plus (mod m q) (mod n q)))
    (Hle:(pts.El
            pts.var
            (matita_arithmetics_nat.le q (matita_arithmetics_nat.plus (mod m q) (mod n q)))) =>
     matita_arithmetics_nat.transitive_le
       (mod (matita_arithmetics_nat.plus m n) q)
       q
       (matita_arithmetics_nat.plus (mod m q) (mod n q))
       (matita_arithmetics_nat.le_S_S_to_le
          (mod (matita_arithmetics_nat.plus m n) q)
          q
          (matita_arithmetics_nat.le_S
             (matita_arithmetics_nat.S (mod (matita_arithmetics_nat.plus m n) q))
             q
             (lt_mod_m_m (matita_arithmetics_nat.plus m n) q posq)))
       Hle)
    (Hle:(pts.El
            pts.var
            (matita_basics_logic.Not
               (matita_arithmetics_nat.le q (matita_arithmetics_nat.plus (mod m q) (mod n q))))) =>
     matita_basics_logic.eq_coerc
       (matita_arithmetics_nat.le
          (mod (matita_arithmetics_nat.plus m n) q)
          (matita_arithmetics_nat.plus
             (mod (matita_arithmetics_nat.plus m n) q)
             matita_arithmetics_nat.O))
       (matita_arithmetics_nat.le
          (mod (matita_arithmetics_nat.plus m n) q)
          (matita_arithmetics_nat.plus (mod m q) (mod n q)))
       (matita_arithmetics_nat.le_plus_n_r
          matita_arithmetics_nat.O
          (mod (matita_arithmetics_nat.plus m n) q))
       (matita_basics_logic.rewrite_l
          matita_arithmetics_nat.nat
          (mod (matita_arithmetics_nat.plus m n) q)
          (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
           matita_basics_logic.eq
             (pts.u pts.var)
             (matita_arithmetics_nat.le
                (mod (matita_arithmetics_nat.plus m n) q)
                (matita_arithmetics_nat.plus
                   (mod (matita_arithmetics_nat.plus m n) q)
                   matita_arithmetics_nat.O))
             (matita_arithmetics_nat.le (mod (matita_arithmetics_nat.plus m n) q) __))
          (matita_basics_logic.rewrite_l
             matita_arithmetics_nat.nat
             (mod (matita_arithmetics_nat.plus m n) q)
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq
                (pts.u pts.var)
                (matita_arithmetics_nat.le (mod (matita_arithmetics_nat.plus m n) q) __)
                (matita_arithmetics_nat.le
                   (mod (matita_arithmetics_nat.plus m n) q)
                   (mod (matita_arithmetics_nat.plus m n) q)))
             (matita_basics_logic.refl
                (pts.u pts.var)
                (matita_arithmetics_nat.le
                   (mod (matita_arithmetics_nat.plus m n) q)
                   (mod (matita_arithmetics_nat.plus m n) q)))
             (matita_arithmetics_nat.plus
                (mod (matita_arithmetics_nat.plus m n) q)
                matita_arithmetics_nat.O)
             (matita_arithmetics_nat.plus_n_O (mod (matita_arithmetics_nat.plus m n) q)))
          (matita_arithmetics_nat.plus (mod m q) (mod n q))
          (div_mod_spec_to_eq2
             (matita_arithmetics_nat.plus m n)
             q
             (div (matita_arithmetics_nat.plus m n) q)
             (mod (matita_arithmetics_nat.plus m n) q)
             (matita_arithmetics_nat.plus (div m q) (div n q))
             (matita_arithmetics_nat.plus (mod m q) (mod n q))
             (div_mod_spec_div_mod (matita_arithmetics_nat.plus m n) q posq)
             (div_mod_spec_intro
                (matita_arithmetics_nat.plus m n)
                q
                (matita_arithmetics_nat.plus (div m q) (div n q))
                (matita_arithmetics_nat.plus (mod m q) (mod n q))
                (matita_arithmetics_nat.not_le_to_lt
                   q
                   (matita_arithmetics_nat.plus (mod m q) (mod n q))
                   Hle)
                (matita_basics_logic.eq_ind_r
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times (div n q) q)
                      (mod n q))
                   (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    __:(pts.El
                          pts.var
                          (matita_basics_logic.eq
                             matita_arithmetics_nat.nat
                             x
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.times (div n q) q)
                                (mod n q)))) =>
                    matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.plus m x)
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.plus (div m q) (div n q))
                            q)
                         (matita_arithmetics_nat.plus (mod m q) (mod n q))))
                   (matita_basics_logic.eq_coerc
                      (matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.plus
                               m
                               (matita_arithmetics_nat.times (div n q) q))
                            (mod n q))
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_nat.plus (div m q) (div n q))
                                  q)
                               (mod m q))
                            (mod n q)))
                      (matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.plus
                            m
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.times (div n q) q)
                               (mod n q)))
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_nat.plus (div m q) (div n q))
                               q)
                            (matita_arithmetics_nat.plus (mod m q) (mod n q))))
                      (matita_basics_logic.eq_f
                         matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat
                         (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          matita_arithmetics_nat.plus x (mod n q))
                         (matita_arithmetics_nat.plus
                            m
                            (matita_arithmetics_nat.times (div n q) q))
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_nat.plus (div m q) (div n q))
                               q)
                            (mod m q))
                         (matita_basics_logic.eq_ind_r
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.times (div m q) q)
                               (mod m q))
                            (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
                             __:(pts.El
                                   pts.var
                                   (matita_basics_logic.eq
                                      matita_arithmetics_nat.nat
                                      x
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times (div m q) q)
                                         (mod m q)))) =>
                             matita_basics_logic.eq
                               matita_arithmetics_nat.nat
                               (matita_arithmetics_nat.plus
                                  x
                                  (matita_arithmetics_nat.times (div n q) q))
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_nat.plus (div m q) (div n q))
                                     q)
                                  (mod m q)))
                            (matita_basics_logic.eq_coerc
                               (matita_basics_logic.eq
                                  matita_arithmetics_nat.nat
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.times
                                        q
                                        (matita_arithmetics_nat.plus (div m q) (div n q)))
                                     (mod m q))
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.times
                                        q
                                        (matita_arithmetics_nat.plus (div m q) (div n q)))
                                     (mod m q)))
                               (matita_basics_logic.eq
                                  matita_arithmetics_nat.nat
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.plus
                                        (matita_arithmetics_nat.times (div m q) q)
                                        (mod m q))
                                     (matita_arithmetics_nat.times (div n q) q))
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_nat.plus (div m q) (div n q))
                                        q)
                                     (mod m q)))
                               (matita_basics_logic.eq_f
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat
                                  (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                   matita_arithmetics_nat.plus x (mod m q))
                                  (matita_arithmetics_nat.times
                                     q
                                     (matita_arithmetics_nat.plus (div m q) (div n q)))
                                  (matita_arithmetics_nat.times
                                     q
                                     (matita_arithmetics_nat.plus (div m q) (div n q)))
                                  (matita_basics_logic.refl
                                     matita_arithmetics_nat.nat
                                     (matita_arithmetics_nat.times
                                        q
                                        (matita_arithmetics_nat.plus (div m q) (div n q)))))
                               (matita_basics_logic.rewrite_r
                                  matita_arithmetics_nat.nat
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.times (div m q) q)
                                     (matita_arithmetics_nat.plus
                                        (mod m q)
                                        (matita_arithmetics_nat.times (div n q) q)))
                                  (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                   matita_basics_logic.eq
                                     (pts.u pts.var)
                                     (matita_basics_logic.eq
                                        matita_arithmetics_nat.nat
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times
                                              q
                                              (matita_arithmetics_nat.plus
                                                 (div m q)
                                                 (div n q)))
                                           (mod m q))
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times
                                              q
                                              (matita_arithmetics_nat.plus
                                                 (div m q)
                                                 (div n q)))
                                           (mod m q)))
                                     (matita_basics_logic.eq
                                        matita_arithmetics_nat.nat
                                        __
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_nat.plus
                                                 (div m q)
                                                 (div n q))
                                              q)
                                           (mod m q))))
                                  (matita_basics_logic.rewrite_r
                                     matita_arithmetics_nat.nat
                                     (matita_arithmetics_nat.times q (div m q))
                                     (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                      matita_basics_logic.eq
                                        (pts.u pts.var)
                                        (matita_basics_logic.eq
                                           matita_arithmetics_nat.nat
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 q
                                                 (matita_arithmetics_nat.plus
                                                    (div m q)
                                                    (div n q)))
                                              (mod m q))
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 q
                                                 (matita_arithmetics_nat.plus
                                                    (div m q)
                                                    (div n q)))
                                              (mod m q)))
                                        (matita_basics_logic.eq
                                           matita_arithmetics_nat.nat
                                           (matita_arithmetics_nat.plus
                                              __
                                              (matita_arithmetics_nat.plus
                                                 (mod m q)
                                                 (matita_arithmetics_nat.times
                                                    (div n q)
                                                    q)))
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_nat.plus
                                                    (div m q)
                                                    (div n q))
                                                 q)
                                              (mod m q))))
                                     (matita_basics_logic.rewrite_r
                                        matita_arithmetics_nat.nat
                                        (matita_arithmetics_nat.times q (div n q))
                                        (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                         matita_basics_logic.eq
                                           (pts.u pts.var)
                                           (matita_basics_logic.eq
                                              matita_arithmetics_nat.nat
                                              (matita_arithmetics_nat.plus
                                                 (matita_arithmetics_nat.times
                                                    q
                                                    (matita_arithmetics_nat.plus
                                                       (div m q)
                                                       (div n q)))
                                                 (mod m q))
                                              (matita_arithmetics_nat.plus
                                                 (matita_arithmetics_nat.times
                                                    q
                                                    (matita_arithmetics_nat.plus
                                                       (div m q)
                                                       (div n q)))
                                                 (mod m q)))
                                           (matita_basics_logic.eq
                                              matita_arithmetics_nat.nat
                                              (matita_arithmetics_nat.plus
                                                 (matita_arithmetics_nat.times
                                                    q
                                                    (div m q))
                                                 (matita_arithmetics_nat.plus
                                                    (mod m q)
                                                    __))
                                              (matita_arithmetics_nat.plus
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_nat.plus
                                                       (div m q)
                                                       (div n q))
                                                    q)
                                                 (mod m q))))
                                        (matita_basics_logic.rewrite_r
                                           matita_arithmetics_nat.nat
                                           (matita_arithmetics_nat.plus
                                              (mod m q)
                                              (matita_arithmetics_nat.plus
                                                 (matita_arithmetics_nat.times
                                                    q
                                                    (div m q))
                                                 (matita_arithmetics_nat.times
                                                    q
                                                    (div n q))))
                                           (__:(pts.El
                                                  pts.var
                                                  matita_arithmetics_nat.nat) =>
                                            matita_basics_logic.eq
                                              (pts.u pts.var)
                                              (matita_basics_logic.eq
                                                 matita_arithmetics_nat.nat
                                                 (matita_arithmetics_nat.plus
                                                    (matita_arithmetics_nat.times
                                                       q
                                                       (matita_arithmetics_nat.plus
                                                          (div m q)
                                                          (div n q)))
                                                    (mod m q))
                                                 (matita_arithmetics_nat.plus
                                                    (matita_arithmetics_nat.times
                                                       q
                                                       (matita_arithmetics_nat.plus
                                                          (div m q)
                                                          (div n q)))
                                                    (mod m q)))
                                              (matita_basics_logic.eq
                                                 matita_arithmetics_nat.nat
                                                 __
                                                 (matita_arithmetics_nat.plus
                                                    (matita_arithmetics_nat.times
                                                       (matita_arithmetics_nat.plus
                                                          (div m q)
                                                          (div n q))
                                                       q)
                                                    (mod m q))))
                                           (matita_basics_logic.rewrite_l
                                              matita_arithmetics_nat.nat
                                              (matita_arithmetics_nat.times
                                                 q
                                                 (matita_arithmetics_nat.plus
                                                    (div m q)
                                                    (div n q)))
                                              (__:(pts.El
                                                     pts.var
                                                     matita_arithmetics_nat.nat) =>
                                               matita_basics_logic.eq
                                                 (pts.u pts.var)
                                                 (matita_basics_logic.eq
                                                    matita_arithmetics_nat.nat
                                                    (matita_arithmetics_nat.plus
                                                       (matita_arithmetics_nat.times
                                                          q
                                                          (matita_arithmetics_nat.plus
                                                             (div m q)
                                                             (div n q)))
                                                       (mod m q))
                                                    (matita_arithmetics_nat.plus
                                                       (matita_arithmetics_nat.times
                                                          q
                                                          (matita_arithmetics_nat.plus
                                                             (div m q)
                                                             (div n q)))
                                                       (mod m q)))
                                                 (matita_basics_logic.eq
                                                    matita_arithmetics_nat.nat
                                                    (matita_arithmetics_nat.plus
                                                       (mod m q)
                                                       __)
                                                    (matita_arithmetics_nat.plus
                                                       (matita_arithmetics_nat.times
                                                          (matita_arithmetics_nat.plus
                                                             (div m q)
                                                             (div n q))
                                                          q)
                                                       (mod m q))))
                                              (matita_basics_logic.rewrite_r
                                                 matita_arithmetics_nat.nat
                                                 (matita_arithmetics_nat.times
                                                    q
                                                    (matita_arithmetics_nat.plus
                                                       (div m q)
                                                       (div n q)))
                                                 (__:(pts.El
                                                        pts.var
                                                        matita_arithmetics_nat.nat) =>
                                                  matita_basics_logic.eq
                                                    (pts.u pts.var)
                                                    (matita_basics_logic.eq
                                                       matita_arithmetics_nat.nat
                                                       (matita_arithmetics_nat.plus
                                                          (matita_arithmetics_nat.times
                                                             q
                                                             (matita_arithmetics_nat.plus
                                                                (div m q)
                                                                (div n q)))
                                                          (mod m q))
                                                       (matita_arithmetics_nat.plus
                                                          (matita_arithmetics_nat.times
                                                             q
                                                             (matita_arithmetics_nat.plus
                                                                (div m q)
                                                                (div n q)))
                                                          (mod m q)))
                                                    (matita_basics_logic.eq
                                                       matita_arithmetics_nat.nat
                                                       (matita_arithmetics_nat.plus
                                                          (mod m q)
                                                          (matita_arithmetics_nat.times
                                                             q
                                                             (matita_arithmetics_nat.plus
                                                                (div m q)
                                                                (div n q))))
                                                       (matita_arithmetics_nat.plus
                                                          __
                                                          (mod m q))))
                                                 (matita_basics_logic.rewrite_r
                                                    matita_arithmetics_nat.nat
                                                    (matita_arithmetics_nat.plus
                                                       (mod m q)
                                                       (matita_arithmetics_nat.times
                                                          q
                                                          (matita_arithmetics_nat.plus
                                                             (div m q)
                                                             (div n q))))
                                                    (__:(pts.El
                                                           pts.var
                                                           matita_arithmetics_nat.nat) =>
                                                     matita_basics_logic.eq
                                                       (pts.u pts.var)
                                                       (matita_basics_logic.eq
                                                          matita_arithmetics_nat.nat
                                                          (matita_arithmetics_nat.plus
                                                             (matita_arithmetics_nat.times
                                                                q
                                                                (matita_arithmetics_nat.plus
                                                                   (div m q)
                                                                   (div n q)))
                                                             (mod m q))
                                                          (matita_arithmetics_nat.plus
                                                             (matita_arithmetics_nat.times
                                                                q
                                                                (matita_arithmetics_nat.plus
                                                                   (div m q)
                                                                   (div n q)))
                                                             (mod m q)))
                                                       (matita_basics_logic.eq
                                                          matita_arithmetics_nat.nat
                                                          (matita_arithmetics_nat.plus
                                                             (mod m q)
                                                             (matita_arithmetics_nat.times
                                                                q
                                                                (matita_arithmetics_nat.plus
                                                                   (div m q)
                                                                   (div n q))))
                                                          __))
                                                    (matita_basics_logic.rewrite_r
                                                       matita_arithmetics_nat.nat
                                                       (matita_arithmetics_nat.plus
                                                          (mod m q)
                                                          (matita_arithmetics_nat.times
                                                             q
                                                             (matita_arithmetics_nat.plus
                                                                (div m q)
                                                                (div n q))))
                                                       (__:(pts.El
                                                              pts.var
                                                              matita_arithmetics_nat.nat) =>
                                                        matita_basics_logic.eq
                                                          (pts.u pts.var)
                                                          (matita_basics_logic.eq
                                                             matita_arithmetics_nat.nat
                                                             __
                                                             (matita_arithmetics_nat.plus
                                                                (matita_arithmetics_nat.times
                                                                   q
                                                                   (matita_arithmetics_nat.plus
                                                                    (div m q)
                                                                    (div n q)))
                                                                (mod m q)))
                                                          (matita_basics_logic.eq
                                                             matita_arithmetics_nat.nat
                                                             (matita_arithmetics_nat.plus
                                                                (mod m q)
                                                                (matita_arithmetics_nat.times
                                                                   q
                                                                   (matita_arithmetics_nat.plus
                                                                    (div m q)
                                                                    (div n q))))
                                                             (matita_arithmetics_nat.plus
                                                                (mod m q)
                                                                (matita_arithmetics_nat.times
                                                                   q
                                                                   (matita_arithmetics_nat.plus
                                                                    (div m q)
                                                                    (div n q))))))
                                                       (matita_basics_logic.rewrite_r
                                                          matita_arithmetics_nat.nat
                                                          (matita_arithmetics_nat.plus
                                                             (mod m q)
                                                             (matita_arithmetics_nat.times
                                                                q
                                                                (matita_arithmetics_nat.plus
                                                                   (div m q)
                                                                   (div n q))))
                                                          (__:(pts.El
                                                                 pts.var
                                                                 matita_arithmetics_nat.nat) =>
                                                           matita_basics_logic.eq
                                                             (pts.u pts.var)
                                                             (matita_basics_logic.eq
                                                                matita_arithmetics_nat.nat
                                                                (matita_arithmetics_nat.plus
                                                                   (mod m q)
                                                                   (matita_arithmetics_nat.times
                                                                    q
                                                                    (matita_arithmetics_nat.plus
                                                                    (div
                                                                    m
                                                                    q)
                                                                    (div
                                                                    n
                                                                    q))))
                                                                __)
                                                             (matita_basics_logic.eq
                                                                matita_arithmetics_nat.nat
                                                                (matita_arithmetics_nat.plus
                                                                   (mod m q)
                                                                   (matita_arithmetics_nat.times
                                                                    q
                                                                    (matita_arithmetics_nat.plus
                                                                    (div
                                                                    m
                                                                    q)
                                                                    (div
                                                                    n
                                                                    q))))
                                                                (matita_arithmetics_nat.plus
                                                                   (mod m q)
                                                                   (matita_arithmetics_nat.times
                                                                    q
                                                                    (matita_arithmetics_nat.plus
                                                                    (div
                                                                    m
                                                                    q)
                                                                    (div
                                                                    n
                                                                    q))))))
                                                          (matita_basics_logic.refl
                                                             (pts.u pts.var)
                                                             (matita_basics_logic.eq
                                                                matita_arithmetics_nat.nat
                                                                (matita_arithmetics_nat.plus
                                                                   (mod m q)
                                                                   (matita_arithmetics_nat.times
                                                                    q
                                                                    (matita_arithmetics_nat.plus
                                                                    (div
                                                                    m
                                                                    q)
                                                                    (div
                                                                    n
                                                                    q))))
                                                                (matita_arithmetics_nat.plus
                                                                   (mod m q)
                                                                   (matita_arithmetics_nat.times
                                                                    q
                                                                    (matita_arithmetics_nat.plus
                                                                    (div
                                                                    m
                                                                    q)
                                                                    (div
                                                                    n
                                                                    q))))))
                                                          (matita_arithmetics_nat.plus
                                                             (matita_arithmetics_nat.times
                                                                q
                                                                (matita_arithmetics_nat.plus
                                                                   (div m q)
                                                                   (div n q)))
                                                             (mod m q))
                                                          (matita_arithmetics_nat.commutative_plus
                                                             (matita_arithmetics_nat.times
                                                                q
                                                                (matita_arithmetics_nat.plus
                                                                   (div m q)
                                                                   (div n q)))
                                                             (mod m q)))
                                                       (matita_arithmetics_nat.plus
                                                          (matita_arithmetics_nat.times
                                                             q
                                                             (matita_arithmetics_nat.plus
                                                                (div m q)
                                                                (div n q)))
                                                          (mod m q))
                                                       (matita_arithmetics_nat.commutative_plus
                                                          (matita_arithmetics_nat.times
                                                             q
                                                             (matita_arithmetics_nat.plus
                                                                (div m q)
                                                                (div n q)))
                                                          (mod m q)))
                                                    (matita_arithmetics_nat.plus
                                                       (matita_arithmetics_nat.times
                                                          q
                                                          (matita_arithmetics_nat.plus
                                                             (div m q)
                                                             (div n q)))
                                                       (mod m q))
                                                    (matita_arithmetics_nat.commutative_plus
                                                       (matita_arithmetics_nat.times
                                                          q
                                                          (matita_arithmetics_nat.plus
                                                             (div m q)
                                                             (div n q)))
                                                       (mod m q)))
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_nat.plus
                                                       (div m q)
                                                       (div n q))
                                                    q)
                                                 (matita_arithmetics_nat.commutative_times
                                                    (matita_arithmetics_nat.plus
                                                       (div m q)
                                                       (div n q))
                                                    q))
                                              (matita_arithmetics_nat.plus
                                                 (matita_arithmetics_nat.times
                                                    q
                                                    (div m q))
                                                 (matita_arithmetics_nat.times
                                                    q
                                                    (div n q)))
                                              (matita_arithmetics_nat.distributive_times_plus
                                                 q
                                                 (div m q)
                                                 (div n q)))
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times q (div m q))
                                              (matita_arithmetics_nat.plus
                                                 (mod m q)
                                                 (matita_arithmetics_nat.times
                                                    q
                                                    (div n q))))
                                           (matita_basics_logic.rewrite_l
                                              matita_arithmetics_nat.nat
                                              (matita_arithmetics_nat.plus
                                                 (matita_arithmetics_nat.plus
                                                    (mod m q)
                                                    (matita_arithmetics_nat.times
                                                       q
                                                       (div m q)))
                                                 (matita_arithmetics_nat.times
                                                    q
                                                    (div n q)))
                                              (__:(pts.El
                                                     pts.var
                                                     matita_arithmetics_nat.nat) =>
                                               matita_basics_logic.eq
                                                 matita_arithmetics_nat.nat
                                                 (matita_arithmetics_nat.plus
                                                    (matita_arithmetics_nat.times
                                                       q
                                                       (div m q))
                                                    (matita_arithmetics_nat.plus
                                                       (mod m q)
                                                       (matita_arithmetics_nat.times
                                                          q
                                                          (div n q))))
                                                 __)
                                              (matita_arithmetics_nat.assoc_plus1
                                                 (matita_arithmetics_nat.times
                                                    q
                                                    (div n q))
                                                 (mod m q)
                                                 (matita_arithmetics_nat.times
                                                    q
                                                    (div m q)))
                                              (matita_arithmetics_nat.plus
                                                 (mod m q)
                                                 (matita_arithmetics_nat.plus
                                                    (matita_arithmetics_nat.times
                                                       q
                                                       (div m q))
                                                    (matita_arithmetics_nat.times
                                                       q
                                                       (div n q))))
                                              (matita_arithmetics_nat.associative_plus
                                                 (mod m q)
                                                 (matita_arithmetics_nat.times
                                                    q
                                                    (div m q))
                                                 (matita_arithmetics_nat.times
                                                    q
                                                    (div n q)))))
                                        (matita_arithmetics_nat.times (div n q) q)
                                        (matita_arithmetics_nat.commutative_times
                                           (div n q)
                                           q))
                                     (matita_arithmetics_nat.times (div m q) q)
                                     (matita_arithmetics_nat.commutative_times (div m q) q))
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.plus
                                        (matita_arithmetics_nat.times (div m q) q)
                                        (mod m q))
                                     (matita_arithmetics_nat.times (div n q) q))
                                  (matita_arithmetics_nat.associative_plus
                                     (matita_arithmetics_nat.times (div m q) q)
                                     (mod m q)
                                     (matita_arithmetics_nat.times (div n q) q))))
                            m
                            (div_mod m q)))
                      (matita_basics_logic.rewrite_r
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.plus
                            m
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.times (div n q) q)
                               (mod n q)))
                         (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq
                            (pts.u pts.var)
                            (matita_basics_logic.eq
                               matita_arithmetics_nat.nat
                               __
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_nat.plus (div m q) (div n q))
                                        q)
                                     (mod m q))
                                  (mod n q)))
                            (matita_basics_logic.eq
                               matita_arithmetics_nat.nat
                               (matita_arithmetics_nat.plus
                                  m
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.times (div n q) q)
                                     (mod n q)))
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_nat.plus (div m q) (div n q))
                                     q)
                                  (matita_arithmetics_nat.plus (mod m q) (mod n q)))))
                         (matita_basics_logic.rewrite_r
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_nat.plus (div m q) (div n q))
                                  q)
                               (matita_arithmetics_nat.plus (mod m q) (mod n q)))
                            (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                             matita_basics_logic.eq
                               (pts.u pts.var)
                               (matita_basics_logic.eq
                                  matita_arithmetics_nat.nat
                                  (matita_arithmetics_nat.plus
                                     m
                                     (matita_arithmetics_nat.plus
                                        (matita_arithmetics_nat.times (div n q) q)
                                        (mod n q)))
                                  __)
                               (matita_basics_logic.eq
                                  matita_arithmetics_nat.nat
                                  (matita_arithmetics_nat.plus
                                     m
                                     (matita_arithmetics_nat.plus
                                        (matita_arithmetics_nat.times (div n q) q)
                                        (mod n q)))
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_nat.plus (div m q) (div n q))
                                        q)
                                     (matita_arithmetics_nat.plus (mod m q) (mod n q)))))
                            (matita_basics_logic.refl
                               (pts.u pts.var)
                               (matita_basics_logic.eq
                                  matita_arithmetics_nat.nat
                                  (matita_arithmetics_nat.plus
                                     m
                                     (matita_arithmetics_nat.plus
                                        (matita_arithmetics_nat.times (div n q) q)
                                        (mod n q)))
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_nat.plus (div m q) (div n q))
                                        q)
                                     (matita_arithmetics_nat.plus (mod m q) (mod n q)))))
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_nat.plus (div m q) (div n q))
                                     q)
                                  (mod m q))
                               (mod n q))
                            (matita_arithmetics_nat.associative_plus
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_nat.plus (div m q) (div n q))
                                  q)
                               (mod m q)
                               (mod n q)))
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.plus
                               m
                               (matita_arithmetics_nat.times (div n q) q))
                            (mod n q))
                         (matita_arithmetics_nat.associative_plus
                            m
                            (matita_arithmetics_nat.times (div n q) q)
                            (mod n q))))
                   n
                   (div_mod n q))))))
    (matita_arithmetics_nat.decidable_le q (matita_arithmetics_nat.plus (mod m q) (mod n q))).

def le_plus_div :
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O q)) ->
  pts.El
    pts.var
    (matita_arithmetics_nat.le
       (matita_arithmetics_nat.plus (div m q) (div n q))
       (div (matita_arithmetics_nat.plus m n) q))
  :=
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  q:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posq:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O q)) =>
  matita_arithmetics_nat.le_times_to_le
    q
    (matita_arithmetics_nat.plus (div m q) (div n q))
    (div (matita_arithmetics_nat.plus m n) q)
    posq
    (matita_arithmetics_nat.le_plus_to_le_r
       (mod (matita_arithmetics_nat.plus m n) q)
       (matita_arithmetics_nat.times q (matita_arithmetics_nat.plus (div m q) (div n q)))
       (matita_arithmetics_nat.times q (div (matita_arithmetics_nat.plus m n) q))
       (matita_basics_logic.eq_ind_r
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.times (div (matita_arithmetics_nat.plus m n) q) q)
          (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
           __:(pts.El
                 pts.var
                 (matita_basics_logic.eq
                    matita_arithmetics_nat.nat
                    x
                    (matita_arithmetics_nat.times (div (matita_arithmetics_nat.plus m n) q) q))) =>
           matita_arithmetics_nat.le
             (matita_arithmetics_nat.plus
                (matita_arithmetics_nat.times q (matita_arithmetics_nat.plus (div m q) (div n q)))
                (mod (matita_arithmetics_nat.plus m n) q))
             (matita_arithmetics_nat.plus x (mod (matita_arithmetics_nat.plus m n) q)))
          (matita_basics_logic.eq_ind
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.plus m n)
             (x_1:(pts.El pts.var matita_arithmetics_nat.nat) =>
              _x_2:(pts.El
                      pts.var
                      (matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.plus m n)
                         x_1)) =>
              matita_arithmetics_nat.le
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.times
                      q
                      (matita_arithmetics_nat.plus (div m q) (div n q)))
                   (mod (matita_arithmetics_nat.plus m n) q))
                x_1)
             (matita_basics_logic.eq_ind_r
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.plus (matita_arithmetics_nat.times (div m q) q) (mod m q))
                (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 __:(pts.El
                       pts.var
                       (matita_basics_logic.eq
                          matita_arithmetics_nat.nat
                          x
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.times (div m q) q)
                             (mod m q)))) =>
                 matita_arithmetics_nat.le
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times
                         q
                         (matita_arithmetics_nat.plus (div m q) (div n q)))
                      (mod (matita_arithmetics_nat.plus m n) q))
                   (matita_arithmetics_nat.plus x n))
                (matita_basics_logic.eq_ind_r
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times (div n q) q)
                      (mod n q))
                   (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    __:(pts.El
                          pts.var
                          (matita_basics_logic.eq
                             matita_arithmetics_nat.nat
                             x
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.times (div n q) q)
                                (mod n q)))) =>
                    matita_arithmetics_nat.le
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.times
                            q
                            (matita_arithmetics_nat.plus (div m q) (div n q)))
                         (mod (matita_arithmetics_nat.plus m n) q))
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.times (div m q) q)
                            (mod m q))
                         x))
                   (matita_basics_logic.eq_ind_r
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.plus
                         (mod m q)
                         (matita_arithmetics_nat.times (div m q) q))
                      (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       __:(pts.El
                             pts.var
                             (matita_basics_logic.eq
                                matita_arithmetics_nat.nat
                                x
                                (matita_arithmetics_nat.plus
                                   (mod m q)
                                   (matita_arithmetics_nat.times (div m q) q)))) =>
                       matita_arithmetics_nat.le
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.times
                               q
                               (matita_arithmetics_nat.plus (div m q) (div n q)))
                            (mod (matita_arithmetics_nat.plus m n) q))
                         (matita_arithmetics_nat.plus
                            x
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.times (div n q) q)
                               (mod n q))))
                      (matita_basics_logic.eq_ind_r
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.plus
                            (mod m q)
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.times (div m q) q)
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.times (div n q) q)
                                  (mod n q))))
                         (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          __:(pts.El
                                pts.var
                                (matita_basics_logic.eq
                                   matita_arithmetics_nat.nat
                                   x
                                   (matita_arithmetics_nat.plus
                                      (mod m q)
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times (div m q) q)
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_nat.times (div n q) q)
                                            (mod n q)))))) =>
                          matita_arithmetics_nat.le
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.times
                                  q
                                  (matita_arithmetics_nat.plus (div m q) (div n q)))
                               (mod (matita_arithmetics_nat.plus m n) q))
                            x)
                         (matita_basics_logic.eq_ind
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.times (div m q) q)
                                  (matita_arithmetics_nat.times (div n q) q))
                               (mod n q))
                            (x_1:(pts.El pts.var matita_arithmetics_nat.nat) =>
                             _x_2:(pts.El
                                     pts.var
                                     (matita_basics_logic.eq
                                        matita_arithmetics_nat.nat
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 (div m q)
                                                 q)
                                              (matita_arithmetics_nat.times
                                                 (div n q)
                                                 q))
                                           (mod n q))
                                        x_1)) =>
                             matita_arithmetics_nat.le
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.times
                                     q
                                     (matita_arithmetics_nat.plus (div m q) (div n q)))
                                  (mod (matita_arithmetics_nat.plus m n) q))
                               (matita_arithmetics_nat.plus (mod m q) x_1))
                            (matita_basics_logic.eq_coerc
                               (matita_arithmetics_nat.le
                                  (matita_arithmetics_nat.plus
                                     (mod (matita_arithmetics_nat.plus m n) q)
                                     (matita_arithmetics_nat.times
                                        q
                                        (matita_arithmetics_nat.plus (div m q) (div n q))))
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.plus (mod m q) (mod n q))
                                     (matita_arithmetics_nat.times
                                        q
                                        (matita_arithmetics_nat.plus (div m q) (div n q)))))
                               (matita_arithmetics_nat.le
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.times
                                        q
                                        (matita_arithmetics_nat.plus (div m q) (div n q)))
                                     (mod (matita_arithmetics_nat.plus m n) q))
                                  (matita_arithmetics_nat.plus
                                     (mod m q)
                                     (matita_arithmetics_nat.plus
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times (div m q) q)
                                           (matita_arithmetics_nat.times (div n q) q))
                                        (mod n q))))
                               (matita_arithmetics_nat.monotonic_le_plus_l
                                  (matita_arithmetics_nat.times
                                     q
                                     (matita_arithmetics_nat.plus (div m q) (div n q)))
                                  (mod (matita_arithmetics_nat.plus m n) q)
                                  (matita_arithmetics_nat.plus (mod m q) (mod n q))
                                  (le_plus_mod m n q posq))
                               (matita_basics_logic.rewrite_r
                                  matita_arithmetics_nat.nat
                                  (matita_arithmetics_nat.plus
                                     (mod (matita_arithmetics_nat.plus m n) q)
                                     (matita_arithmetics_nat.times
                                        q
                                        (matita_arithmetics_nat.plus (div m q) (div n q))))
                                  (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                   matita_basics_logic.eq
                                     (pts.u pts.var)
                                     (matita_arithmetics_nat.le
                                        (matita_arithmetics_nat.plus
                                           (mod (matita_arithmetics_nat.plus m n) q)
                                           (matita_arithmetics_nat.times
                                              q
                                              (matita_arithmetics_nat.plus
                                                 (div m q)
                                                 (div n q))))
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.plus
                                              (mod m q)
                                              (mod n q))
                                           (matita_arithmetics_nat.times
                                              q
                                              (matita_arithmetics_nat.plus
                                                 (div m q)
                                                 (div n q)))))
                                     (matita_arithmetics_nat.le
                                        __
                                        (matita_arithmetics_nat.plus
                                           (mod m q)
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.plus
                                                 (matita_arithmetics_nat.times
                                                    (div m q)
                                                    q)
                                                 (matita_arithmetics_nat.times
                                                    (div n q)
                                                    q))
                                              (mod n q)))))
                                  (matita_basics_logic.rewrite_r
                                     matita_arithmetics_nat.nat
                                     (matita_arithmetics_nat.times q (div m q))
                                     (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                      matita_basics_logic.eq
                                        (pts.u pts.var)
                                        (matita_arithmetics_nat.le
                                           (matita_arithmetics_nat.plus
                                              (mod (matita_arithmetics_nat.plus m n) q)
                                              (matita_arithmetics_nat.times
                                                 q
                                                 (matita_arithmetics_nat.plus
                                                    (div m q)
                                                    (div n q))))
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.plus
                                                 (mod m q)
                                                 (mod n q))
                                              (matita_arithmetics_nat.times
                                                 q
                                                 (matita_arithmetics_nat.plus
                                                    (div m q)
                                                    (div n q)))))
                                        (matita_arithmetics_nat.le
                                           (matita_arithmetics_nat.plus
                                              (mod (matita_arithmetics_nat.plus m n) q)
                                              (matita_arithmetics_nat.times
                                                 q
                                                 (matita_arithmetics_nat.plus
                                                    (div m q)
                                                    (div n q))))
                                           (matita_arithmetics_nat.plus
                                              (mod m q)
                                              (matita_arithmetics_nat.plus
                                                 (matita_arithmetics_nat.plus
                                                    __
                                                    (matita_arithmetics_nat.times
                                                       (div n q)
                                                       q))
                                                 (mod n q)))))
                                     (matita_basics_logic.rewrite_r
                                        matita_arithmetics_nat.nat
                                        (matita_arithmetics_nat.times q (div n q))
                                        (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                                         matita_basics_logic.eq
                                           (pts.u pts.var)
                                           (matita_arithmetics_nat.le
                                              (matita_arithmetics_nat.plus
                                                 (mod
                                                    (matita_arithmetics_nat.plus m n)
                                                    q)
                                                 (matita_arithmetics_nat.times
                                                    q
                                                    (matita_arithmetics_nat.plus
                                                       (div m q)
                                                       (div n q))))
                                              (matita_arithmetics_nat.plus
                                                 (matita_arithmetics_nat.plus
                                                    (mod m q)
                                                    (mod n q))
                                                 (matita_arithmetics_nat.times
                                                    q
                                                    (matita_arithmetics_nat.plus
                                                       (div m q)
                                                       (div n q)))))
                                           (matita_arithmetics_nat.le
                                              (matita_arithmetics_nat.plus
                                                 (mod
                                                    (matita_arithmetics_nat.plus m n)
                                                    q)
                                                 (matita_arithmetics_nat.times
                                                    q
                                                    (matita_arithmetics_nat.plus
                                                       (div m q)
                                                       (div n q))))
                                              (matita_arithmetics_nat.plus
                                                 (mod m q)
                                                 (matita_arithmetics_nat.plus
                                                    (matita_arithmetics_nat.plus
                                                       (matita_arithmetics_nat.times
                                                          q
                                                          (div m q))
                                                       __)
                                                    (mod n q)))))
                                        (matita_basics_logic.rewrite_l
                                           matita_arithmetics_nat.nat
                                           (matita_arithmetics_nat.times
                                              q
                                              (matita_arithmetics_nat.plus
                                                 (div m q)
                                                 (div n q)))
                                           (__:(pts.El
                                                  pts.var
                                                  matita_arithmetics_nat.nat) =>
                                            matita_basics_logic.eq
                                              (pts.u pts.var)
                                              (matita_arithmetics_nat.le
                                                 (matita_arithmetics_nat.plus
                                                    (mod
                                                       (matita_arithmetics_nat.plus
                                                          m
                                                          n)
                                                       q)
                                                    (matita_arithmetics_nat.times
                                                       q
                                                       (matita_arithmetics_nat.plus
                                                          (div m q)
                                                          (div n q))))
                                                 (matita_arithmetics_nat.plus
                                                    (matita_arithmetics_nat.plus
                                                       (mod m q)
                                                       (mod n q))
                                                    (matita_arithmetics_nat.times
                                                       q
                                                       (matita_arithmetics_nat.plus
                                                          (div m q)
                                                          (div n q)))))
                                              (matita_arithmetics_nat.le
                                                 (matita_arithmetics_nat.plus
                                                    (mod
                                                       (matita_arithmetics_nat.plus
                                                          m
                                                          n)
                                                       q)
                                                    (matita_arithmetics_nat.times
                                                       q
                                                       (matita_arithmetics_nat.plus
                                                          (div m q)
                                                          (div n q))))
                                                 (matita_arithmetics_nat.plus
                                                    (mod m q)
                                                    (matita_arithmetics_nat.plus
                                                       __
                                                       (mod n q)))))
                                           (matita_basics_logic.rewrite_r
                                              matita_arithmetics_nat.nat
                                              (matita_arithmetics_nat.plus
                                                 (mod n q)
                                                 (matita_arithmetics_nat.times
                                                    q
                                                    (matita_arithmetics_nat.plus
                                                       (div m q)
                                                       (div n q))))
                                              (__:(pts.El
                                                     pts.var
                                                     matita_arithmetics_nat.nat) =>
                                               matita_basics_logic.eq
                                                 (pts.u pts.var)
                                                 (matita_arithmetics_nat.le
                                                    (matita_arithmetics_nat.plus
                                                       (mod
                                                          (matita_arithmetics_nat.plus
                                                             m
                                                             n)
                                                          q)
                                                       (matita_arithmetics_nat.times
                                                          q
                                                          (matita_arithmetics_nat.plus
                                                             (div m q)
                                                             (div n q))))
                                                    (matita_arithmetics_nat.plus
                                                       (matita_arithmetics_nat.plus
                                                          (mod m q)
                                                          (mod n q))
                                                       (matita_arithmetics_nat.times
                                                          q
                                                          (matita_arithmetics_nat.plus
                                                             (div m q)
                                                             (div n q)))))
                                                 (matita_arithmetics_nat.le
                                                    (matita_arithmetics_nat.plus
                                                       (mod
                                                          (matita_arithmetics_nat.plus
                                                             m
                                                             n)
                                                          q)
                                                       (matita_arithmetics_nat.times
                                                          q
                                                          (matita_arithmetics_nat.plus
                                                             (div m q)
                                                             (div n q))))
                                                    (matita_arithmetics_nat.plus
                                                       (mod m q)
                                                       __)))
                                              (matita_basics_logic.rewrite_r
                                                 matita_arithmetics_nat.nat
                                                 (matita_arithmetics_nat.plus
                                                    (mod m q)
                                                    (matita_arithmetics_nat.plus
                                                       (mod n q)
                                                       (matita_arithmetics_nat.times
                                                          q
                                                          (matita_arithmetics_nat.plus
                                                             (div m q)
                                                             (div n q)))))
                                                 (__:(pts.El
                                                        pts.var
                                                        matita_arithmetics_nat.nat) =>
                                                  matita_basics_logic.eq
                                                    (pts.u pts.var)
                                                    (matita_arithmetics_nat.le
                                                       (matita_arithmetics_nat.plus
                                                          (mod
                                                             (matita_arithmetics_nat.plus
                                                                m
                                                                n)
                                                             q)
                                                          (matita_arithmetics_nat.times
                                                             q
                                                             (matita_arithmetics_nat.plus
                                                                (div m q)
                                                                (div n q))))
                                                       __)
                                                    (matita_arithmetics_nat.le
                                                       (matita_arithmetics_nat.plus
                                                          (mod
                                                             (matita_arithmetics_nat.plus
                                                                m
                                                                n)
                                                             q)
                                                          (matita_arithmetics_nat.times
                                                             q
                                                             (matita_arithmetics_nat.plus
                                                                (div m q)
                                                                (div n q))))
                                                       (matita_arithmetics_nat.plus
                                                          (mod m q)
                                                          (matita_arithmetics_nat.plus
                                                             (mod n q)
                                                             (matita_arithmetics_nat.times
                                                                q
                                                                (matita_arithmetics_nat.plus
                                                                   (div m q)
                                                                   (div n q)))))))
                                                 (matita_basics_logic.refl
                                                    (pts.u pts.var)
                                                    (matita_arithmetics_nat.le
                                                       (matita_arithmetics_nat.plus
                                                          (mod
                                                             (matita_arithmetics_nat.plus
                                                                m
                                                                n)
                                                             q)
                                                          (matita_arithmetics_nat.times
                                                             q
                                                             (matita_arithmetics_nat.plus
                                                                (div m q)
                                                                (div n q))))
                                                       (matita_arithmetics_nat.plus
                                                          (mod m q)
                                                          (matita_arithmetics_nat.plus
                                                             (mod n q)
                                                             (matita_arithmetics_nat.times
                                                                q
                                                                (matita_arithmetics_nat.plus
                                                                   (div m q)
                                                                   (div n q)))))))
                                                 (matita_arithmetics_nat.plus
                                                    (matita_arithmetics_nat.plus
                                                       (mod m q)
                                                       (mod n q))
                                                    (matita_arithmetics_nat.times
                                                       q
                                                       (matita_arithmetics_nat.plus
                                                          (div m q)
                                                          (div n q))))
                                                 (matita_arithmetics_nat.associative_plus
                                                    (mod m q)
                                                    (mod n q)
                                                    (matita_arithmetics_nat.times
                                                       q
                                                       (matita_arithmetics_nat.plus
                                                          (div m q)
                                                          (div n q)))))
                                              (matita_arithmetics_nat.plus
                                                 (matita_arithmetics_nat.times
                                                    q
                                                    (matita_arithmetics_nat.plus
                                                       (div m q)
                                                       (div n q)))
                                                 (mod n q))
                                              (matita_arithmetics_nat.commutative_plus
                                                 (matita_arithmetics_nat.times
                                                    q
                                                    (matita_arithmetics_nat.plus
                                                       (div m q)
                                                       (div n q)))
                                                 (mod n q)))
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times q (div m q))
                                              (matita_arithmetics_nat.times q (div n q)))
                                           (matita_arithmetics_nat.distributive_times_plus
                                              q
                                              (div m q)
                                              (div n q)))
                                        (matita_arithmetics_nat.times (div n q) q)
                                        (matita_arithmetics_nat.commutative_times
                                           (div n q)
                                           q))
                                     (matita_arithmetics_nat.times (div m q) q)
                                     (matita_arithmetics_nat.commutative_times (div m q) q))
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.times
                                        q
                                        (matita_arithmetics_nat.plus (div m q) (div n q)))
                                     (mod (matita_arithmetics_nat.plus m n) q))
                                  (matita_arithmetics_nat.commutative_plus
                                     (matita_arithmetics_nat.times
                                        q
                                        (matita_arithmetics_nat.plus (div m q) (div n q)))
                                     (mod (matita_arithmetics_nat.plus m n) q))))
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.times (div m q) q)
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.times (div n q) q)
                                  (mod n q)))
                            (matita_arithmetics_nat.associative_plus
                               (matita_arithmetics_nat.times (div m q) q)
                               (matita_arithmetics_nat.times (div n q) q)
                               (mod n q)))
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.plus
                               (mod m q)
                               (matita_arithmetics_nat.times (div m q) q))
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.times (div n q) q)
                               (mod n q)))
                         (matita_arithmetics_nat.associative_plus
                            (mod m q)
                            (matita_arithmetics_nat.times (div m q) q)
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.times (div n q) q)
                               (mod n q))))
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.times (div m q) q)
                         (mod m q))
                      (matita_arithmetics_nat.commutative_plus
                         (matita_arithmetics_nat.times (div m q) q)
                         (mod m q)))
                   n
                   (div_mod n q))
                m
                (div_mod m q))
             (matita_arithmetics_nat.plus
                (matita_arithmetics_nat.times (div (matita_arithmetics_nat.plus m n) q) q)
                (mod (matita_arithmetics_nat.plus m n) q))
             (div_mod (matita_arithmetics_nat.plus m n) q))
          (matita_arithmetics_nat.times q (div (matita_arithmetics_nat.plus m n) q))
          (matita_arithmetics_nat.commutative_times q (div (matita_arithmetics_nat.plus m n) q)))).

def le_times_to_le_div :
  a:(pts.El pts.var matita_arithmetics_nat.nat) ->
  b:(pts.El pts.var matita_arithmetics_nat.nat) ->
  c:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O b)) ->
  __1:(pts.El pts.var (matita_arithmetics_nat.le (matita_arithmetics_nat.times b c) a)) ->
  pts.El pts.var (matita_arithmetics_nat.le c (div a b))
  :=
  a:(pts.El pts.var matita_arithmetics_nat.nat) =>
  b:(pts.El pts.var matita_arithmetics_nat.nat) =>
  c:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posb:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O b)) =>
  Hle:(pts.El pts.var (matita_arithmetics_nat.le (matita_arithmetics_nat.times b c) a)) =>
  matita_arithmetics_nat.le_S_S_to_le
    c
    (div a b)
    (matita_arithmetics_nat.lt_times_n_to_lt_l
       b
       c
       (matita_arithmetics_nat.S (div a b))
       (matita_arithmetics_nat.le_to_lt_to_lt
          (matita_arithmetics_nat.times c b)
          a
          (matita_arithmetics_nat.times (matita_arithmetics_nat.S (div a b)) b)
          (matita_basics_logic.eq_coerc
             (matita_arithmetics_nat.le (matita_arithmetics_nat.times b c) a)
             (matita_arithmetics_nat.le (matita_arithmetics_nat.times c b) a)
             Hle
             (matita_basics_logic.rewrite_r
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.times b c)
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   (pts.u pts.var)
                   (matita_arithmetics_nat.le (matita_arithmetics_nat.times b c) a)
                   (matita_arithmetics_nat.le __ a))
                (matita_basics_logic.refl
                   (pts.u pts.var)
                   (matita_arithmetics_nat.le (matita_arithmetics_nat.times b c) a))
                (matita_arithmetics_nat.times c b)
                (matita_arithmetics_nat.commutative_times c b)))
          (lt_div_S a b posb))).

def le_times_to_le_div2 :
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O q)) ->
  __1:(pts.El pts.var (matita_arithmetics_nat.le n (matita_arithmetics_nat.times m q))) ->
  pts.El pts.var (matita_arithmetics_nat.le (div n q) m)
  :=
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  q:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posq:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O q)) =>
  Hle:(pts.El pts.var (matita_arithmetics_nat.le n (matita_arithmetics_nat.times m q))) =>
  matita_arithmetics_nat.le_times_to_le
    q
    (div n q)
    m
    posq
    (matita_arithmetics_nat.le_plus_to_le
       (mod n q)
       (matita_arithmetics_nat.times q (div n q))
       (matita_arithmetics_nat.times q m)
       (matita_arithmetics_nat.le_plus_a
          (mod n q)
          (matita_arithmetics_nat.plus (mod n q) (matita_arithmetics_nat.times q (div n q)))
          (matita_arithmetics_nat.times q m)
          (matita_basics_logic.eq_coerc
             (matita_arithmetics_nat.le n (matita_arithmetics_nat.times m q))
             (matita_arithmetics_nat.le
                (matita_arithmetics_nat.plus (mod n q) (matita_arithmetics_nat.times q (div n q)))
                (matita_arithmetics_nat.times q m))
             Hle
             (matita_basics_logic.rewrite_l
                matita_arithmetics_nat.nat
                n
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   (pts.u pts.var)
                   (matita_arithmetics_nat.le n (matita_arithmetics_nat.times m q))
                   (matita_arithmetics_nat.le __ (matita_arithmetics_nat.times q m)))
                (matita_basics_logic.rewrite_r
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.times m q)
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      (pts.u pts.var)
                      (matita_arithmetics_nat.le n (matita_arithmetics_nat.times m q))
                      (matita_arithmetics_nat.le n __))
                   (matita_basics_logic.refl
                      (pts.u pts.var)
                      (matita_arithmetics_nat.le n (matita_arithmetics_nat.times m q)))
                   (matita_arithmetics_nat.times q m)
                   (matita_arithmetics_nat.commutative_times q m))
                (matita_arithmetics_nat.plus (mod n q) (matita_arithmetics_nat.times q (div n q)))
                (matita_basics_logic.rewrite_l
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times q (div n q))
                      (mod n q))
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq matita_arithmetics_nat.nat n __)
                   (matita_basics_logic.rewrite_l
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.times (div n q) q)
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         n
                         (matita_arithmetics_nat.plus __ (mod n q)))
                      (div_mod n q)
                      (matita_arithmetics_nat.times q (div n q))
                      (matita_arithmetics_nat.commutative_times (div n q) q))
                   (matita_arithmetics_nat.plus
                      (mod n q)
                      (matita_arithmetics_nat.times q (div n q)))
                   (matita_arithmetics_nat.commutative_plus
                      (matita_arithmetics_nat.times q (div n q))
                      (mod n q))))))).

def lt_times_to_lt_div :
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt n (matita_arithmetics_nat.times m q))) ->
  pts.El pts.var (matita_arithmetics_nat.lt (div n q) m)
  :=
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  q:(pts.El pts.var matita_arithmetics_nat.nat) =>
  Hlt:(pts.El pts.var (matita_arithmetics_nat.lt n (matita_arithmetics_nat.times m q))) =>
  matita_arithmetics_nat.lt_times_n_to_lt_l
    q
    (div n q)
    m
    (matita_arithmetics_nat.lt_plus_to_lt_l
       (mod n q)
       (matita_arithmetics_nat.times (div n q) q)
       (matita_arithmetics_nat.times m q)
       (matita_arithmetics_nat.lt_to_le_to_lt
          (matita_arithmetics_nat.plus (matita_arithmetics_nat.times (div n q) q) (mod n q))
          (matita_arithmetics_nat.times m q)
          (matita_arithmetics_nat.plus (matita_arithmetics_nat.times m q) (mod n q))
          (matita_basics_logic.eq_coerc
             (matita_arithmetics_nat.lt n (matita_arithmetics_nat.times m q))
             (matita_arithmetics_nat.lt
                (matita_arithmetics_nat.plus (matita_arithmetics_nat.times (div n q) q) (mod n q))
                (matita_arithmetics_nat.times m q))
             Hlt
             (matita_basics_logic.rewrite_r
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.times q (div n q))
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   (pts.u pts.var)
                   (matita_arithmetics_nat.lt n (matita_arithmetics_nat.times m q))
                   (matita_arithmetics_nat.lt
                      (matita_arithmetics_nat.plus __ (mod n q))
                      (matita_arithmetics_nat.times m q)))
                (matita_basics_logic.rewrite_r
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.plus
                      (mod n q)
                      (matita_arithmetics_nat.times q (div n q)))
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      (pts.u pts.var)
                      (matita_arithmetics_nat.lt n (matita_arithmetics_nat.times m q))
                      (matita_arithmetics_nat.lt __ (matita_arithmetics_nat.times m q)))
                   (matita_basics_logic.rewrite_l
                      matita_arithmetics_nat.nat
                      n
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         (pts.u pts.var)
                         (matita_arithmetics_nat.lt n (matita_arithmetics_nat.times m q))
                         (matita_arithmetics_nat.lt __ (matita_arithmetics_nat.times m q)))
                      (matita_basics_logic.refl
                         (pts.u pts.var)
                         (matita_arithmetics_nat.lt n (matita_arithmetics_nat.times m q)))
                      (matita_arithmetics_nat.plus
                         (mod n q)
                         (matita_arithmetics_nat.times q (div n q)))
                      (matita_basics_logic.rewrite_l
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.times q (div n q))
                            (mod n q))
                         (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq matita_arithmetics_nat.nat n __)
                         (matita_basics_logic.rewrite_l
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.times (div n q) q)
                            (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                             matita_basics_logic.eq
                               matita_arithmetics_nat.nat
                               n
                               (matita_arithmetics_nat.plus __ (mod n q)))
                            (div_mod n q)
                            (matita_arithmetics_nat.times q (div n q))
                            (matita_arithmetics_nat.commutative_times (div n q) q))
                         (matita_arithmetics_nat.plus
                            (mod n q)
                            (matita_arithmetics_nat.times q (div n q)))
                         (matita_arithmetics_nat.commutative_plus
                            (matita_arithmetics_nat.times q (div n q))
                            (mod n q))))
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times q (div n q))
                      (mod n q))
                   (matita_arithmetics_nat.commutative_plus
                      (matita_arithmetics_nat.times q (div n q))
                      (mod n q)))
                (matita_arithmetics_nat.times (div n q) q)
                (matita_arithmetics_nat.commutative_times (div n q) q)))
          (matita_arithmetics_nat.le_plus_n_r (mod n q) (matita_arithmetics_nat.times m q)))).

def le_div_S_S_div :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) ->
  pts.El
    pts.var
    (matita_arithmetics_nat.le
       (div (matita_arithmetics_nat.S n) m)
       (matita_arithmetics_nat.S (div n m)))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posm:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) =>
  le_times_to_le_div2
    (matita_arithmetics_nat.S (div n m))
    (matita_arithmetics_nat.S n)
    m
    posm
    (lt_div_S n m posm).

def le_times_div_div_times :
  a:(pts.El pts.var matita_arithmetics_nat.nat) ->
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) ->
  pts.El
    pts.var
    (matita_arithmetics_nat.le
       (matita_arithmetics_nat.times a (div n m))
       (div (matita_arithmetics_nat.times a n) m))
  :=
  a:(pts.El pts.var matita_arithmetics_nat.nat) =>
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posm:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) =>
  le_times_to_le_div
    (matita_arithmetics_nat.times a n)
    m
    (matita_arithmetics_nat.times a (div n m))
    posm
    (matita_basics_logic.eq_coerc
       (matita_arithmetics_nat.le
          (matita_arithmetics_nat.times m (matita_arithmetics_nat.times a (div n m)))
          (matita_arithmetics_nat.plus
             (matita_arithmetics_nat.times a (mod n m))
             (matita_arithmetics_nat.times m (matita_arithmetics_nat.times a (div n m)))))
       (matita_arithmetics_nat.le
          (matita_arithmetics_nat.times m (matita_arithmetics_nat.times a (div n m)))
          (matita_arithmetics_nat.times a n))
       (matita_arithmetics_nat.le_plus_n
          (matita_arithmetics_nat.times a (mod n m))
          (matita_arithmetics_nat.times m (matita_arithmetics_nat.times a (div n m))))
       (matita_basics_logic.rewrite_r
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.times a (matita_arithmetics_nat.times m (div n m)))
          (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
           matita_basics_logic.eq
             (pts.u pts.var)
             (matita_arithmetics_nat.le
                __
                (matita_arithmetics_nat.plus (matita_arithmetics_nat.times a (mod n m)) __))
             (matita_arithmetics_nat.le __ (matita_arithmetics_nat.times a n)))
          (matita_basics_logic.rewrite_l
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.times
                a
                (matita_arithmetics_nat.plus (mod n m) (matita_arithmetics_nat.times m (div n m))))
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq
                (pts.u pts.var)
                (matita_arithmetics_nat.le
                   (matita_arithmetics_nat.times a (matita_arithmetics_nat.times m (div n m)))
                   __)
                (matita_arithmetics_nat.le
                   (matita_arithmetics_nat.times a (matita_arithmetics_nat.times m (div n m)))
                   (matita_arithmetics_nat.times a n)))
             (matita_basics_logic.rewrite_l
                matita_arithmetics_nat.nat
                n
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   (pts.u pts.var)
                   (matita_arithmetics_nat.le
                      (matita_arithmetics_nat.times
                         a
                         (matita_arithmetics_nat.times m (div n m)))
                      (matita_arithmetics_nat.times a __))
                   (matita_arithmetics_nat.le
                      (matita_arithmetics_nat.times
                         a
                         (matita_arithmetics_nat.times m (div n m)))
                      (matita_arithmetics_nat.times a n)))
                (matita_basics_logic.refl
                   (pts.u pts.var)
                   (matita_arithmetics_nat.le
                      (matita_arithmetics_nat.times
                         a
                         (matita_arithmetics_nat.times m (div n m)))
                      (matita_arithmetics_nat.times a n)))
                (matita_arithmetics_nat.plus (mod n m) (matita_arithmetics_nat.times m (div n m)))
                (matita_basics_logic.rewrite_l
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times m (div n m))
                      (mod n m))
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq matita_arithmetics_nat.nat n __)
                   (matita_basics_logic.rewrite_l
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.times (div n m) m)
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         n
                         (matita_arithmetics_nat.plus __ (mod n m)))
                      (div_mod n m)
                      (matita_arithmetics_nat.times m (div n m))
                      (matita_arithmetics_nat.commutative_times (div n m) m))
                   (matita_arithmetics_nat.plus
                      (mod n m)
                      (matita_arithmetics_nat.times m (div n m)))
                   (matita_arithmetics_nat.commutative_plus
                      (matita_arithmetics_nat.times m (div n m))
                      (mod n m))))
             (matita_arithmetics_nat.plus
                (matita_arithmetics_nat.times a (mod n m))
                (matita_arithmetics_nat.times a (matita_arithmetics_nat.times m (div n m))))
             (matita_arithmetics_nat.distributive_times_plus
                a
                (mod n m)
                (matita_arithmetics_nat.times m (div n m))))
          (matita_arithmetics_nat.times m (matita_arithmetics_nat.times a (div n m)))
          (matita_arithmetics_nat.times_times m a (div n m)))).

def monotonic_div :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) ->
  pts.El
    pts.var
    (matita_basics_relations.monotonic
       matita_arithmetics_nat.nat
       matita_arithmetics_nat.le
       (m:(pts.El pts.var matita_arithmetics_nat.nat) => div m n))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) =>
  a:(pts.El pts.var matita_arithmetics_nat.nat) =>
  b:(pts.El pts.var matita_arithmetics_nat.nat) =>
  leab:(pts.El pts.var (matita_arithmetics_nat.le a b)) =>
  le_times_to_le_div
    b
    n
    (div a n)
    posn
    (matita_arithmetics_nat.le_plus_b
       (mod a n)
       (matita_arithmetics_nat.times n (div a n))
       b
       (matita_basics_logic.eq_coerc
          (matita_arithmetics_nat.le a b)
          (matita_arithmetics_nat.le
             (matita_arithmetics_nat.plus (matita_arithmetics_nat.times n (div a n)) (mod a n))
             b)
          leab
          (matita_basics_logic.rewrite_r
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.plus (mod a n) (matita_arithmetics_nat.times n (div a n)))
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq
                (pts.u pts.var)
                (matita_arithmetics_nat.le a b)
                (matita_arithmetics_nat.le __ b))
             (matita_basics_logic.rewrite_r
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.plus (mod a n) (matita_arithmetics_nat.times n (div a n)))
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   (pts.u pts.var)
                   (matita_arithmetics_nat.le __ b)
                   (matita_arithmetics_nat.le
                      (matita_arithmetics_nat.plus
                         (mod a n)
                         (matita_arithmetics_nat.times n (div a n)))
                      b))
                (matita_basics_logic.refl
                   (pts.u pts.var)
                   (matita_arithmetics_nat.le
                      (matita_arithmetics_nat.plus
                         (mod a n)
                         (matita_arithmetics_nat.times n (div a n)))
                      b))
                a
                (matita_basics_logic.rewrite_l
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times n (div a n))
                      (mod a n))
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq matita_arithmetics_nat.nat a __)
                   (matita_basics_logic.rewrite_l
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.times (div a n) n)
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         a
                         (matita_arithmetics_nat.plus __ (mod a n)))
                      (div_mod a n)
                      (matita_arithmetics_nat.times n (div a n))
                      (matita_arithmetics_nat.commutative_times (div a n) n))
                   (matita_arithmetics_nat.plus
                      (mod a n)
                      (matita_arithmetics_nat.times n (div a n)))
                   (matita_arithmetics_nat.commutative_plus
                      (matita_arithmetics_nat.times n (div a n))
                      (mod a n))))
             (matita_arithmetics_nat.plus (matita_arithmetics_nat.times n (div a n)) (mod a n))
             (matita_arithmetics_nat.commutative_plus
                (matita_arithmetics_nat.times n (div a n))
                (mod a n))))).

def pos_div :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) ->
  __1:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) ->
  __2:(pts.El
         pts.var
         (matita_basics_logic.eq matita_arithmetics_nat.nat (mod n m) matita_arithmetics_nat.O)) ->
  pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O (div n m))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posm:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) =>
  posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) =>
  mod0:(pts.El
          pts.var
          (matita_basics_logic.eq matita_arithmetics_nat.nat (mod n m) matita_arithmetics_nat.O)) =>
  matita_arithmetics_nat.lt_times_n_to_lt_l
    m
    matita_arithmetics_nat.O
    (div n m)
    (matita_basics_logic.eq_coerc
       (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)
       (matita_arithmetics_nat.lt
          (matita_arithmetics_nat.times matita_arithmetics_nat.O m)
          (matita_arithmetics_nat.times (div n m) m))
       posn
       (matita_basics_logic.rewrite_r
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.times m matita_arithmetics_nat.O)
          (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
           matita_basics_logic.eq
             (pts.u pts.var)
             (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)
             (matita_arithmetics_nat.lt __ (matita_arithmetics_nat.times (div n m) m)))
          (matita_basics_logic.rewrite_l
             matita_arithmetics_nat.nat
             matita_arithmetics_nat.O
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq
                (pts.u pts.var)
                (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)
                (matita_arithmetics_nat.lt __ (matita_arithmetics_nat.times (div n m) m)))
             (matita_basics_logic.rewrite_r
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.times m (div n m))
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   (pts.u pts.var)
                   (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)
                   (matita_arithmetics_nat.lt matita_arithmetics_nat.O __))
                (matita_basics_logic.rewrite_l
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.times m (div n m))
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      (pts.u pts.var)
                      (matita_arithmetics_nat.lt matita_arithmetics_nat.O __)
                      (matita_arithmetics_nat.lt
                         matita_arithmetics_nat.O
                         (matita_arithmetics_nat.times m (div n m))))
                   (matita_basics_logic.refl
                      (pts.u pts.var)
                      (matita_arithmetics_nat.lt
                         matita_arithmetics_nat.O
                         (matita_arithmetics_nat.times m (div n m))))
                   n
                   (matita_basics_logic.rewrite_r
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.minus n matita_arithmetics_nat.O)
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.times m (div n m))
                         __)
                      (matita_basics_logic.rewrite_l
                         matita_arithmetics_nat.nat
                         (mod n m)
                         (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.times m (div n m))
                            (matita_arithmetics_nat.minus n __))
                         (matita_basics_logic.rewrite_l
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.times (div n m) m)
                            (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                             matita_basics_logic.eq
                               matita_arithmetics_nat.nat
                               __
                               (matita_arithmetics_nat.minus n (mod n m)))
                            (eq_times_div_minus_mod n m)
                            (matita_arithmetics_nat.times m (div n m))
                            (matita_arithmetics_nat.commutative_times (div n m) m))
                         matita_arithmetics_nat.O
                         mod0)
                      n
                      (matita_arithmetics_nat.minus_n_O n)))
                (matita_arithmetics_nat.times (div n m) m)
                (matita_arithmetics_nat.commutative_times (div n m) m))
             (matita_arithmetics_nat.times m matita_arithmetics_nat.O)
             (matita_arithmetics_nat.times_n_O m))
          (matita_arithmetics_nat.times matita_arithmetics_nat.O m)
          (matita_arithmetics_nat.commutative_times matita_arithmetics_nat.O m))).

def let_clause_1034 :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) ->
  posm:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) ->
  x2515:(pts.El pts.var matita_arithmetics_nat.nat) ->
  x2516:(pts.El pts.var matita_arithmetics_nat.nat) ->
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       x2515
       (matita_arithmetics_nat.plus
          (mod x2515 x2516)
          (matita_arithmetics_nat.times x2516 (div x2515 x2516))))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  q:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) =>
  posm:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) =>
  x2515:(pts.El pts.var matita_arithmetics_nat.nat) =>
  x2516:(pts.El pts.var matita_arithmetics_nat.nat) =>
  matita_basics_logic.rewrite_l
    matita_arithmetics_nat.nat
    (matita_arithmetics_nat.plus
       (matita_arithmetics_nat.times x2516 (div x2515 x2516))
       (mod x2515 x2516))
    (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
     matita_basics_logic.eq matita_arithmetics_nat.nat x2515 __)
    (matita_basics_logic.rewrite_l
       matita_arithmetics_nat.nat
       (matita_arithmetics_nat.times (div x2515 x2516) x2516)
       (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
        matita_basics_logic.eq
          matita_arithmetics_nat.nat
          x2515
          (matita_arithmetics_nat.plus __ (mod x2515 x2516)))
       (div_mod x2515 x2516)
       (matita_arithmetics_nat.times x2516 (div x2515 x2516))
       (matita_arithmetics_nat.commutative_times (div x2515 x2516) x2516))
    (matita_arithmetics_nat.plus
       (mod x2515 x2516)
       (matita_arithmetics_nat.times x2516 (div x2515 x2516)))
    (matita_arithmetics_nat.commutative_plus
       (matita_arithmetics_nat.times x2516 (div x2515 x2516))
       (mod x2515 x2516)).

def eq_div_div_div_times :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) ->
  __1:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) ->
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (div (div q n) m)
       (div q (matita_arithmetics_nat.times n m)))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  q:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) =>
  posm:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) =>
  div_mod_spec_to_eq
    q
    (matita_arithmetics_nat.times n m)
    (div (div q n) m)
    (matita_arithmetics_nat.plus (mod q n) (matita_arithmetics_nat.times n (mod (div q n) m)))
    (div q (matita_arithmetics_nat.times n m))
    (mod q (matita_arithmetics_nat.times n m))
    (div_mod_spec_intro
       q
       (matita_arithmetics_nat.times n m)
       (div (div q n) m)
       (matita_arithmetics_nat.plus (mod q n) (matita_arithmetics_nat.times n (mod (div q n) m)))
       (matita_arithmetics_nat.lt_to_le_to_lt
          (matita_arithmetics_nat.plus (mod q n) (matita_arithmetics_nat.times n (mod (div q n) m)))
          (matita_arithmetics_nat.times n (matita_arithmetics_nat.S (mod (div q n) m)))
          (matita_arithmetics_nat.times n m)
          (matita_basics_logic.eq_coerc
             (matita_arithmetics_nat.lt
                (matita_arithmetics_nat.plus
                   (mod q n)
                   (matita_arithmetics_nat.times n (mod (div q n) m)))
                (matita_arithmetics_nat.plus n (matita_arithmetics_nat.times n (mod (div q n) m))))
             (matita_arithmetics_nat.lt
                (matita_arithmetics_nat.plus
                   (mod q n)
                   (matita_arithmetics_nat.times n (mod (div q n) m)))
                (matita_arithmetics_nat.times n (matita_arithmetics_nat.S (mod (div q n) m))))
             (matita_arithmetics_nat.monotonic_lt_plus_l
                (matita_arithmetics_nat.times n (mod (div q n) m))
                (mod q n)
                n
                (lt_mod_m_m q n posn))
             (matita_basics_logic.rewrite_l
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.plus n (matita_arithmetics_nat.times n (mod (div q n) m)))
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   (pts.u pts.var)
                   (matita_arithmetics_nat.lt
                      (matita_arithmetics_nat.plus
                         (mod q n)
                         (matita_arithmetics_nat.times n (mod (div q n) m)))
                      (matita_arithmetics_nat.plus
                         n
                         (matita_arithmetics_nat.times n (mod (div q n) m))))
                   (matita_arithmetics_nat.lt
                      (matita_arithmetics_nat.plus
                         (mod q n)
                         (matita_arithmetics_nat.times n (mod (div q n) m)))
                      __))
                (matita_basics_logic.refl
                   (pts.u pts.var)
                   (matita_arithmetics_nat.lt
                      (matita_arithmetics_nat.plus
                         (mod q n)
                         (matita_arithmetics_nat.times n (mod (div q n) m)))
                      (matita_arithmetics_nat.plus
                         n
                         (matita_arithmetics_nat.times n (mod (div q n) m)))))
                (matita_arithmetics_nat.times n (matita_arithmetics_nat.S (mod (div q n) m)))
                (matita_arithmetics_nat.times_n_Sm n (mod (div q n) m))))
          (matita_arithmetics_nat.monotonic_le_times_r
             n
             (matita_arithmetics_nat.S (mod (div q n) m))
             m
             (lt_mod_m_m (div q n) m posm)))
       (matita_basics_logic.rewrite_r
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.times n (matita_arithmetics_nat.times (div (div q n) m) m))
          (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
           matita_basics_logic.eq
             matita_arithmetics_nat.nat
             q
             (matita_arithmetics_nat.plus
                __
                (matita_arithmetics_nat.plus
                   (mod q n)
                   (matita_arithmetics_nat.times n (mod (div q n) m)))))
          (matita_basics_logic.rewrite_r
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.times m (div (div q n) m))
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq
                matita_arithmetics_nat.nat
                q
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.times n __)
                   (matita_arithmetics_nat.plus
                      (mod q n)
                      (matita_arithmetics_nat.times n (mod (div q n) m)))))
             (matita_basics_logic.rewrite_r
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.plus
                   (mod q n)
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times
                         n
                         (matita_arithmetics_nat.times m (div (div q n) m)))
                      (matita_arithmetics_nat.times n (mod (div q n) m))))
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq matita_arithmetics_nat.nat q __)
                (matita_basics_logic.rewrite_r
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times n (mod (div q n) m))
                      (matita_arithmetics_nat.times
                         n
                         (matita_arithmetics_nat.times m (div (div q n) m))))
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      q
                      (matita_arithmetics_nat.plus (mod q n) __))
                   (matita_basics_logic.rewrite_l
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.times
                         n
                         (matita_arithmetics_nat.plus
                            (mod (div q n) m)
                            (matita_arithmetics_nat.times m (div (div q n) m))))
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         q
                         (matita_arithmetics_nat.plus (mod q n) __))
                      (matita_basics_logic.rewrite_l
                         matita_arithmetics_nat.nat
                         (div q n)
                         (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            q
                            (matita_arithmetics_nat.plus
                               (mod q n)
                               (matita_arithmetics_nat.times n __)))
                         (matita_basics_logic.rewrite_l
                            matita_arithmetics_nat.nat
                            q
                            (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                             matita_basics_logic.eq matita_arithmetics_nat.nat q __)
                            (matita_basics_logic.refl matita_arithmetics_nat.nat q)
                            (matita_arithmetics_nat.plus
                               (mod q n)
                               (matita_arithmetics_nat.times n (div q n)))
                            (let_clause_1034 n m q posn posm q n))
                         (matita_arithmetics_nat.plus
                            (mod (div q n) m)
                            (matita_arithmetics_nat.times m (div (div q n) m)))
                         (let_clause_1034 n m q posn posm (div q n) m))
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.times n (mod (div q n) m))
                         (matita_arithmetics_nat.times
                            n
                            (matita_arithmetics_nat.times m (div (div q n) m))))
                      (matita_arithmetics_nat.distributive_times_plus
                         n
                         (mod (div q n) m)
                         (matita_arithmetics_nat.times m (div (div q n) m))))
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times
                         n
                         (matita_arithmetics_nat.times m (div (div q n) m)))
                      (matita_arithmetics_nat.times n (mod (div q n) m)))
                   (matita_arithmetics_nat.commutative_plus
                      (matita_arithmetics_nat.times
                         n
                         (matita_arithmetics_nat.times m (div (div q n) m)))
                      (matita_arithmetics_nat.times n (mod (div q n) m))))
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.times
                      n
                      (matita_arithmetics_nat.times m (div (div q n) m)))
                   (matita_arithmetics_nat.plus
                      (mod q n)
                      (matita_arithmetics_nat.times n (mod (div q n) m))))
                (matita_basics_logic.rewrite_l
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.plus
                         (mod q n)
                         (matita_arithmetics_nat.times
                            n
                            (matita_arithmetics_nat.times m (div (div q n) m))))
                      (matita_arithmetics_nat.times n (mod (div q n) m)))
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.times
                            n
                            (matita_arithmetics_nat.times m (div (div q n) m)))
                         (matita_arithmetics_nat.plus
                            (mod q n)
                            (matita_arithmetics_nat.times n (mod (div q n) m))))
                      __)
                   (matita_arithmetics_nat.assoc_plus1
                      (matita_arithmetics_nat.times n (mod (div q n) m))
                      (mod q n)
                      (matita_arithmetics_nat.times
                         n
                         (matita_arithmetics_nat.times m (div (div q n) m))))
                   (matita_arithmetics_nat.plus
                      (mod q n)
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.times
                            n
                            (matita_arithmetics_nat.times m (div (div q n) m)))
                         (matita_arithmetics_nat.times n (mod (div q n) m))))
                   (matita_arithmetics_nat.associative_plus
                      (mod q n)
                      (matita_arithmetics_nat.times
                         n
                         (matita_arithmetics_nat.times m (div (div q n) m)))
                      (matita_arithmetics_nat.times n (mod (div q n) m)))))
             (matita_arithmetics_nat.times (div (div q n) m) m)
             (matita_arithmetics_nat.commutative_times (div (div q n) m) m))
          (matita_arithmetics_nat.times (div (div q n) m) (matita_arithmetics_nat.times n m))
          (matita_arithmetics_nat.times_times (div (div q n) m) n m)))
    (div_mod_spec_div_mod
       q
       (matita_arithmetics_nat.times n m)
       (matita_basics_logic.eq_coerc
          (matita_arithmetics_nat.lt
             (matita_arithmetics_nat.times matita_arithmetics_nat.O matita_arithmetics_nat.O)
             (matita_arithmetics_nat.times n m))
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O (matita_arithmetics_nat.times n m))
          (matita_arithmetics_nat.lt_times
             matita_arithmetics_nat.O
             n
             matita_arithmetics_nat.O
             m
             posn
             posm)
          (matita_basics_logic.rewrite_l
             matita_arithmetics_nat.nat
             matita_arithmetics_nat.O
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq
                (pts.u pts.var)
                (matita_arithmetics_nat.lt __ (matita_arithmetics_nat.times n m))
                (matita_arithmetics_nat.lt
                   matita_arithmetics_nat.O
                   (matita_arithmetics_nat.times n m)))
             (matita_basics_logic.refl
                (pts.u pts.var)
                (matita_arithmetics_nat.lt
                   matita_arithmetics_nat.O
                   (matita_arithmetics_nat.times n m)))
             (matita_arithmetics_nat.times matita_arithmetics_nat.O matita_arithmetics_nat.O)
             (matita_arithmetics_nat.times_O_n matita_arithmetics_nat.O)))).

def eq_div_div_div_div :
  n:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  q:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) ->
  __1:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) ->
  pts.El
    pts.var
    (matita_basics_logic.eq matita_arithmetics_nat.nat (div (div q n) m) (div (div q m) n))
  :=
  n:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  q:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posn:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)) =>
  posm:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) =>
  matita_basics_logic.trans_eq
    matita_arithmetics_nat.nat
    (div (div q n) m)
    (div q (matita_arithmetics_nat.times n m))
    (div (div q m) n)
    (eq_div_div_div_times n m q posn posm)
    (matita_basics_logic.sym_eq
       matita_arithmetics_nat.nat
       (div (div q m) n)
       (div q (matita_arithmetics_nat.times n m))
       (matita_basics_logic.eq_coerc
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (div (div q m) n)
             (div q (matita_arithmetics_nat.times m n)))
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (div (div q m) n)
             (div q (matita_arithmetics_nat.times n m)))
          (eq_div_div_div_times m n q posm posn)
          (matita_basics_logic.rewrite_r
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.times n m)
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq
                (pts.u pts.var)
                (matita_basics_logic.eq matita_arithmetics_nat.nat (div (div q m) n) (div q __))
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   (div (div q m) n)
                   (div q (matita_arithmetics_nat.times n m))))
             (matita_basics_logic.refl
                (pts.u pts.var)
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   (div (div q m) n)
                   (div q (matita_arithmetics_nat.times n m))))
             (matita_arithmetics_nat.times m n)
             (matita_arithmetics_nat.commutative_times m n)))).

def lt_to_le_times_to_lt_S_to_div :
  a:(pts.El pts.var matita_arithmetics_nat.nat) ->
  c:(pts.El pts.var matita_arithmetics_nat.nat) ->
  b:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O b)) ->
  __1:(pts.El pts.var (matita_arithmetics_nat.le (matita_arithmetics_nat.times b c) a)) ->
  __2:(pts.El
         pts.var
         (matita_arithmetics_nat.lt a (matita_arithmetics_nat.times b (matita_arithmetics_nat.S c)))) ->
  pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat (div a b) c)
  :=
  a:(pts.El pts.var matita_arithmetics_nat.nat) =>
  c:(pts.El pts.var matita_arithmetics_nat.nat) =>
  b:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posb:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O b)) =>
  lea:(pts.El pts.var (matita_arithmetics_nat.le (matita_arithmetics_nat.times b c) a)) =>
  lta:(pts.El
         pts.var
         (matita_arithmetics_nat.lt
            a
            (matita_arithmetics_nat.times b (matita_arithmetics_nat.S c)))) =>
  div_mod_spec_to_eq
    a
    b
    (div a b)
    (mod a b)
    c
    (matita_arithmetics_nat.minus a (matita_arithmetics_nat.times b c))
    (div_mod_spec_div_mod a b posb)
    (div_mod_spec_intro
       a
       b
       c
       (matita_arithmetics_nat.minus a (matita_arithmetics_nat.times b c))
       (matita_arithmetics_nat.lt_plus_to_minus
          a
          (matita_arithmetics_nat.times b c)
          b
          lea
          (matita_basics_logic.eq_coerc
             (matita_arithmetics_nat.lt
                a
                (matita_arithmetics_nat.times b (matita_arithmetics_nat.S c)))
             (matita_arithmetics_nat.lt
                a
                (matita_arithmetics_nat.plus b (matita_arithmetics_nat.times b c)))
             lta
             (matita_basics_logic.rewrite_l
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.plus b (matita_arithmetics_nat.times b c))
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   (pts.u pts.var)
                   (matita_arithmetics_nat.lt a __)
                   (matita_arithmetics_nat.lt
                      a
                      (matita_arithmetics_nat.plus b (matita_arithmetics_nat.times b c))))
                (matita_basics_logic.rewrite_r
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.times c b)
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      (pts.u pts.var)
                      (matita_arithmetics_nat.lt a (matita_arithmetics_nat.plus b __))
                      (matita_arithmetics_nat.lt
                         a
                         (matita_arithmetics_nat.plus b (matita_arithmetics_nat.times b c))))
                   (matita_basics_logic.rewrite_r
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.times c b)
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         (pts.u pts.var)
                         (matita_arithmetics_nat.lt
                            a
                            (matita_arithmetics_nat.plus b (matita_arithmetics_nat.times c b)))
                         (matita_arithmetics_nat.lt a (matita_arithmetics_nat.plus b __)))
                      (matita_basics_logic.refl
                         (pts.u pts.var)
                         (matita_arithmetics_nat.lt
                            a
                            (matita_arithmetics_nat.plus b (matita_arithmetics_nat.times c b))))
                      (matita_arithmetics_nat.times b c)
                      (matita_arithmetics_nat.commutative_times b c))
                   (matita_arithmetics_nat.times b c)
                   (matita_arithmetics_nat.commutative_times b c))
                (matita_arithmetics_nat.times b (matita_arithmetics_nat.S c))
                (matita_arithmetics_nat.times_n_Sm b c))))
       (matita_basics_logic.sym_eq
          matita_arithmetics_nat.nat
          (matita_arithmetics_nat.plus
             (matita_arithmetics_nat.times c b)
             (matita_arithmetics_nat.minus a (matita_arithmetics_nat.times b c)))
          a
          (matita_basics_logic.eq_coerc
             (matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.minus a (matita_arithmetics_nat.times c b))
                   (matita_arithmetics_nat.times c b))
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.plus a (matita_arithmetics_nat.times c b))
                   (matita_arithmetics_nat.times c b)))
             (matita_basics_logic.eq
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.times c b)
                   (matita_arithmetics_nat.minus a (matita_arithmetics_nat.times b c)))
                a)
             (matita_arithmetics_nat.plus_minus
                (matita_arithmetics_nat.times c b)
                a
                (matita_arithmetics_nat.times c b)
                (matita_basics_logic.eq_coerc
                   (matita_arithmetics_nat.le (matita_arithmetics_nat.times b c) a)
                   (matita_arithmetics_nat.le (matita_arithmetics_nat.times c b) a)
                   lea
                   (matita_basics_logic.rewrite_r
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.times c b)
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         (pts.u pts.var)
                         (matita_arithmetics_nat.le __ a)
                         (matita_arithmetics_nat.le (matita_arithmetics_nat.times c b) a))
                      (matita_basics_logic.refl
                         (pts.u pts.var)
                         (matita_arithmetics_nat.le (matita_arithmetics_nat.times c b) a))
                      (matita_arithmetics_nat.times b c)
                      (matita_arithmetics_nat.commutative_times b c))))
             (matita_basics_logic.rewrite_r
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.times c b)
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   (pts.u pts.var)
                   (matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.minus a (matita_arithmetics_nat.times c b))
                         (matita_arithmetics_nat.times c b))
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.plus a (matita_arithmetics_nat.times c b))
                         (matita_arithmetics_nat.times c b)))
                   (matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.times c b)
                         (matita_arithmetics_nat.minus a __))
                      a))
                (matita_basics_logic.rewrite_r
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times c b)
                      (matita_arithmetics_nat.minus a (matita_arithmetics_nat.times c b)))
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      (pts.u pts.var)
                      (matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         __
                         (matita_arithmetics_nat.minus
                            (matita_arithmetics_nat.plus a (matita_arithmetics_nat.times c b))
                            (matita_arithmetics_nat.times c b)))
                      (matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.times c b)
                            (matita_arithmetics_nat.minus
                               a
                               (matita_arithmetics_nat.times c b)))
                         a))
                   (matita_basics_logic.rewrite_l
                      matita_arithmetics_nat.nat
                      a
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         (pts.u pts.var)
                         (matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.times c b)
                               (matita_arithmetics_nat.minus
                                  a
                                  (matita_arithmetics_nat.times c b)))
                            __)
                         (matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.times c b)
                               (matita_arithmetics_nat.minus
                                  a
                                  (matita_arithmetics_nat.times c b)))
                            a))
                      (matita_basics_logic.refl
                         (pts.u pts.var)
                         (matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.times c b)
                               (matita_arithmetics_nat.minus
                                  a
                                  (matita_arithmetics_nat.times c b)))
                            a))
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.plus a (matita_arithmetics_nat.times c b))
                         (matita_arithmetics_nat.times c b))
                      (matita_arithmetics_nat.minus_plus_m_m
                         a
                         (matita_arithmetics_nat.times c b)))
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.minus a (matita_arithmetics_nat.times c b))
                      (matita_arithmetics_nat.times c b))
                   (matita_arithmetics_nat.commutative_plus
                      (matita_arithmetics_nat.minus a (matita_arithmetics_nat.times c b))
                      (matita_arithmetics_nat.times c b)))
                (matita_arithmetics_nat.times b c)
                (matita_arithmetics_nat.commutative_times b c))))).

def div_times_times :
  a:(pts.El pts.var matita_arithmetics_nat.nat) ->
  b:(pts.El pts.var matita_arithmetics_nat.nat) ->
  c:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O c)) ->
  __1:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O b)) ->
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (div a b)
       (div (matita_arithmetics_nat.times a c) (matita_arithmetics_nat.times b c)))
  :=
  a:(pts.El pts.var matita_arithmetics_nat.nat) =>
  b:(pts.El pts.var matita_arithmetics_nat.nat) =>
  c:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posc:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O c)) =>
  posb:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O b)) =>
  matita_basics_logic.eq_ind_r
    matita_arithmetics_nat.nat
    (matita_arithmetics_nat.times c b)
    (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
     __:(pts.El
           pts.var
           (matita_basics_logic.eq
              matita_arithmetics_nat.nat
              x
              (matita_arithmetics_nat.times c b))) =>
     matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (div a b)
       (div (matita_arithmetics_nat.times a c) x))
    (matita_basics_logic.eq_ind
       matita_arithmetics_nat.nat
       (div (div (matita_arithmetics_nat.times a c) c) b)
       (x_1:(pts.El pts.var matita_arithmetics_nat.nat) =>
        _x_2:(pts.El
                pts.var
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   (div (div (matita_arithmetics_nat.times a c) c) b)
                   x_1)) =>
        matita_basics_logic.eq matita_arithmetics_nat.nat (div a b) x_1)
       (matita_basics_logic.eq_ind_r
          matita_arithmetics_nat.nat
          a
          (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
           __:(pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat x a)) =>
           matita_basics_logic.eq matita_arithmetics_nat.nat (div a b) (div x b))
          (matita_basics_logic.refl matita_arithmetics_nat.nat (div a b))
          (div (matita_arithmetics_nat.times a c) c)
          (div_times a c posc))
       (div (matita_arithmetics_nat.times a c) (matita_arithmetics_nat.times c b))
       (eq_div_div_div_times c b (matita_arithmetics_nat.times a c) posc posb))
    (matita_arithmetics_nat.times b c)
    (matita_arithmetics_nat.commutative_times b c).

def times_mod :
  a:(pts.El pts.var matita_arithmetics_nat.nat) ->
  b:(pts.El pts.var matita_arithmetics_nat.nat) ->
  c:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O c)) ->
  __1:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O b)) ->
  pts.El
    pts.var
    (matita_basics_logic.eq
       matita_arithmetics_nat.nat
       (mod (matita_arithmetics_nat.times a c) (matita_arithmetics_nat.times b c))
       (matita_arithmetics_nat.times c (mod a b)))
  :=
  a:(pts.El pts.var matita_arithmetics_nat.nat) =>
  b:(pts.El pts.var matita_arithmetics_nat.nat) =>
  c:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posc:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O c)) =>
  posb:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O b)) =>
  div_mod_spec_to_eq2
    (matita_arithmetics_nat.times a c)
    (matita_arithmetics_nat.times b c)
    (div a b)
    (mod (matita_arithmetics_nat.times a c) (matita_arithmetics_nat.times b c))
    (div a b)
    (matita_arithmetics_nat.times c (mod a b))
    (matita_basics_logic.eq_ind_r
       matita_arithmetics_nat.nat
       (div (matita_arithmetics_nat.times a c) (matita_arithmetics_nat.times b c))
       (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
        __:(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 x
                 (div (matita_arithmetics_nat.times a c) (matita_arithmetics_nat.times b c)))) =>
        div_mod_spec
          (matita_arithmetics_nat.times a c)
          (matita_arithmetics_nat.times b c)
          x
          (mod (matita_arithmetics_nat.times a c) (matita_arithmetics_nat.times b c)))
       (div_mod_spec_div_mod
          (matita_arithmetics_nat.times a c)
          (matita_arithmetics_nat.times b c)
          (matita_basics_logic.eq_coerc
             (matita_arithmetics_nat.lt
                (matita_arithmetics_nat.times matita_arithmetics_nat.O matita_arithmetics_nat.O)
                (matita_arithmetics_nat.times b c))
             (matita_arithmetics_nat.lt
                matita_arithmetics_nat.O
                (matita_arithmetics_nat.times b c))
             (matita_arithmetics_nat.lt_times
                matita_arithmetics_nat.O
                b
                matita_arithmetics_nat.O
                c
                posb
                posc)
             (matita_basics_logic.rewrite_l
                matita_arithmetics_nat.nat
                matita_arithmetics_nat.O
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   (pts.u pts.var)
                   (matita_arithmetics_nat.lt __ (matita_arithmetics_nat.times b c))
                   (matita_arithmetics_nat.lt
                      matita_arithmetics_nat.O
                      (matita_arithmetics_nat.times b c)))
                (matita_basics_logic.refl
                   (pts.u pts.var)
                   (matita_arithmetics_nat.lt
                      matita_arithmetics_nat.O
                      (matita_arithmetics_nat.times b c)))
                (matita_arithmetics_nat.times matita_arithmetics_nat.O matita_arithmetics_nat.O)
                (matita_arithmetics_nat.times_O_n matita_arithmetics_nat.O))))
       (div a b)
       (div_times_times a b c posc posb))
    (div_mod_spec_intro
       (matita_arithmetics_nat.times a c)
       (matita_arithmetics_nat.times b c)
       (div a b)
       (matita_arithmetics_nat.times c (mod a b))
       (matita_basics_logic.eq_coerc
          (matita_arithmetics_nat.lt
             (matita_arithmetics_nat.times c (mod a b))
             (matita_arithmetics_nat.times c b))
          (matita_arithmetics_nat.lt
             (matita_arithmetics_nat.times c (mod a b))
             (matita_arithmetics_nat.times b c))
          (matita_arithmetics_nat.monotonic_lt_times_r c posc (mod a b) b (lt_mod_m_m a b posb))
          (matita_basics_logic.rewrite_r
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.times b c)
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq
                (pts.u pts.var)
                (matita_arithmetics_nat.lt (matita_arithmetics_nat.times c (mod a b)) __)
                (matita_arithmetics_nat.lt
                   (matita_arithmetics_nat.times c (mod a b))
                   (matita_arithmetics_nat.times b c)))
             (matita_basics_logic.refl
                (pts.u pts.var)
                (matita_arithmetics_nat.lt
                   (matita_arithmetics_nat.times c (mod a b))
                   (matita_arithmetics_nat.times b c)))
             (matita_arithmetics_nat.times c b)
             (matita_arithmetics_nat.commutative_times c b)))
       (matita_basics_logic.eq_coerc
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.times a c)
             (matita_arithmetics_nat.times
                (matita_arithmetics_nat.plus (matita_arithmetics_nat.times b (div a b)) (mod a b))
                c))
          (matita_basics_logic.eq
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.times a c)
             (matita_arithmetics_nat.plus
                (matita_arithmetics_nat.times (div a b) (matita_arithmetics_nat.times b c))
                (matita_arithmetics_nat.times c (mod a b))))
          (matita_basics_logic.eq_f
             matita_arithmetics_nat.nat
             matita_arithmetics_nat.nat
             (x:(pts.El pts.var matita_arithmetics_nat.nat) => matita_arithmetics_nat.times x c)
             a
             (matita_arithmetics_nat.plus (matita_arithmetics_nat.times b (div a b)) (mod a b))
             (matita_basics_logic.rewrite_r
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.plus (mod a b) (matita_arithmetics_nat.times b (div a b)))
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq matita_arithmetics_nat.nat a __)
                (matita_basics_logic.rewrite_l
                   matita_arithmetics_nat.nat
                   a
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq matita_arithmetics_nat.nat a __)
                   (matita_basics_logic.refl matita_arithmetics_nat.nat a)
                   (matita_arithmetics_nat.plus
                      (mod a b)
                      (matita_arithmetics_nat.times b (div a b)))
                   (matita_basics_logic.rewrite_l
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.times b (div a b))
                         (mod a b))
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq matita_arithmetics_nat.nat a __)
                      (matita_basics_logic.rewrite_l
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.times (div a b) b)
                         (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            a
                            (matita_arithmetics_nat.plus __ (mod a b)))
                         (div_mod a b)
                         (matita_arithmetics_nat.times b (div a b))
                         (matita_arithmetics_nat.commutative_times (div a b) b))
                      (matita_arithmetics_nat.plus
                         (mod a b)
                         (matita_arithmetics_nat.times b (div a b)))
                      (matita_arithmetics_nat.commutative_plus
                         (matita_arithmetics_nat.times b (div a b))
                         (mod a b))))
                (matita_arithmetics_nat.plus (matita_arithmetics_nat.times b (div a b)) (mod a b))
                (matita_arithmetics_nat.commutative_plus
                   (matita_arithmetics_nat.times b (div a b))
                   (mod a b))))
          (matita_basics_logic.rewrite_l
             matita_arithmetics_nat.nat
             (matita_arithmetics_nat.times
                c
                (matita_arithmetics_nat.plus (matita_arithmetics_nat.times b (div a b)) (mod a b)))
             (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
              matita_basics_logic.eq
                (pts.u pts.var)
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.times a c)
                   __)
                (matita_basics_logic.eq
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.times a c)
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times
                         (div a b)
                         (matita_arithmetics_nat.times b c))
                      (matita_arithmetics_nat.times c (mod a b)))))
             (matita_basics_logic.rewrite_r
                matita_arithmetics_nat.nat
                (matita_arithmetics_nat.times b (matita_arithmetics_nat.times (div a b) c))
                (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                 matita_basics_logic.eq
                   (pts.u pts.var)
                   (matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.times a c)
                      (matita_arithmetics_nat.times
                         c
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.times b (div a b))
                            (mod a b))))
                   (matita_basics_logic.eq
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.times a c)
                      (matita_arithmetics_nat.plus
                         __
                         (matita_arithmetics_nat.times c (mod a b)))))
                (matita_basics_logic.rewrite_r
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.times c (div a b))
                   (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                    matita_basics_logic.eq
                      (pts.u pts.var)
                      (matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.times a c)
                         (matita_arithmetics_nat.times
                            c
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.times b (div a b))
                               (mod a b))))
                      (matita_basics_logic.eq
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.times a c)
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.times b __)
                            (matita_arithmetics_nat.times c (mod a b)))))
                   (matita_basics_logic.rewrite_r
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.times
                            b
                            (matita_arithmetics_nat.times c (div a b)))
                         (matita_arithmetics_nat.times c (mod a b)))
                      (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                       matita_basics_logic.eq
                         (pts.u pts.var)
                         (matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.times a c)
                            __)
                         (matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.times a c)
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.times
                                  b
                                  (matita_arithmetics_nat.times c (div a b)))
                               (matita_arithmetics_nat.times c (mod a b)))))
                      (matita_basics_logic.refl
                         (pts.u pts.var)
                         (matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.times a c)
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.times
                                  b
                                  (matita_arithmetics_nat.times c (div a b)))
                               (matita_arithmetics_nat.times c (mod a b)))))
                      (matita_arithmetics_nat.times
                         c
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.times b (div a b))
                            (mod a b)))
                      (matita_basics_logic.rewrite_l
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_nat.times
                            c
                            (matita_arithmetics_nat.times b (div a b)))
                         (__:(pts.El pts.var matita_arithmetics_nat.nat) =>
                          matita_basics_logic.eq
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.times
                               c
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.times b (div a b))
                                  (mod a b)))
                            (matita_arithmetics_nat.plus
                               __
                               (matita_arithmetics_nat.times c (mod a b))))
                         (matita_arithmetics_nat.distributive_times_plus
                            c
                            (matita_arithmetics_nat.times b (div a b))
                            (mod a b))
                         (matita_arithmetics_nat.times
                            b
                            (matita_arithmetics_nat.times c (div a b)))
                         (matita_arithmetics_nat.times_times c b (div a b))))
                   (matita_arithmetics_nat.times (div a b) c)
                   (matita_arithmetics_nat.commutative_times (div a b) c))
                (matita_arithmetics_nat.times (div a b) (matita_arithmetics_nat.times b c))
                (matita_arithmetics_nat.times_times (div a b) b c))
             (matita_arithmetics_nat.times
                (matita_arithmetics_nat.plus (matita_arithmetics_nat.times b (div a b)) (mod a b))
                c)
             (matita_arithmetics_nat.commutative_times
                c
                (matita_arithmetics_nat.plus (matita_arithmetics_nat.times b (div a b)) (mod a b)))))).

def le_div_times_m :
  a:(pts.El pts.var matita_arithmetics_nat.nat) ->
  i:(pts.El pts.var matita_arithmetics_nat.nat) ->
  m:(pts.El pts.var matita_arithmetics_nat.nat) ->
  __:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O i)) ->
  __1:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) ->
  pts.El
    pts.var
    (matita_arithmetics_nat.le (div (matita_arithmetics_nat.times a (div m i)) m) (div a i))
  :=
  a:(pts.El pts.var matita_arithmetics_nat.nat) =>
  i:(pts.El pts.var matita_arithmetics_nat.nat) =>
  m:(pts.El pts.var matita_arithmetics_nat.nat) =>
  posi:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O i)) =>
  posm:(pts.El pts.var (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)) =>
  matita_arithmetics_nat.transitive_le
    (div (matita_arithmetics_nat.times a (div m i)) m)
    (div (div (matita_arithmetics_nat.times a m) i) m)
    (div a i)
    (monotonic_div
       m
       posm
       (matita_arithmetics_nat.times a (div m i))
       (div (matita_arithmetics_nat.times a m) i)
       (le_times_div_div_times a m i posi))
    (matita_basics_logic.eq_ind_r
       matita_arithmetics_nat.nat
       (div (div (matita_arithmetics_nat.times a m) m) i)
       (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
        __:(pts.El
              pts.var
              (matita_basics_logic.eq
                 matita_arithmetics_nat.nat
                 x
                 (div (div (matita_arithmetics_nat.times a m) m) i))) =>
        matita_arithmetics_nat.le x (div a i))
       (matita_basics_logic.eq_ind_r
          matita_arithmetics_nat.nat
          a
          (x:(pts.El pts.var matita_arithmetics_nat.nat) =>
           __:(pts.El pts.var (matita_basics_logic.eq matita_arithmetics_nat.nat x a)) =>
           matita_arithmetics_nat.le (div x i) (div a i))
          (matita_arithmetics_nat.le_n (div a i))
          (div (matita_arithmetics_nat.times a m) m)
          (div_times a m posm))
       (div (div (matita_arithmetics_nat.times a m) i) m)
       (eq_div_div_div_div i m (matita_arithmetics_nat.times a m) posi posm)).

